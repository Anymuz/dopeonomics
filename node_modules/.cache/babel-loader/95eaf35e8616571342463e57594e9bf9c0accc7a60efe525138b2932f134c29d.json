{"ast":null,"code":"// Enhanced Production Plan Card Component\nimport React,{useState,useEffect}from'react';import{DollarSign,Info,Copy,Trash2,MoreHorizontal,ShoppingCart,Beaker,Check,AlertTriangle,HelpCircle,RefreshCw,ChevronsRight}from'lucide-react';// Import the quantity modal\nimport QuantityQualityModal from'./QuantityQualityModal';// Production Plan Card Component with workflow stages\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ProductionPlanCard=_ref=>{var _drugTypes$plan$drugT6,_drugTypes$plan$drugT7;let{plan,isExpanded,onToggleExpand,onUpdatePlan,onMarkAsSold,onRemove,onReproduce,drugTypes,dealers=[],// Added dealers prop\nsetDailySales,setDealerTransactions,effectColors}=_ref;const[showActionsMenu,setShowActionsMenu]=useState(false);const[showQuantityModal,setShowQuantityModal]=useState(false);const[showInfoTooltip,setShowInfoTooltip]=useState(false);// State for purchased ingredients tracking\nconst[purchasedIngredients,setPurchasedIngredients]=useState({});// State for cooking progress\nconst[cookingSteps,setCookingSteps]=useState([]);// State for selling controls\nconst[sellingData,setSellingData]=useState({personalQuantity:0,dealerQuantity:0,selectedDealer:'',personalPrice:plan.salePrice||0});// Determine the current stage of production\nconst[currentStage,setCurrentStage]=useState('plan');// 'plan', 'buy', 'cook', 'sell'\n// Load saved stage and progress data when component mounts\nuseEffect(()=>{if(plan.productionStage){setCurrentStage(plan.productionStage);}if(plan.purchasedIngredients){setPurchasedIngredients(plan.purchasedIngredients);}else{// Initialize empty tracking for all ingredients\nconst initialPurchased={};plan.totalIngredientNeeds.forEach(ingredient=>{initialPurchased[ingredient.name]=0;});setPurchasedIngredients(initialPurchased);}if(plan.cookingSteps){setCookingSteps(plan.cookingSteps);}else{// Initialize cooking steps based on the strain's ingredients\nconst initialSteps=[];// The first step is always the base seed/precursor\nconst seedIngredient=plan.totalIngredientNeeds.find(ing=>ing.name.includes('Seed')||ing.name.includes('Pseudo')||ing.name.includes('Coca'));if(seedIngredient){initialSteps.push({id:'seed',name:seedIngredient.name,completed:false});}// Add other ingredients as steps (excluding the seed and packaging)\nplan.totalIngredientNeeds.forEach(ingredient=>{if(!ingredient.name.includes('Seed')&&!ingredient.name.includes('Pseudo')&&!ingredient.name.includes('Coca')&&!ingredient.name.includes('Baggie')&&!ingredient.name.includes('Jar')){initialSteps.push({id:ingredient.name,name:ingredient.name,completed:false});}});setCookingSteps(initialSteps);}// Initialize selling data\nif(plan.sellingData){setSellingData(plan.sellingData);}else{setSellingData({personalQuantity:0,dealerQuantity:0,selectedDealer:dealers.length>0?dealers[0].id:'',personalPrice:plan.salePrice||0});}},[plan,dealers]);// Format date to a readable string\nconst formatDate=dateString=>{if(!dateString)return'N/A';const date=new Date(dateString);return date.toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric'});};// Get drug type emoji\nconst getDrugTypeEmoji=drugType=>{var _drugTypes$drugType;return((_drugTypes$drugType=drugTypes[drugType])===null||_drugTypes$drugType===void 0?void 0:_drugTypes$drugType.emoji)||'ðŸŒ¿';};// Calculate progress percentage for the progress bar\nconst calculateProgress=()=>{if(plan.status==='sold')return 100;switch(currentStage){case'plan':return 0;case'buy':// Calculate percentage of purchased ingredients\nconst totalNeeded=Object.values(plan.totalIngredientNeeds).reduce((sum,ing)=>sum+ing.quantity,0);const totalPurchased=Object.values(purchasedIngredients).reduce((sum,qty)=>sum+qty,0);return Math.min(100,Math.round(totalPurchased/totalNeeded*25+0));// 0-25%\ncase'cook':// Calculate percentage of completed cooking steps\nconst completedSteps=cookingSteps.filter(step=>step.completed).length;return Math.min(100,Math.round(completedSteps/cookingSteps.length*25+25));// 25-50%\ncase'sell':// Calculate based on sold quantity\nconst totalQuantity=plan.plannedQuantity;const soldQuantity=sellingData.personalQuantity+sellingData.dealerQuantity;return Math.min(100,Math.round(soldQuantity/totalQuantity*25+50));// 50-75%\ndefault:return 0;}};// Check if all ingredients are purchased\nconst allIngredientsPurchased=()=>{return plan.totalIngredientNeeds.every(ingredient=>(purchasedIngredients[ingredient.name]||0)>=ingredient.quantity);};// Check if all cooking steps are completed\nconst allCookingStepsCompleted=()=>{return cookingSteps.every(step=>step.completed);};// Check if all product is allocated for sale\nconst allProductAllocated=()=>{return sellingData.personalQuantity+sellingData.dealerQuantity>=plan.plannedQuantity;};// Handle toggle of purchased state for an ingredient\nconst toggleIngredientPurchased=(ingredientName,purchased)=>{const updatedPurchased={...purchasedIngredients};if(purchased){// Mark as fully purchased\nconst ingredient=plan.totalIngredientNeeds.find(ing=>ing.name===ingredientName);if(ingredient){updatedPurchased[ingredientName]=ingredient.quantity;}}else{// Mark as not purchased\nupdatedPurchased[ingredientName]=0;}setPurchasedIngredients(updatedPurchased);// Save to plan state\nonUpdatePlan(plan.id,{purchasedIngredients:updatedPurchased,productionStage:currentStage});};// Handle updating the purchased quantity for an ingredient\nconst updatePurchasedQuantity=(ingredientName,quantity)=>{const updatedPurchased={...purchasedIngredients};updatedPurchased[ingredientName]=Math.max(0,parseInt(quantity)||0);setPurchasedIngredients(updatedPurchased);// Save to plan state\nonUpdatePlan(plan.id,{purchasedIngredients:updatedPurchased,productionStage:currentStage});};// Handle toggling a cooking step as complete\nconst toggleCookingStep=stepId=>{const updatedSteps=cookingSteps.map(step=>step.id===stepId?{...step,completed:!step.completed}:step);setCookingSteps(updatedSteps);// Save to plan state\nonUpdatePlan(plan.id,{cookingSteps:updatedSteps,productionStage:currentStage});};// Handle updating selling quantities\nconst updateSellingData=(field,value)=>{const updatedData={...sellingData,[field]:value};// Prevent exceeding total planned quantity\nconst totalAllocated=updatedData.personalQuantity+updatedData.dealerQuantity;if(totalAllocated>plan.plannedQuantity){if(field==='personalQuantity'){updatedData.personalQuantity=plan.plannedQuantity-updatedData.dealerQuantity;}else if(field==='dealerQuantity'){updatedData.dealerQuantity=plan.plannedQuantity-updatedData.personalQuantity;}}setSellingData(updatedData);// Save to plan state\nonUpdatePlan(plan.id,{sellingData:updatedData,productionStage:currentStage});};// Move to the next stage\nconst advanceStage=()=>{let nextStage;switch(currentStage){case'plan':nextStage='buy';break;case'buy':nextStage='cook';break;case'cook':nextStage='sell';break;case'sell':// If already at sell, we're done - mark as sold\nhandleCompleteSale();return;default:nextStage='plan';}setCurrentStage(nextStage);// Save stage to plan state\nonUpdatePlan(plan.id,{productionStage:nextStage});};// Handle completing the entire sale process\nconst handleCompleteSale=()=>{// Process personal sales\nif(sellingData.personalQuantity>0){const personalSale={id:Date.now(),amount:sellingData.personalQuantity*sellingData.personalPrice,expenses:0,// No additional expenses\nprofit:sellingData.personalQuantity*sellingData.personalPrice-plan.productionCost*(sellingData.personalQuantity/plan.plannedQuantity),type:'personal',productType:plan.drugType,units:sellingData.personalQuantity,date:new Date().toISOString(),strainName:plan.strainName,strainId:plan.strainId};// Add to daily sales\nif(setDailySales){setDailySales(prev=>[...prev,personalSale]);}}// Process dealer sales\nif(sellingData.dealerQuantity>0&&sellingData.selectedDealer){const selectedDealer=dealers.find(d=>d.id===parseInt(sellingData.selectedDealer));if(selectedDealer){const dealerTransaction={id:Date.now(),dealerId:selectedDealer.id,dealerName:selectedDealer.name,productType:plan.drugType,inventorySupplied:sellingData.dealerQuantity,cashCollected:sellingData.dealerQuantity*plan.salePrice,profit:sellingData.dealerQuantity*plan.salePrice*(1-selectedDealer.cut/100),date:new Date().toISOString(),strainName:plan.strainName,strainId:plan.strainId};// Add to dealer transactions\nif(setDealerTransactions){setDealerTransactions(prev=>[...prev,dealerTransaction]);}}}// Mark the production plan as sold\nonMarkAsSold(plan.id);};const toggleActionsMenu=e=>{e.stopPropagation();setShowActionsMenu(!showActionsMenu);};const handleReproduce=()=>{setShowQuantityModal(true);};const confirmReproduce=(quantity,quality)=>{onReproduce(plan,quantity,quality);setShowQuantityModal(false);};// Render stage-specific content\nconst renderStageContent=()=>{var _drugTypes$plan$drugT,_drugTypes$plan$drugT2,_drugTypes$plan$drugT3,_drugTypes$plan$drugT4,_drugTypes$plan$drugT5;if(plan.status==='sold'){return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-50 border-t border-green-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-green-700 mb-2\",children:[/*#__PURE__*/_jsx(Check,{className:\"w-5 h-5 mr-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Production Completed and Sold\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-600\",children:[\"This batch was successfully produced and sold on \",formatDate(plan.dateSold),\".\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleReproduce,className:\"mt-3 w-full flex items-center justify-center py-2 bg-green-100 text-green-700 hover:bg-green-200 rounded-md font-medium\",children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"w-4 h-4 mr-2\"}),\"Produce This Strain Again\"]})]});}switch(currentStage){case'plan':return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium text-gray-800 mb-3 flex items-center\",children:[/*#__PURE__*/_jsx(ShoppingCart,{className:\"w-4 h-4 mr-1 text-blue-500\"}),\"Planning Stage\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-50 p-3 rounded-lg mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-blue-700\",children:\"Set your production quantity and adjust the sale price to see how profitability changes.\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Production Quantity\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",value:plan.plannedQuantity,onChange:e=>{const newQuantity=Math.max(0,parseInt(e.target.value)||0);// Recalculate expectedRevenue based on new quantity\nconst newExpectedRevenue=newQuantity*plan.salePrice;onUpdatePlan(plan.id,{plannedQuantity:newQuantity,expectedRevenue:newExpectedRevenue,expectedProfit:newExpectedRevenue-plan.productionCost});},className:\"flex-1 p-2 border rounded-md\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 p-2 bg-gray-100 rounded-md text-gray-700 whitespace-nowrap\",children:((_drugTypes$plan$drugT=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT===void 0?void 0:_drugTypes$plan$drugT.unit)||'units'})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:[\"Price per \",((_drugTypes$plan$drugT2=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT2===void 0?void 0:_drugTypes$plan$drugT2.unit)||'unit']}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"p-2 border border-r-0 rounded-l-md bg-gray-100 text-gray-700\",children:\"$\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"1\",value:plan.salePrice,onChange:e=>{const newPrice=Math.max(0,parseInt(e.target.value)||0);// Recalculate expectedRevenue based on new price\nconst newExpectedRevenue=plan.plannedQuantity*newPrice;onUpdatePlan(plan.id,{salePrice:newPrice,expectedRevenue:newExpectedRevenue,expectedProfit:newExpectedRevenue-plan.productionCost});},className:\"flex-1 p-2 border rounded-r-md\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-600\",children:\"Total Cost\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-semibold\",children:[\"$\",plan.productionCost.toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Cost per \",((_drugTypes$plan$drugT3=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT3===void 0?void 0:_drugTypes$plan$drugT3.unit)||'unit',\":\",/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-gray-700\",children:[\"$\",(plan.productionCost/plan.plannedQuantity).toFixed(2)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-600\",children:\"Expected Revenue\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-semibold text-blue-600\",children:[\"$\",plan.expectedRevenue.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-600\",children:\"Expected Profit\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-semibold text-green-600\",children:[\"$\",plan.expectedProfit.toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Profit per \",((_drugTypes$plan$drugT4=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT4===void 0?void 0:_drugTypes$plan$drugT4.unit)||'unit',\":\",/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[\"$\",(plan.expectedProfit/plan.plannedQuantity).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:\"Profit margin:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[Math.round(plan.expectedProfit/plan.expectedRevenue*100),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 relative w-full h-2 bg-gray-200 rounded-full overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 left-0 h-full bg-green-500 rounded-full\",style:{width:`${Math.min(100,Math.round(plan.expectedProfit/plan.expectedRevenue*100))}%`}})})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:advanceStage,className:\"w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(ChevronsRight,{className:\"w-4 h-4 mr-1\"}),\"Proceed to Ingredients\"]})]});case'buy':return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium text-gray-800 mb-3 flex items-center\",children:[/*#__PURE__*/_jsx(ShoppingCart,{className:\"w-4 h-4 mr-1 text-orange-500\"}),\"Ingredients Shopping List\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-orange-50 p-3 rounded-lg mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-orange-700\",children:\"Check off each ingredient as you purchase them. When you have all ingredients, you can proceed to cooking.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:plan.totalIngredientNeeds.map((ingredient,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-2 p-2 bg-gray-50 rounded\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`ingredient-${idx}`,checked:(purchasedIngredients[ingredient.name]||0)>=ingredient.quantity,onChange:e=>toggleIngredientPurchased(ingredient.name,e.target.checked),className:\"mr-2 h-4 w-4 text-blue-600\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`ingredient-${idx}`,className:\"flex-grow text-sm font-medium\",children:ingredient.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:ingredient.quantity,value:purchasedIngredients[ingredient.name]||0,onChange:e=>updatePurchasedQuantity(ingredient.name,e.target.value),className:\"w-16 p-1 text-sm border rounded mr-2 text-center\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600\",children:[\"/ \",ingredient.quantity]})]})]},idx))}),/*#__PURE__*/_jsxs(\"button\",{onClick:advanceStage,disabled:!allIngredientsPurchased(),className:`w-full py-2 rounded-md flex items-center justify-center ${allIngredientsPurchased()?'bg-orange-600 text-white hover:bg-orange-700':'bg-gray-200 text-gray-500 cursor-not-allowed'}`,children:[/*#__PURE__*/_jsx(ChevronsRight,{className:\"w-4 h-4 mr-1\"}),allIngredientsPurchased()?'Proceed to Cooking':'All Ingredients Required']})]});case'cook':return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium text-gray-800 mb-3 flex items-center\",children:[/*#__PURE__*/_jsx(Beaker,{className:\"w-4 h-4 mr-1 text-purple-500\"}),\"Cooking Recipe\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-50 p-3 rounded-lg mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-purple-700\",children:\"Follow the mixing sequence exactly as shown. Check off each step as you complete it.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:cookingSteps.map((step,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:`flex items-center mb-2 p-2 rounded ${step.completed?'bg-purple-50 border border-purple-200':'bg-gray-50'}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-6 h-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center text-xs font-medium mr-2\",children:idx+1}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`step-${idx}`,className:\"flex-grow text-sm font-medium\",children:step.name}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`step-${idx}`,checked:step.completed,onChange:()=>toggleCookingStep(step.id),className:\"ml-auto h-5 w-5 text-purple-600\"})]},idx))}),/*#__PURE__*/_jsxs(\"button\",{onClick:advanceStage,disabled:!allCookingStepsCompleted(),className:`w-full py-2 rounded-md flex items-center justify-center ${allCookingStepsCompleted()?'bg-purple-600 text-white hover:bg-purple-700':'bg-gray-200 text-gray-500 cursor-not-allowed'}`,children:[/*#__PURE__*/_jsx(ChevronsRight,{className:\"w-4 h-4 mr-1\"}),allCookingStepsCompleted()?'Product Ready for Sale':'Complete All Cooking Steps']})]});case'sell':return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t border-gray-200\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-medium text-gray-800 mb-3 flex items-center\",children:[/*#__PURE__*/_jsx(DollarSign,{className:\"w-4 h-4 mr-1 text-green-500\"}),\"Product Distribution\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 p-3 rounded-lg mb-4\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-700\",children:[\"Allocate your product between personal sales and dealer distribution. Total allocated: \",sellingData.personalQuantity+sellingData.dealerQuantity,\" of \",plan.plannedQuantity,\".\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700 mb-2\",children:\"Personal Sales\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-600 mb-1\",children:\"Quantity to Sell Personally\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:plan.plannedQuantity-sellingData.dealerQuantity,value:sellingData.personalQuantity,onChange:e=>updateSellingData('personalQuantity',Math.max(0,parseInt(e.target.value)||0)),className:\"w-full p-2 border rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm text-gray-600 mb-1\",children:[\"Price per \",((_drugTypes$plan$drugT5=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT5===void 0?void 0:_drugTypes$plan$drugT5.unit)||'unit']}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",step:\"1\",value:sellingData.personalPrice,onChange:e=>updateSellingData('personalPrice',Math.max(0,parseInt(e.target.value)||0)),className:\"w-full p-2 border rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Revenue:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-blue-600\",children:[\"$\",(sellingData.personalQuantity*sellingData.personalPrice).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Estimated Profit:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[\"$\",(sellingData.personalQuantity*sellingData.personalPrice-plan.productionCost*(sellingData.personalQuantity/plan.plannedQuantity)).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700 mb-2\",children:\"Dealer Assignment\"}),dealers&&dealers.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-600 mb-1\",children:\"Select Dealer\"}),/*#__PURE__*/_jsxs(\"select\",{value:sellingData.selectedDealer,onChange:e=>updateSellingData('selectedDealer',e.target.value),className:\"w-full p-2 border rounded-md\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a dealer\"}),dealers.filter(d=>d.active).map(dealer=>/*#__PURE__*/_jsxs(\"option\",{value:dealer.id,children:[dealer.name,\" - Cut: \",dealer.cut,\"%\"]},dealer.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm text-gray-600 mb-1\",children:\"Quantity to Distribute\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:plan.plannedQuantity-sellingData.personalQuantity,value:sellingData.dealerQuantity,onChange:e=>updateSellingData('dealerQuantity',Math.max(0,parseInt(e.target.value)||0)),className:\"w-full p-2 border rounded-md\"})]}),sellingData.selectedDealer&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Dealer Revenue:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-blue-600\",children:[\"$\",(sellingData.dealerQuantity*plan.salePrice).toFixed(2)]})]}),(()=>{const selectedDealer=dealers.find(d=>d.id===parseInt(sellingData.selectedDealer));const dealerCut=selectedDealer?selectedDealer.cut:0;const yourProfit=sellingData.dealerQuantity*plan.salePrice*(1-dealerCut/100);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Your Profit (after \",dealerCut,\"% cut):\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[\"$\",yourProfit.toFixed(2)]})]});})()]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"bg-yellow-50 p-3 rounded text-sm text-yellow-700\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"inline-block mr-1 w-4 h-4\"}),\"No active dealers available. Visit the Crew tab to activate dealers.\"]})]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:advanceStage,disabled:!allProductAllocated(),className:`w-full py-2 rounded-md flex items-center justify-center ${allProductAllocated()?'bg-green-600 text-white hover:bg-green-700':'bg-gray-200 text-gray-500 cursor-not-allowed'}`,children:[/*#__PURE__*/_jsx(DollarSign,{className:\"w-4 h-4 mr-1\"}),allProductAllocated()?'Complete Sale':'Allocate All Product']})]});default:return null;}};// Render stage badge\nconst renderStageBadge=()=>{if(plan.status==='sold'){return/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\",children:\"Sold\"});}switch(currentStage){case'plan':return/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800 font-medium\",children:\"Planning\"});case'buy':return/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800 font-medium\",children:\"Ingredients\"});case'cook':return/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 font-medium\",children:\"Cooking\"});case'sell':return/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\",children:\"Selling\"});default:return/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 font-medium\",children:\"In Progress\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg border border-gray-200 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 flex items-center justify-between bg-gray-50 border-b border-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:getDrugTypeEmoji(plan.drugType)}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900\",children:plan.strainName}),plan.effects&&plan.effects.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:plan.effects.map((effect,idx)=>/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-0.5 text-white rounded-full text-xs\",style:{backgroundColor:effectColors&&effectColors[effect]?effectColors[effect]:'#333'},children:effect},idx))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"No effects data available\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:[\"Created: \",formatDate(plan.dateCreated)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[renderStageBadge(),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleActionsMenu,className:\"p-1.5 text-gray-600 hover:bg-gray-100 rounded\",title:\"More actions\",children:/*#__PURE__*/_jsx(MoreHorizontal,{className:\"h-5 w-5\"})}),showActionsMenu&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"py-1\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{onToggleExpand();setShowActionsMenu(false);},className:\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",children:[/*#__PURE__*/_jsx(Info,{className:\"inline h-4 w-4 mr-2\"}),isExpanded?\"Hide Details\":\"View Details\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{handleReproduce();setShowActionsMenu(false);},className:\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",children:[/*#__PURE__*/_jsx(Copy,{className:\"inline h-4 w-4 mr-2\"}),\"Produce Again\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{onRemove(plan.id);setShowActionsMenu(false);},className:\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\",children:[/*#__PURE__*/_jsx(Trash2,{className:\"inline h-4 w-4 mr-2\"}),\"Remove\"]})]})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:`h-full ${plan.status==='sold'?'bg-green-500':currentStage==='plan'?'bg-blue-500':currentStage==='buy'?'bg-orange-500':currentStage==='cook'?'bg-purple-500':'bg-green-500'}`,style:{width:`${calculateProgress()}%`}})}),showInfoTooltip&&/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-blue-50 border-b border-blue-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"w-4 h-4 text-blue-500 mt-0.5 mr-2 shrink-0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-700\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mb-1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Production Flow:\"}),\" Follow these stages to complete production:\"]}),/*#__PURE__*/_jsxs(\"ol\",{className:\"list-decimal ml-4 space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Plan:\"}),\" Review production details\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Buy Ingredients:\"}),\" Acquire all needed supplies\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Cook:\"}),\" Follow the recipe sequence exactly\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sell:\"}),\" Distribute product personally or through dealers\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowInfoTooltip(false),className:\"mt-1 text-blue-700 hover:text-blue-800 font-medium\",children:\"Got it\"})]})]})}),!showInfoTooltip&&!plan.status==='sold'&&/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-1 bg-gray-50 border-b border-gray-200 flex justify-between text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:currentStage==='plan'?'Planning Stage':currentStage==='buy'?'Buying Ingredients':currentStage==='cook'?'Cooking Process':'Distribution Stage'}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowInfoTooltip(true),className:\"text-blue-500 hover:text-blue-700 flex items-center\",children:[/*#__PURE__*/_jsx(HelpCircle,{className:\"w-3 h-3 mr-1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"How it works\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:\"Quantity\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-medium\",children:[plan.plannedQuantity,\" \",((_drugTypes$plan$drugT6=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT6===void 0?void 0:_drugTypes$plan$drugT6.unit)||'units']})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:\"Price\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg font-medium\",children:[\"$\",plan.salePrice,\" per \",((_drugTypes$plan$drugT7=drugTypes[plan.drugType])===null||_drugTypes$plan$drugT7===void 0?void 0:_drugTypes$plan$drugT7.unit)||'unit']})]})]})}),renderStageContent(),isExpanded&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-gray-50\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-900 mb-3\",children:\"Required Ingredients\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Ingredient\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Cost\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{className:\"divide-y divide-gray-200 bg-white\",children:[plan.totalIngredientNeeds.map((ingredient,idx)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\",children:ingredient.name}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",children:ingredient.quantity}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",children:[\"$\",ingredient.totalCost.toFixed(2)]})]},idx)),/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\",children:[\"Packaging (\",plan.packagingNeeded.type,\")\"]}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",children:plan.packagingNeeded.quantity}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",children:[\"$\",plan.packagingNeeded.cost.toFixed(2)]})]})]})]})})]}),/*#__PURE__*/_jsx(QuantityQualityModal,{isOpen:showQuantityModal,onClose:()=>setShowQuantityModal(false),onConfirm:confirmReproduce,initialQuantity:plan.plannedQuantity,drugType:plan.drugType})]});};export default ProductionPlanCard;","map":{"version":3,"names":["React","useState","useEffect","DollarSign","Info","Copy","Trash2","MoreHorizontal","ShoppingCart","Beaker","Check","AlertTriangle","HelpCircle","RefreshCw","ChevronsRight","QuantityQualityModal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProductionPlanCard","_ref","_drugTypes$plan$drugT6","_drugTypes$plan$drugT7","plan","isExpanded","onToggleExpand","onUpdatePlan","onMarkAsSold","onRemove","onReproduce","drugTypes","dealers","setDailySales","setDealerTransactions","effectColors","showActionsMenu","setShowActionsMenu","showQuantityModal","setShowQuantityModal","showInfoTooltip","setShowInfoTooltip","purchasedIngredients","setPurchasedIngredients","cookingSteps","setCookingSteps","sellingData","setSellingData","personalQuantity","dealerQuantity","selectedDealer","personalPrice","salePrice","currentStage","setCurrentStage","productionStage","initialPurchased","totalIngredientNeeds","forEach","ingredient","name","initialSteps","seedIngredient","find","ing","includes","push","id","completed","length","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getDrugTypeEmoji","drugType","_drugTypes$drugType","emoji","calculateProgress","status","totalNeeded","Object","values","reduce","sum","quantity","totalPurchased","qty","Math","min","round","completedSteps","filter","step","totalQuantity","plannedQuantity","soldQuantity","allIngredientsPurchased","every","allCookingStepsCompleted","allProductAllocated","toggleIngredientPurchased","ingredientName","purchased","updatedPurchased","updatePurchasedQuantity","max","parseInt","toggleCookingStep","stepId","updatedSteps","map","updateSellingData","field","value","updatedData","totalAllocated","advanceStage","nextStage","handleCompleteSale","personalSale","now","amount","expenses","profit","productionCost","type","productType","units","toISOString","strainName","strainId","prev","d","dealerTransaction","dealerId","dealerName","inventorySupplied","cashCollected","cut","toggleActionsMenu","e","stopPropagation","handleReproduce","confirmReproduce","quality","renderStageContent","_drugTypes$plan$drugT","_drugTypes$plan$drugT2","_drugTypes$plan$drugT3","_drugTypes$plan$drugT4","_drugTypes$plan$drugT5","className","children","dateSold","onClick","onChange","newQuantity","target","newExpectedRevenue","expectedRevenue","expectedProfit","unit","newPrice","toFixed","style","width","idx","checked","htmlFor","disabled","active","dealer","dealerCut","yourProfit","renderStageBadge","effects","effect","backgroundColor","dateCreated","title","totalCost","packagingNeeded","cost","isOpen","onClose","onConfirm","initialQuantity"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/ProductionPlanCard.js"],"sourcesContent":["// Enhanced Production Plan Card Component\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  DollarSign,\r\n  Info,\r\n  Copy,\r\n  Trash2,\r\n  MoreHorizontal,\r\n  ShoppingCart,\r\n  Beaker,\r\n  Check,\r\n  AlertTriangle,\r\n  HelpCircle,\r\n  RefreshCw,\r\n  ChevronsRight\r\n} from 'lucide-react';\r\n\r\n// Import the quantity modal\r\nimport QuantityQualityModal from './QuantityQualityModal';\r\n\r\n// Production Plan Card Component with workflow stages\r\nconst ProductionPlanCard = ({ \r\n  plan, \r\n  isExpanded, \r\n  onToggleExpand, \r\n  onUpdatePlan, \r\n  onMarkAsSold, \r\n  onRemove,\r\n  onReproduce,\r\n  drugTypes,\r\n  dealers = [], // Added dealers prop\r\n  setDailySales,\r\n  setDealerTransactions,\r\n  effectColors\r\n}) => {\r\n  const [showActionsMenu, setShowActionsMenu] = useState(false);\r\n  const [showQuantityModal, setShowQuantityModal] = useState(false);\r\n  const [showInfoTooltip, setShowInfoTooltip] = useState(false);\r\n\r\n  // State for purchased ingredients tracking\r\n  const [purchasedIngredients, setPurchasedIngredients] = useState({});\r\n  \r\n  // State for cooking progress\r\n  const [cookingSteps, setCookingSteps] = useState([]);\r\n\r\n  // State for selling controls\r\n  const [sellingData, setSellingData] = useState({\r\n    personalQuantity: 0,\r\n    dealerQuantity: 0,\r\n    selectedDealer: '',\r\n    personalPrice: plan.salePrice || 0\r\n  });\r\n\r\n  // Determine the current stage of production\r\n  const [currentStage, setCurrentStage] = useState('plan'); // 'plan', 'buy', 'cook', 'sell'\r\n\r\n  // Load saved stage and progress data when component mounts\r\n  useEffect(() => {\r\n    if (plan.productionStage) {\r\n      setCurrentStage(plan.productionStage);\r\n    }\r\n    \r\n    if (plan.purchasedIngredients) {\r\n      setPurchasedIngredients(plan.purchasedIngredients);\r\n    } else {\r\n      // Initialize empty tracking for all ingredients\r\n      const initialPurchased = {};\r\n      plan.totalIngredientNeeds.forEach(ingredient => {\r\n        initialPurchased[ingredient.name] = 0;\r\n      });\r\n      setPurchasedIngredients(initialPurchased);\r\n    }\r\n\r\n    if (plan.cookingSteps) {\r\n      setCookingSteps(plan.cookingSteps);\r\n    } else {\r\n      // Initialize cooking steps based on the strain's ingredients\r\n      const initialSteps = [];\r\n      // The first step is always the base seed/precursor\r\n      const seedIngredient = plan.totalIngredientNeeds.find(ing => \r\n        ing.name.includes('Seed') || ing.name.includes('Pseudo') || ing.name.includes('Coca')\r\n      );\r\n      \r\n      if (seedIngredient) {\r\n        initialSteps.push({\r\n          id: 'seed',\r\n          name: seedIngredient.name,\r\n          completed: false\r\n        });\r\n      }\r\n\r\n      // Add other ingredients as steps (excluding the seed and packaging)\r\n      plan.totalIngredientNeeds.forEach(ingredient => {\r\n        if (!ingredient.name.includes('Seed') && \r\n            !ingredient.name.includes('Pseudo') && \r\n            !ingredient.name.includes('Coca') &&\r\n            !ingredient.name.includes('Baggie') && \r\n            !ingredient.name.includes('Jar')) {\r\n          initialSteps.push({\r\n            id: ingredient.name,\r\n            name: ingredient.name,\r\n            completed: false\r\n          });\r\n        }\r\n      });\r\n      \r\n      setCookingSteps(initialSteps);\r\n    }\r\n\r\n    // Initialize selling data\r\n    if (plan.sellingData) {\r\n      setSellingData(plan.sellingData);\r\n    } else {\r\n      setSellingData({\r\n        personalQuantity: 0,\r\n        dealerQuantity: 0,\r\n        selectedDealer: dealers.length > 0 ? dealers[0].id : '',\r\n        personalPrice: plan.salePrice || 0\r\n      });\r\n    }\r\n  }, [plan, dealers]);\r\n\r\n  // Format date to a readable string\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Get drug type emoji\r\n  const getDrugTypeEmoji = (drugType) => {\r\n    return drugTypes[drugType]?.emoji || 'ðŸŒ¿';\r\n  };\r\n  \r\n  // Calculate progress percentage for the progress bar\r\n  const calculateProgress = () => {\r\n    if (plan.status === 'sold') return 100;\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return 0;\r\n      case 'buy':\r\n        // Calculate percentage of purchased ingredients\r\n        const totalNeeded = Object.values(plan.totalIngredientNeeds).reduce((sum, ing) => sum + ing.quantity, 0);\r\n        const totalPurchased = Object.values(purchasedIngredients).reduce((sum, qty) => sum + qty, 0);\r\n        return Math.min(100, Math.round((totalPurchased / totalNeeded) * 25 + 0)); // 0-25%\r\n      case 'cook':\r\n        // Calculate percentage of completed cooking steps\r\n        const completedSteps = cookingSteps.filter(step => step.completed).length;\r\n        return Math.min(100, Math.round((completedSteps / cookingSteps.length) * 25 + 25)); // 25-50%\r\n      case 'sell':\r\n        // Calculate based on sold quantity\r\n        const totalQuantity = plan.plannedQuantity;\r\n        const soldQuantity = sellingData.personalQuantity + sellingData.dealerQuantity;\r\n        return Math.min(100, Math.round((soldQuantity / totalQuantity) * 25 + 50)); // 50-75%\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  // Check if all ingredients are purchased\r\n  const allIngredientsPurchased = () => {\r\n    return plan.totalIngredientNeeds.every(ingredient => \r\n      (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity\r\n    );\r\n  };\r\n\r\n  // Check if all cooking steps are completed\r\n  const allCookingStepsCompleted = () => {\r\n    return cookingSteps.every(step => step.completed);\r\n  };\r\n\r\n  // Check if all product is allocated for sale\r\n  const allProductAllocated = () => {\r\n    return (sellingData.personalQuantity + sellingData.dealerQuantity) >= plan.plannedQuantity;\r\n  };\r\n\r\n  // Handle toggle of purchased state for an ingredient\r\n  const toggleIngredientPurchased = (ingredientName, purchased) => {\r\n    const updatedPurchased = { ...purchasedIngredients };\r\n    \r\n    if (purchased) {\r\n      // Mark as fully purchased\r\n      const ingredient = plan.totalIngredientNeeds.find(ing => ing.name === ingredientName);\r\n      if (ingredient) {\r\n        updatedPurchased[ingredientName] = ingredient.quantity;\r\n      }\r\n    } else {\r\n      // Mark as not purchased\r\n      updatedPurchased[ingredientName] = 0;\r\n    }\r\n    \r\n    setPurchasedIngredients(updatedPurchased);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      purchasedIngredients: updatedPurchased,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle updating the purchased quantity for an ingredient\r\n  const updatePurchasedQuantity = (ingredientName, quantity) => {\r\n    const updatedPurchased = { ...purchasedIngredients };\r\n    updatedPurchased[ingredientName] = Math.max(0, parseInt(quantity) || 0);\r\n    \r\n    setPurchasedIngredients(updatedPurchased);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      purchasedIngredients: updatedPurchased,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle toggling a cooking step as complete\r\n  const toggleCookingStep = (stepId) => {\r\n    const updatedSteps = cookingSteps.map(step => \r\n      step.id === stepId ? { ...step, completed: !step.completed } : step\r\n    );\r\n    \r\n    setCookingSteps(updatedSteps);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      cookingSteps: updatedSteps,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle updating selling quantities\r\n  const updateSellingData = (field, value) => {\r\n    const updatedData = { ...sellingData, [field]: value };\r\n    \r\n    // Prevent exceeding total planned quantity\r\n    const totalAllocated = updatedData.personalQuantity + updatedData.dealerQuantity;\r\n    if (totalAllocated > plan.plannedQuantity) {\r\n      if (field === 'personalQuantity') {\r\n        updatedData.personalQuantity = plan.plannedQuantity - updatedData.dealerQuantity;\r\n      } else if (field === 'dealerQuantity') {\r\n        updatedData.dealerQuantity = plan.plannedQuantity - updatedData.personalQuantity;\r\n      }\r\n    }\r\n    \r\n    setSellingData(updatedData);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      sellingData: updatedData,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Move to the next stage\r\n  const advanceStage = () => {\r\n    let nextStage;\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        nextStage = 'buy';\r\n        break;\r\n      case 'buy':\r\n        nextStage = 'cook';\r\n        break;\r\n      case 'cook':\r\n        nextStage = 'sell';\r\n        break;\r\n      case 'sell':\r\n        // If already at sell, we're done - mark as sold\r\n        handleCompleteSale();\r\n        return;\r\n      default:\r\n        nextStage = 'plan';\r\n    }\r\n    \r\n    setCurrentStage(nextStage);\r\n    \r\n    // Save stage to plan state\r\n    onUpdatePlan(plan.id, {\r\n      productionStage: nextStage\r\n    });\r\n  };\r\n\r\n  // Handle completing the entire sale process\r\n  const handleCompleteSale = () => {\r\n    // Process personal sales\r\n    if (sellingData.personalQuantity > 0) {\r\n      const personalSale = {\r\n        id: Date.now(),\r\n        amount: sellingData.personalQuantity * sellingData.personalPrice,\r\n        expenses: 0, // No additional expenses\r\n        profit: sellingData.personalQuantity * sellingData.personalPrice - \r\n                (plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity)),\r\n        type: 'personal',\r\n        productType: plan.drugType,\r\n        units: sellingData.personalQuantity,\r\n        date: new Date().toISOString(),\r\n        strainName: plan.strainName,\r\n        strainId: plan.strainId\r\n      };\r\n      \r\n      // Add to daily sales\r\n      if (setDailySales) {\r\n        setDailySales(prev => [...prev, personalSale]);\r\n      }\r\n    }\r\n    \r\n    // Process dealer sales\r\n    if (sellingData.dealerQuantity > 0 && sellingData.selectedDealer) {\r\n      const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\r\n      \r\n      if (selectedDealer) {\r\n        const dealerTransaction = {\r\n          id: Date.now(),\r\n          dealerId: selectedDealer.id,\r\n          dealerName: selectedDealer.name,\r\n          productType: plan.drugType,\r\n          inventorySupplied: sellingData.dealerQuantity,\r\n          cashCollected: sellingData.dealerQuantity * plan.salePrice,\r\n          profit: sellingData.dealerQuantity * plan.salePrice * (1 - selectedDealer.cut / 100),\r\n          date: new Date().toISOString(),\r\n          strainName: plan.strainName,\r\n          strainId: plan.strainId\r\n        };\r\n        \r\n        // Add to dealer transactions\r\n        if (setDealerTransactions) {\r\n          setDealerTransactions(prev => [...prev, dealerTransaction]);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Mark the production plan as sold\r\n    onMarkAsSold(plan.id);\r\n  };\r\n\r\n  const toggleActionsMenu = (e) => {\r\n    e.stopPropagation();\r\n    setShowActionsMenu(!showActionsMenu);\r\n  };\r\n\r\n  const handleReproduce = () => {\r\n    setShowQuantityModal(true);\r\n  };\r\n\r\n  const confirmReproduce = (quantity, quality) => {\r\n    onReproduce(plan, quantity, quality);\r\n    setShowQuantityModal(false);\r\n  };\r\n\r\n  // Render stage-specific content\r\n  const renderStageContent = () => {\r\n    if (plan.status === 'sold') {\r\n      return (\r\n        <div className=\"p-4 bg-green-50 border-t border-green-200\">\r\n          <div className=\"flex items-center text-green-700 mb-2\">\r\n            <Check className=\"w-5 h-5 mr-2\" />\r\n            <span className=\"font-medium\">Production Completed and Sold</span>\r\n          </div>\r\n          <p className=\"text-sm text-green-600\">\r\n            This batch was successfully produced and sold on {formatDate(plan.dateSold)}.\r\n          </p>\r\n          <button\r\n            onClick={handleReproduce}\r\n            className=\"mt-3 w-full flex items-center justify-center py-2 bg-green-100 text-green-700 hover:bg-green-200 rounded-md font-medium\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Produce This Strain Again\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <ShoppingCart className=\"w-4 h-4 mr-1 text-blue-500\" />\r\n              Planning Stage\r\n            </h3>\r\n            \r\n            <div className=\"bg-blue-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-blue-700\">\r\n                Set your production quantity and adjust the sale price to see how profitability changes.\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Quantity and Price Controls */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Production Quantity\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    value={plan.plannedQuantity}\r\n                    onChange={(e) => {\r\n                      const newQuantity = Math.max(0, parseInt(e.target.value) || 0);\r\n                      // Recalculate expectedRevenue based on new quantity\r\n                      const newExpectedRevenue = newQuantity * plan.salePrice;\r\n                      onUpdatePlan(plan.id, { \r\n                        plannedQuantity: newQuantity,\r\n                        expectedRevenue: newExpectedRevenue,\r\n                        expectedProfit: newExpectedRevenue - plan.productionCost\r\n                      });\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-md\"\r\n                  />\r\n                  <span className=\"ml-2 p-2 bg-gray-100 rounded-md text-gray-700 whitespace-nowrap\">\r\n                    {drugTypes[plan.drugType]?.unit || 'units'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Price per {drugTypes[plan.drugType]?.unit || 'unit'}\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <span className=\"p-2 border border-r-0 rounded-l-md bg-gray-100 text-gray-700\">$</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"1\"\r\n                    value={plan.salePrice}\r\n                    onChange={(e) => {\r\n                      const newPrice = Math.max(0, parseInt(e.target.value) || 0);\r\n                      // Recalculate expectedRevenue based on new price\r\n                      const newExpectedRevenue = plan.plannedQuantity * newPrice;\r\n                      onUpdatePlan(plan.id, { \r\n                        salePrice: newPrice,\r\n                        expectedRevenue: newExpectedRevenue,\r\n                        expectedProfit: newExpectedRevenue - plan.productionCost\r\n                      });\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-r-md\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Financial Summary */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\">\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Total Cost</div>\r\n                <div className=\"text-lg font-semibold\">${plan.productionCost.toFixed(2)}</div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  Cost per {drugTypes[plan.drugType]?.unit || 'unit'}: \r\n                  <span className=\"font-medium text-gray-700\">\r\n                    ${(plan.productionCost / plan.plannedQuantity).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Expected Revenue</div>\r\n                <div className=\"text-lg font-semibold text-blue-600\">${plan.expectedRevenue.toFixed(2)}</div>\r\n              </div>\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Expected Profit</div>\r\n                <div className=\"text-lg font-semibold text-green-600\">${plan.expectedProfit.toFixed(2)}</div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  Profit per {drugTypes[plan.drugType]?.unit || 'unit'}: \r\n                  <span className=\"font-medium text-green-600\">\r\n                    ${(plan.expectedProfit / plan.plannedQuantity).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Profit Margin Display */}\r\n            <div className=\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-700\">Profit margin:</span>\r\n                <span className=\"font-medium text-green-600\">\r\n                  {Math.round((plan.expectedProfit / plan.expectedRevenue) * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-2 relative w-full h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                <div \r\n                  className=\"absolute top-0 left-0 h-full bg-green-500 rounded-full\"\r\n                  style={{ width: `${Math.min(100, Math.round((plan.expectedProfit / plan.expectedRevenue) * 100))}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              className=\"w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\"\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              Proceed to Ingredients\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'buy':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <ShoppingCart className=\"w-4 h-4 mr-1 text-orange-500\" />\r\n              Ingredients Shopping List\r\n            </h3>\r\n            \r\n            <div className=\"bg-orange-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-orange-700\">\r\n                Check off each ingredient as you purchase them. When you have all ingredients, you can proceed to cooking.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              {plan.totalIngredientNeeds.map((ingredient, idx) => (\r\n                <div key={idx} className=\"flex items-center mb-2 p-2 bg-gray-50 rounded\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`ingredient-${idx}`}\r\n                    checked={(purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity}\r\n                    onChange={(e) => toggleIngredientPurchased(ingredient.name, e.target.checked)}\r\n                    className=\"mr-2 h-4 w-4 text-blue-600\"\r\n                  />\r\n                  <label htmlFor={`ingredient-${idx}`} className=\"flex-grow text-sm font-medium\">\r\n                    {ingredient.name}\r\n                  </label>\r\n                  \r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      max={ingredient.quantity}\r\n                      value={purchasedIngredients[ingredient.name] || 0}\r\n                      onChange={(e) => updatePurchasedQuantity(ingredient.name, e.target.value)}\r\n                      className=\"w-16 p-1 text-sm border rounded mr-2 text-center\"\r\n                    />\r\n                    <span className=\"text-sm text-gray-600\">/ {ingredient.quantity}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allIngredientsPurchased()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allIngredientsPurchased()\r\n                  ? 'bg-orange-600 text-white hover:bg-orange-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              {allIngredientsPurchased() ? 'Proceed to Cooking' : 'All Ingredients Required'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'cook':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <Beaker className=\"w-4 h-4 mr-1 text-purple-500\" />\r\n              Cooking Recipe\r\n            </h3>\r\n            \r\n            <div className=\"bg-purple-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-purple-700\">\r\n                Follow the mixing sequence exactly as shown. Check off each step as you complete it.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              {cookingSteps.map((step, idx) => (\r\n                <div \r\n                  key={idx} \r\n                  className={`flex items-center mb-2 p-2 rounded ${\r\n                    step.completed ? 'bg-purple-50 border border-purple-200' : 'bg-gray-50'\r\n                  }`}\r\n                >\r\n                  <div className=\"w-6 h-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center text-xs font-medium mr-2\">\r\n                    {idx + 1}\r\n                  </div>\r\n                  \r\n                  <label htmlFor={`step-${idx}`} className=\"flex-grow text-sm font-medium\">\r\n                    {step.name}\r\n                  </label>\r\n                  \r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`step-${idx}`}\r\n                    checked={step.completed}\r\n                    onChange={() => toggleCookingStep(step.id)}\r\n                    className=\"ml-auto h-5 w-5 text-purple-600\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allCookingStepsCompleted()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allCookingStepsCompleted()\r\n                  ? 'bg-purple-600 text-white hover:bg-purple-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              {allCookingStepsCompleted() ? 'Product Ready for Sale' : 'Complete All Cooking Steps'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'sell':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <DollarSign className=\"w-4 h-4 mr-1 text-green-500\" />\r\n              Product Distribution\r\n            </h3>\r\n            \r\n            <div className=\"bg-green-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-green-700\">\r\n                Allocate your product between personal sales and dealer distribution. \r\n                Total allocated: {sellingData.personalQuantity + sellingData.dealerQuantity} of {plan.plannedQuantity}.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n              {/* Personal Sales Section */}\r\n              <div className=\"border border-gray-200 rounded-lg p-3\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Personal Sales</h4>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm text-gray-600 mb-1\">Quantity to Sell Personally</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max={plan.plannedQuantity - sellingData.dealerQuantity}\r\n                    value={sellingData.personalQuantity}\r\n                    onChange={(e) => updateSellingData('personalQuantity', Math.max(0, parseInt(e.target.value) || 0))}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm text-gray-600 mb-1\">Price per {drugTypes[plan.drugType]?.unit || 'unit'}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"1\"\r\n                    value={sellingData.personalPrice}\r\n                    onChange={(e) => updateSellingData('personalPrice', Math.max(0, parseInt(e.target.value) || 0))}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"text-sm text-gray-700\">\r\n                  <div className=\"flex justify-between mb-1\">\r\n                    <span>Total Revenue:</span>\r\n                    <span className=\"font-medium text-blue-600\">\r\n                      ${(sellingData.personalQuantity * sellingData.personalPrice).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Estimated Profit:</span>\r\n                    <span className=\"font-medium text-green-600\">\r\n                      ${((sellingData.personalQuantity * sellingData.personalPrice) - \r\n                         (plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity))).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Dealer Assignment Section */}\r\n              <div className=\"border border-gray-200 rounded-lg p-3\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Dealer Assignment</h4>\r\n                \r\n                {dealers && dealers.length > 0 ? (\r\n                  <>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"block text-sm text-gray-600 mb-1\">Select Dealer</label>\r\n                      <select\r\n                        value={sellingData.selectedDealer}\r\n                        onChange={(e) => updateSellingData('selectedDealer', e.target.value)}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                      >\r\n                        <option value=\"\">Select a dealer</option>\r\n                        {dealers.filter(d => d.active).map(dealer => (\r\n                          <option key={dealer.id} value={dealer.id}>\r\n                            {dealer.name} - Cut: {dealer.cut}%\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"block text-sm text-gray-600 mb-1\">Quantity to Distribute</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max={plan.plannedQuantity - sellingData.personalQuantity}\r\n                        value={sellingData.dealerQuantity}\r\n                        onChange={(e) => updateSellingData('dealerQuantity', Math.max(0, parseInt(e.target.value) || 0))}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                      />\r\n                    </div>\r\n                    \r\n                    {sellingData.selectedDealer && (\r\n                      <div className=\"text-sm text-gray-700\">\r\n                        <div className=\"flex justify-between mb-1\">\r\n                          <span>Dealer Revenue:</span>\r\n                          <span className=\"font-medium text-blue-600\">\r\n                            ${(sellingData.dealerQuantity * plan.salePrice).toFixed(2)}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        {(() => {\r\n                          const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\r\n                          const dealerCut = selectedDealer ? selectedDealer.cut : 0;\r\n                          const yourProfit = (sellingData.dealerQuantity * plan.salePrice) * (1 - dealerCut / 100);\r\n                          \r\n                          return (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Your Profit (after {dealerCut}% cut):</span>\r\n                              <span className=\"font-medium text-green-600\">\r\n                                ${yourProfit.toFixed(2)}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <div className=\"bg-yellow-50 p-3 rounded text-sm text-yellow-700\">\r\n                    <AlertTriangle className=\"inline-block mr-1 w-4 h-4\" />\r\n                    No active dealers available. Visit the Crew tab to activate dealers.\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allProductAllocated()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allProductAllocated()\r\n                  ? 'bg-green-600 text-white hover:bg-green-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <DollarSign className=\"w-4 h-4 mr-1\" />\r\n              {allProductAllocated() ? 'Complete Sale' : 'Allocate All Product'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Render stage badge\r\n  const renderStageBadge = () => {\r\n    if (plan.status === 'sold') {\r\n      return (\r\n        <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\">\r\n          Sold\r\n        </span>\r\n      );\r\n    }\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800 font-medium\">\r\n            Planning\r\n          </span>\r\n        );\r\n      case 'buy':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800 font-medium\">\r\n            Ingredients\r\n          </span>\r\n        );\r\n      case 'cook':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 font-medium\">\r\n            Cooking\r\n          </span>\r\n        );\r\n      case 'sell':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\">\r\n            Selling\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 font-medium\">\r\n            In Progress\r\n          </span>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"p-4 flex items-center justify-between bg-gray-50 border-b border-gray-200\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <span className=\"text-xl\">{getDrugTypeEmoji(plan.drugType)}</span>\r\n          <div>\r\n            <h3 className=\"font-medium text-gray-900\">{plan.strainName}</h3>\r\n            {plan.effects && plan.effects.length > 0 ? (\r\n              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                {plan.effects.map((effect, idx) => (\r\n                  <span\r\n                    key={idx}\r\n                    className=\"px-2 py-0.5 text-white rounded-full text-xs\"\r\n                    style={{ backgroundColor: effectColors && effectColors[effect] ? effectColors[effect] : '#333' }}\r\n                  >\r\n                    {effect}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-xs text-gray-500 mt-1\">No effects data available</p>\r\n            )}\r\n            <p className=\"text-sm text-gray-500 mt-1\">\r\n              Created: {formatDate(plan.dateCreated)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2\">\r\n          {renderStageBadge()}\r\n          \r\n          {/* More Actions Menu Toggle */}\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={toggleActionsMenu}\r\n              className=\"p-1.5 text-gray-600 hover:bg-gray-100 rounded\"\r\n              title=\"More actions\"\r\n            >\r\n              <MoreHorizontal className=\"h-5 w-5\" />\r\n            </button>\r\n            \r\n            {/* Dropdown Menu */}\r\n            {showActionsMenu && (\r\n              <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\r\n                <div className=\"py-1\">\r\n                  <button\r\n                    onClick={() => {\r\n                      onToggleExpand();\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    <Info className=\"inline h-4 w-4 mr-2\" />\r\n                    {isExpanded ? \"Hide Details\" : \"View Details\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleReproduce();\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    <Copy className=\"inline h-4 w-4 mr-2\" />\r\n                    Produce Again\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      onRemove(plan.id);\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\r\n                  >\r\n                    <Trash2 className=\"inline h-4 w-4 mr-2\" />\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"bg-gray-100 h-2\">\r\n        <div \r\n          className={`h-full ${\r\n            plan.status === 'sold' ? 'bg-green-500' :\r\n            currentStage === 'plan' ? 'bg-blue-500' :\r\n            currentStage === 'buy' ? 'bg-orange-500' :\r\n            currentStage === 'cook' ? 'bg-purple-500' :\r\n            'bg-green-500'\r\n          }`}\r\n          style={{ width: `${calculateProgress()}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* First-time User Tooltip (shown only when info icon is clicked) */}\r\n      {showInfoTooltip && (\r\n        <div className=\"p-2 bg-blue-50 border-b border-blue-200\">\r\n          <div className=\"flex items-start\">\r\n            <HelpCircle className=\"w-4 h-4 text-blue-500 mt-0.5 mr-2 shrink-0\" />\r\n            <div className=\"text-xs text-blue-700\">\r\n              <p className=\"mb-1\"><strong>Production Flow:</strong> Follow these stages to complete production:</p>\r\n              <ol className=\"list-decimal ml-4 space-y-1\">\r\n                <li><strong>Plan:</strong> Review production details</li>\r\n                <li><strong>Buy Ingredients:</strong> Acquire all needed supplies</li>\r\n                <li><strong>Cook:</strong> Follow the recipe sequence exactly</li>\r\n                <li><strong>Sell:</strong> Distribute product personally or through dealers</li>\r\n              </ol>\r\n              <button \r\n                onClick={() => setShowInfoTooltip(false)}\r\n                className=\"mt-1 text-blue-700 hover:text-blue-800 font-medium\"\r\n              >\r\n                Got it\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Production Stage Info Button */}\r\n      {!showInfoTooltip && !plan.status === 'sold' && (\r\n        <div className=\"px-4 py-1 bg-gray-50 border-b border-gray-200 flex justify-between text-xs text-gray-500\">\r\n          <span>\r\n            {currentStage === 'plan' ? 'Planning Stage' : \r\n             currentStage === 'buy' ? 'Buying Ingredients' : \r\n             currentStage === 'cook' ? 'Cooking Process' : \r\n             'Distribution Stage'}\r\n          </span>\r\n          <button \r\n            onClick={() => setShowInfoTooltip(true)}\r\n            className=\"text-blue-500 hover:text-blue-700 flex items-center\"\r\n          >\r\n            <HelpCircle className=\"w-3 h-3 mr-1\" />\r\n            <span>How it works</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quick Info Section */}\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <div className=\"text-sm text-gray-500\">Quantity</div>\r\n            <div className=\"text-lg font-medium\">{plan.plannedQuantity} {drugTypes[plan.drugType]?.unit || 'units'}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-sm text-gray-500\">Price</div>\r\n            <div className=\"text-lg font-medium\">${plan.salePrice} per {drugTypes[plan.drugType]?.unit || 'unit'}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stage-specific Content */}\r\n      {renderStageContent()}\r\n\r\n      {/* Expanded Details */}\r\n      {isExpanded && (\r\n        <div className=\"p-4 bg-gray-50\">\r\n          <h4 className=\"font-medium text-gray-900 mb-3\">Required Ingredients</h4>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Ingredient\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Quantity\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Cost\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200 bg-white\">\r\n                {plan.totalIngredientNeeds.map((ingredient, idx) => (\r\n                  <tr key={idx}>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\r\n                      {ingredient.name}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                      {ingredient.quantity}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                      ${ingredient.totalCost.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"bg-gray-50\">\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    Packaging ({plan.packagingNeeded.type})\r\n                  </td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                    {plan.packagingNeeded.quantity}\r\n                  </td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                    ${plan.packagingNeeded.cost.toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quantity Modal */}\r\n      <QuantityQualityModal\r\n        isOpen={showQuantityModal}\r\n        onClose={() => setShowQuantityModal(false)}\r\n        onConfirm={confirmReproduce}\r\n        initialQuantity={plan.plannedQuantity}\r\n        drugType={plan.drugType}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}