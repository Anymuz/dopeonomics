{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Documents\\\\_Technical Projects\\\\Doponomics\\\\dopeonomics\\\\src\\\\ProductionPlanCard.js\",\n  _s = $RefreshSig$();\n// Enhanced Production Plan Card Component\nimport React, { useState, useEffect } from 'react';\nimport { DollarSign, Info, Copy, Trash2, MoreHorizontal, ShoppingCart, Beaker, Check, AlertTriangle, HelpCircle, RefreshCw, ChevronsRight } from 'lucide-react';\n\n// Import the quantity modal\nimport QuantityQualityModal from './QuantityQualityModal';\n\n// Production Plan Card Component with workflow stages\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductionPlanCard = ({\n  plan,\n  isExpanded,\n  onToggleExpand,\n  onUpdatePlan,\n  onMarkAsSold,\n  onRemove,\n  onReproduce,\n  drugTypes,\n  dealers = [],\n  // Added dealers prop\n  setDailySales,\n  setDealerTransactions,\n  effectColors\n}) => {\n  _s();\n  var _drugTypes$plan$drugT6, _drugTypes$plan$drugT7;\n  const [showActionsMenu, setShowActionsMenu] = useState(false);\n  const [showQuantityModal, setShowQuantityModal] = useState(false);\n  const [showInfoTooltip, setShowInfoTooltip] = useState(false);\n\n  // State for purchased ingredients tracking\n  const [purchasedIngredients, setPurchasedIngredients] = useState({});\n\n  // State for cooking progress\n  const [cookingSteps, setCookingSteps] = useState([]);\n\n  // State for PGA usage selection \n  const [usePGA, setUsePGA] = useState(plan.usePGA || false);\n\n  // State for selling controls\n  const [sellingData, setSellingData] = useState({\n    personalQuantity: 0,\n    dealerQuantity: 0,\n    selectedDealer: '',\n    personalPrice: plan.salePrice || 0\n  });\n\n  // Determine the current stage of production\n  const [currentStage, setCurrentStage] = useState('plan'); // 'plan', 'buy', 'cook', 'sell'\n\n  // Load saved stage and progress data when component mounts\n  useEffect(() => {\n    if (plan.productionStage) {\n      setCurrentStage(plan.productionStage);\n    }\n    if (plan.purchasedIngredients) {\n      setPurchasedIngredients(plan.purchasedIngredients);\n    } else {\n      // Initialize empty tracking for all ingredients\n      const initialPurchased = {};\n      plan.totalIngredientNeeds.forEach(ingredient => {\n        initialPurchased[ingredient.name] = 0;\n      });\n      setPurchasedIngredients(initialPurchased);\n    }\n    if (plan.cookingSteps) {\n      setCookingSteps(plan.cookingSteps);\n    } else {\n      // Initialize cooking steps based on the strain's ingredients\n      const initialSteps = [];\n      // The first step is always the base seed/precursor\n      const seedIngredient = plan.totalIngredientNeeds.find(ing => ing.name.includes('Seed') || ing.name.includes('Pseudo') || ing.name.includes('Coca'));\n      if (seedIngredient) {\n        initialSteps.push({\n          id: 'seed',\n          name: seedIngredient.name,\n          completed: false\n        });\n      }\n\n      // Add other ingredients as steps (excluding the seed and packaging)\n      plan.totalIngredientNeeds.forEach(ingredient => {\n        if (!ingredient.name.includes('Seed') && !ingredient.name.includes('Pseudo') && !ingredient.name.includes('Coca') && !ingredient.name.includes('Baggie') && !ingredient.name.includes('Jar')) {\n          initialSteps.push({\n            id: ingredient.name,\n            name: ingredient.name,\n            completed: false\n          });\n        }\n      });\n      setCookingSteps(initialSteps);\n    }\n\n    // Initialize selling data\n    if (plan.sellingData) {\n      setSellingData(plan.sellingData);\n    } else {\n      setSellingData({\n        personalQuantity: 0,\n        dealerQuantity: 0,\n        selectedDealer: dealers.length > 0 ? dealers[0].id : '',\n        personalPrice: plan.salePrice || 0\n      });\n    }\n\n    // Determine PGA usage\n    if (plan.usePGA || plan.usePGA !== undefined) {\n      setUsePGA(plan.usePGA);\n    }\n  }, [plan, dealers]);\n\n  // Format date to a readable string\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Get drug type emoji\n  const getDrugTypeEmoji = drugType => {\n    var _drugTypes$drugType;\n    return ((_drugTypes$drugType = drugTypes[drugType]) === null || _drugTypes$drugType === void 0 ? void 0 : _drugTypes$drugType.emoji) || 'ðŸŒ¿';\n  };\n\n  // Calculate progress percentage for the progress bar\n  const calculateProgress = () => {\n    if (plan.status === 'sold') return 100;\n    switch (currentStage) {\n      case 'plan':\n        return 0;\n      case 'buy':\n        // Calculate percentage of purchased ingredients\n        const totalNeeded = Object.values(plan.totalIngredientNeeds).reduce((sum, ing) => sum + ing.quantity, 0);\n        const totalPurchased = Object.values(purchasedIngredients).reduce((sum, qty) => sum + qty, 0);\n        return Math.min(100, Math.round(totalPurchased / totalNeeded * 25 + 0));\n      // 0-25%\n      case 'cook':\n        // Calculate percentage of completed cooking steps\n        const completedSteps = cookingSteps.filter(step => step.completed).length;\n        return Math.min(100, Math.round(completedSteps / cookingSteps.length * 25 + 25));\n      // 25-50%\n      case 'sell':\n        // Calculate based on sold quantity\n        const totalQuantity = plan.plannedQuantity;\n        const soldQuantity = sellingData.personalQuantity + sellingData.dealerQuantity;\n        return Math.min(100, Math.round(soldQuantity / totalQuantity * 25 + 50));\n      // 50-75%\n      default:\n        return 0;\n    }\n  };\n\n  // Check if all ingredients are purchased\n  const allIngredientsPurchased = () => {\n    return plan.totalIngredientNeeds.every(ingredient => (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity);\n  };\n\n  // Check if all cooking steps are completed\n  const allCookingStepsCompleted = () => {\n    return cookingSteps.every(step => step.completed);\n  };\n\n  // Check if all product is allocated for sale\n  const allProductAllocated = () => {\n    return sellingData.personalQuantity + sellingData.dealerQuantity >= plan.plannedQuantity;\n  };\n\n  // Handle toggle of purchased state for an ingredient\n  const toggleIngredientPurchased = (ingredientName, purchased) => {\n    const updatedPurchased = {\n      ...purchasedIngredients\n    };\n    if (purchased) {\n      // Mark as fully purchased\n      const ingredient = plan.totalIngredientNeeds.find(ing => ing.name === ingredientName);\n      if (ingredient) {\n        updatedPurchased[ingredientName] = ingredient.quantity;\n      }\n    } else {\n      // Mark as not purchased\n      updatedPurchased[ingredientName] = 0;\n    }\n    setPurchasedIngredients(updatedPurchased);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      purchasedIngredients: updatedPurchased,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle updating the purchased quantity for an ingredient\n  const updatePurchasedQuantity = (ingredientName, quantity) => {\n    const updatedPurchased = {\n      ...purchasedIngredients\n    };\n    updatedPurchased[ingredientName] = Math.max(0, parseInt(quantity) || 0);\n    setPurchasedIngredients(updatedPurchased);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      purchasedIngredients: updatedPurchased,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle toggling a cooking step as complete\n  const toggleCookingStep = stepId => {\n    const updatedSteps = cookingSteps.map(step => step.id === stepId ? {\n      ...step,\n      completed: !step.completed\n    } : step);\n    setCookingSteps(updatedSteps);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      cookingSteps: updatedSteps,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle updating selling quantities\n  const updateSellingData = (field, value) => {\n    const updatedData = {\n      ...sellingData,\n      [field]: value\n    };\n\n    // Prevent exceeding total planned quantity\n    const totalAllocated = updatedData.personalQuantity + updatedData.dealerQuantity;\n    if (totalAllocated > plan.plannedQuantity) {\n      if (field === 'personalQuantity') {\n        updatedData.personalQuantity = plan.plannedQuantity - updatedData.dealerQuantity;\n      } else if (field === 'dealerQuantity') {\n        updatedData.dealerQuantity = plan.plannedQuantity - updatedData.personalQuantity;\n      }\n    }\n    setSellingData(updatedData);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      sellingData: updatedData,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle PGA selection\n  const handlePGAChange = checked => {\n    const newUsePGA = checked;\n    setUsePGA(newUsePGA);\n\n    // Update revenue/profit from yield boosts\n    const boost = newUsePGA ? 1.2 : 1;\n    const boostedQuantity = Math.round(plan.plannedQuantity * boost);\n    const newExpectedRevenue = boostedQuantity * plan.salePrice;\n\n    // Object for updated revenue/profit\n    onUpdatePlan(plan.id, {\n      usePGA: newUsePGA,\n      boostedQuantity: boostedQuantity,\n      boostedExpectedRevenue: newExpectedRevenue,\n      boostedExpectedProfit: newExpectedRevenue - plan.productionCost\n    });\n  };\n\n  // Move to the next stage\n  const advanceStage = () => {\n    let nextStage;\n    switch (currentStage) {\n      case 'plan':\n        nextStage = 'buy';\n        break;\n      case 'buy':\n        nextStage = 'cook';\n        break;\n      case 'cook':\n        nextStage = 'sell';\n        break;\n      case 'sell':\n        // If already at sell, we're done - mark as sold\n        handleCompleteSale();\n        return;\n      default:\n        nextStage = 'plan';\n    }\n    setCurrentStage(nextStage);\n\n    // Save stage to plan state\n    onUpdatePlan(plan.id, {\n      productionStage: nextStage\n    });\n  };\n\n  // Handle completing the entire sale process\n  const handleCompleteSale = () => {\n    // Process personal sales\n    if (sellingData.personalQuantity > 0) {\n      const personalSale = {\n        id: Date.now(),\n        amount: sellingData.personalQuantity * sellingData.personalPrice,\n        expenses: 0,\n        // No additional expenses\n        profit: sellingData.personalQuantity * sellingData.personalPrice - plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity),\n        type: 'personal',\n        productType: plan.drugType,\n        units: sellingData.personalQuantity,\n        date: new Date().toISOString(),\n        strainName: plan.strainName,\n        strainId: plan.strainId\n      };\n\n      // Add to daily sales\n      if (setDailySales) {\n        setDailySales(prev => [...prev, personalSale]);\n      }\n    }\n\n    // Process dealer sales\n    if (sellingData.dealerQuantity > 0 && sellingData.selectedDealer) {\n      const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\n      if (selectedDealer) {\n        const dealerTransaction = {\n          id: Date.now(),\n          dealerId: selectedDealer.id,\n          dealerName: selectedDealer.name,\n          productType: plan.drugType,\n          inventorySupplied: sellingData.dealerQuantity,\n          cashCollected: sellingData.dealerQuantity * plan.salePrice,\n          profit: sellingData.dealerQuantity * plan.salePrice * (1 - selectedDealer.cut / 100),\n          date: new Date().toISOString(),\n          strainName: plan.strainName,\n          strainId: plan.strainId\n        };\n\n        // Add to dealer transactions\n        if (setDealerTransactions) {\n          setDealerTransactions(prev => [...prev, dealerTransaction]);\n        }\n      }\n    }\n\n    // Mark the production plan as sold\n    onMarkAsSold(plan.id);\n  };\n  const toggleActionsMenu = e => {\n    e.stopPropagation();\n    setShowActionsMenu(!showActionsMenu);\n  };\n  const handleReproduce = () => {\n    setShowQuantityModal(true);\n  };\n  const confirmReproduce = (quantity, quality) => {\n    onReproduce(plan, quantity, quality);\n    setShowQuantityModal(false);\n  };\n\n  // Render stage-specific content\n  const renderStageContent = () => {\n    var _drugTypes$plan$drugT, _drugTypes$plan$drugT2, _drugTypes$plan$drugT3, _drugTypes$plan$drugT4, _drugTypes$plan$drugT5;\n    const effectiveQuantity = usePGA ? Math.round(plan.plannedQuantity * 1.2) : plan.plannedQuantity;\n    const expectedRevenue = effectiveQuantity * plan.salePrice;\n    const expectedProfit = expectedRevenue - plan.productionCost;\n    if (plan.status === 'sold') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-green-50 border-t border-green-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-green-700 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: \"Production Completed and Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-600\",\n          children: [\"This batch was successfully produced and sold on \", formatDate(plan.dateSold), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReproduce,\n          className: \"mt-3 w-full flex items-center justify-center py-2 bg-green-100 text-green-700 hover:bg-green-200 rounded-md font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-4 h-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), \"Produce This Strain Again\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this);\n    }\n    switch (currentStage) {\n      case 'plan':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              className: \"w-4 h-4 mr-1 text-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), \"Planning Stage\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-blue-700\",\n              children: \"Set your production quantity and adjust the sale price to see how profitability changes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Production Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  value: plan.plannedQuantity,\n                  onChange: e => {\n                    const newQuantity = Math.max(0, parseInt(e.target.value) || 0);\n                    // Recalculate expectedRevenue based on new quantity\n                    const newExpectedRevenue = newQuantity * plan.salePrice;\n                    onUpdatePlan(plan.id, {\n                      plannedQuantity: newQuantity,\n                      expectedRevenue: newExpectedRevenue,\n                      expectedProfit: newExpectedRevenue - plan.productionCost\n                    });\n                  },\n                  className: \"flex-1 p-2 border rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 p-2 bg-gray-100 rounded-md text-gray-700 whitespace-nowrap\",\n                  children: ((_drugTypes$plan$drugT = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT === void 0 ? void 0 : _drugTypes$plan$drugT.unit) || 'units'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: [\"Price per \", ((_drugTypes$plan$drugT2 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT2 === void 0 ? void 0 : _drugTypes$plan$drugT2.unit) || 'unit']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"p-2 border border-r-0 rounded-l-md bg-gray-100 text-gray-700\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"1\",\n                  value: plan.salePrice,\n                  onChange: e => {\n                    const newPrice = Math.max(0, parseInt(e.target.value) || 0);\n                    // Recalculate expectedRevenue based on new price\n                    const newExpectedRevenue = plan.plannedQuantity * newPrice;\n                    onUpdatePlan(plan.id, {\n                      salePrice: newPrice,\n                      expectedRevenue: newExpectedRevenue,\n                      expectedProfit: newExpectedRevenue - plan.productionCost\n                    });\n                  },\n                  className: \"flex-1 p-2 border rounded-r-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mt-2 space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `pga-toogle-${plan.id}`,\n              checked: usePGA,\n              onChange: e => handlePGAChange(e.target.checked),\n              className: \"h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `pga-toggle-${plan.id}`,\n              className: \"text-sm text-gray-700\",\n              children: [\"Use \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-indigo-700\",\n                children: \"PGA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this), \" to boost yield \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-green-600\",\n                children: \"(+20%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 93\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Total Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: [\"$\", plan.productionCost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: [\"Cost per \", ((_drugTypes$plan$drugT3 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT3 === void 0 ? void 0 : _drugTypes$plan$drugT3.unit) || 'unit', \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-700\",\n                  children: [\"$\", (plan.productionCost / plan.plannedQuantity).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Expected Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-blue-600\",\n                children: [\"$\", expectedRevenue.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Expected Profit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-green-600\",\n                children: [\"$\", expectedProfit.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: [\"Profit per \", ((_drugTypes$plan$drugT4 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT4 === void 0 ? void 0 : _drugTypes$plan$drugT4.unit) || 'unit', \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-green-600\",\n                  children: [\"$\", (plan.expectedProfit / plan.plannedQuantity).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700\",\n                children: \"Profit margin:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-green-600\",\n                children: [Math.round(expectedProfit / expectedRevenue * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 relative w-full h-2 bg-gray-200 rounded-full overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-0 left-0 h-full bg-green-500 rounded-full\",\n                style: {\n                  width: `${Math.min(100, Math.round(expectedProfit / expectedRevenue * 100))}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            className: \"w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronsRight, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this), \"Proceed to Ingredients\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this);\n      case 'buy':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              className: \"w-4 h-4 mr-1 text-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), \"Ingredients Shopping List\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-orange-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-orange-700\",\n              children: \"Check off each ingredient as you purchase them. When you have all ingredients, you can proceed to cooking.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: plan.totalIngredientNeeds.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2 p-2 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `ingredient-${idx}`,\n                checked: (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity,\n                onChange: e => toggleIngredientPurchased(ingredient.name, e.target.checked),\n                className: \"mr-2 h-4 w-4 text-blue-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `ingredient-${idx}`,\n                className: \"flex-grow text-sm font-medium\",\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: ingredient.quantity,\n                  value: purchasedIngredients[ingredient.name] || 0,\n                  onChange: e => updatePurchasedQuantity(ingredient.name, e.target.value),\n                  className: \"w-16 p-1 text-sm border rounded mr-2 text-center\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"/ \", ingredient.quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            disabled: !allIngredientsPurchased(),\n            className: `w-full py-2 rounded-md flex items-center justify-center ${allIngredientsPurchased() ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(ChevronsRight, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), allIngredientsPurchased() ? 'Proceed to Cooking' : 'All Ingredients Required']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this);\n      case 'cook':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Beaker, {\n              className: \"w-4 h-4 mr-1 text-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), \"Cooking Recipe\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-purple-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-purple-700\",\n              children: \"Follow the mixing sequence exactly as shown. Check off each step as you complete it.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: cookingSteps.map((step, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center mb-2 p-2 rounded ${step.completed ? 'bg-purple-50 border border-purple-200' : 'bg-gray-50'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center text-xs font-medium mr-2\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `step-${idx}`,\n                className: \"flex-grow text-sm font-medium\",\n                children: step.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `step-${idx}`,\n                checked: step.completed,\n                onChange: () => toggleCookingStep(step.id),\n                className: \"ml-auto h-5 w-5 text-purple-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            disabled: !allCookingStepsCompleted(),\n            className: `w-full py-2 rounded-md flex items-center justify-center ${allCookingStepsCompleted() ? 'bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(ChevronsRight, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), allCookingStepsCompleted() ? 'Product Ready for Sale' : 'Complete All Cooking Steps']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this);\n      case 'sell':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-4 h-4 mr-1 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this), \"Product Distribution\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-green-700\",\n              children: [\"Allocate your product between personal sales and dealer distribution. Total allocated: \", sellingData.personalQuantity + sellingData.dealerQuantity, \" of \", plan.plannedQuantity, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-gray-700 mb-2\",\n                children: \"Personal Sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm text-gray-600 mb-1\",\n                  children: \"Quantity to Sell Personally\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: plan.plannedQuantity - sellingData.dealerQuantity,\n                  value: sellingData.personalQuantity,\n                  onChange: e => updateSellingData('personalQuantity', Math.max(0, parseInt(e.target.value) || 0)),\n                  className: \"w-full p-2 border rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm text-gray-600 mb-1\",\n                  children: [\"Price per \", ((_drugTypes$plan$drugT5 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT5 === void 0 ? void 0 : _drugTypes$plan$drugT5.unit) || 'unit']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"1\",\n                  value: sellingData.personalPrice,\n                  onChange: e => updateSellingData('personalPrice', Math.max(0, parseInt(e.target.value) || 0)),\n                  className: \"w-full p-2 border rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Total Revenue:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-blue-600\",\n                    children: [\"$\", (sellingData.personalQuantity * sellingData.personalPrice).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 710,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Estimated Profit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-green-600\",\n                    children: [\"$\", (sellingData.personalQuantity * sellingData.personalPrice - plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity)).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-gray-700 mb-2\",\n                children: \"Dealer Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 17\n              }, this), dealers && dealers.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm text-gray-600 mb-1\",\n                    children: \"Select Dealer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: sellingData.selectedDealer,\n                    onChange: e => updateSellingData('selectedDealer', e.target.value),\n                    className: \"w-full p-2 border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select a dealer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 737,\n                      columnNumber: 25\n                    }, this), dealers.filter(d => d.active).map(dealer => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dealer.id,\n                      children: [dealer.name, \" - Cut: \", dealer.cut, \"%\"]\n                    }, dealer.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm text-gray-600 mb-1\",\n                    children: \"Quantity to Distribute\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    max: plan.plannedQuantity - sellingData.personalQuantity,\n                    value: sellingData.dealerQuantity,\n                    onChange: e => updateSellingData('dealerQuantity', Math.max(0, parseInt(e.target.value) || 0)),\n                    className: \"w-full p-2 border rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 21\n                }, this), sellingData.selectedDealer && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-700\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Dealer Revenue:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-blue-600\",\n                      children: [\"$\", (sellingData.dealerQuantity * plan.salePrice).toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 25\n                  }, this), (() => {\n                    const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\n                    const dealerCut = selectedDealer ? selectedDealer.cut : 0;\n                    const yourProfit = sellingData.dealerQuantity * plan.salePrice * (1 - dealerCut / 100);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Your Profit (after \", dealerCut, \"% cut):\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 774,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium text-green-600\",\n                        children: [\"$\", yourProfit.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 775,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 773,\n                      columnNumber: 29\n                    }, this);\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-yellow-50 p-3 rounded text-sm text-yellow-700\",\n                children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                  className: \"inline-block mr-1 w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 21\n                }, this), \"No active dealers available. Visit the Crew tab to activate dealers.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            disabled: !allProductAllocated(),\n            className: `w-full py-2 rounded-md flex items-center justify-center ${allProductAllocated() ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 15\n            }, this), allProductAllocated() ? 'Complete Sale' : 'Allocate All Product']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Render stage badge\n  const renderStageBadge = () => {\n    if (plan.status === 'sold') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\",\n        children: \"Sold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this);\n    }\n    switch (currentStage) {\n      case 'plan':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800 font-medium\",\n          children: \"Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this);\n      case 'buy':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800 font-medium\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this);\n      case 'cook':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 font-medium\",\n          children: \"Cooking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }, this);\n      case 'sell':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\",\n          children: \"Selling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 font-medium\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg border border-gray-200 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex items-center justify-between bg-gray-50 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xl\",\n          children: getDrugTypeEmoji(plan.drugType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-900\",\n            children: plan.strainName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this), plan.effects && plan.effects.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-1 mt-1\",\n            children: plan.effects.map((effect, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-2 py-0.5 text-white rounded-full text-xs\",\n              style: {\n                backgroundColor: effectColors && effectColors[effect] ? effectColors[effect] : '#333'\n              },\n              children: effect\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"No effects data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-1\",\n            children: [\"Created: \", formatDate(plan.dateCreated)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [renderStageBadge(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleActionsMenu,\n            className: \"p-1.5 text-gray-600 hover:bg-gray-100 rounded\",\n            title: \"More actions\",\n            children: /*#__PURE__*/_jsxDEV(MoreHorizontal, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), showActionsMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onToggleExpand();\n                  setShowActionsMenu(false);\n                },\n                className: \"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  className: \"inline h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 910,\n                  columnNumber: 21\n                }, this), isExpanded ? \"Hide Details\" : \"View Details\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  handleReproduce();\n                  setShowActionsMenu(false);\n                },\n                className: \"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(Copy, {\n                  className: \"inline h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 21\n                }, this), \"Produce Again\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onRemove(plan.id);\n                  setShowActionsMenu(false);\n                },\n                className: \"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\",\n                children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"inline h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 21\n                }, this), \"Remove\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 h-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-full ${plan.status === 'sold' ? 'bg-green-500' : currentStage === 'plan' ? 'bg-blue-500' : currentStage === 'buy' ? 'bg-orange-500' : currentStage === 'cook' ? 'bg-purple-500' : 'bg-green-500'}`,\n        style: {\n          width: `${calculateProgress()}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 7\n    }, this), showInfoTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-blue-50 border-b border-blue-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n          className: \"w-4 h-4 text-blue-500 mt-0.5 mr-2 shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-blue-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Production Flow:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 35\n            }, this), \" Follow these stages to complete production:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"list-decimal ml-4 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Plan:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 21\n              }, this), \" Review production details\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Buy Ingredients:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 21\n              }, this), \" Acquire all needed supplies\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Cook:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 21\n              }, this), \" Follow the recipe sequence exactly\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sell:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 21\n              }, this), \" Distribute product personally or through dealers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInfoTooltip(false),\n            className: \"mt-1 text-blue-700 hover:text-blue-800 font-medium\",\n            children: \"Got it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 9\n    }, this), !showInfoTooltip && !plan.status === 'sold' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-1 bg-gray-50 border-b border-gray-200 flex justify-between text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentStage === 'plan' ? 'Planning Stage' : currentStage === 'buy' ? 'Buying Ingredients' : currentStage === 'cook' ? 'Cooking Process' : 'Distribution Stage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInfoTooltip(true),\n        className: \"text-blue-500 hover:text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n          className: \"w-3 h-3 mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"How it works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium\",\n            children: [plan.plannedQuantity, usePGA && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-sm text-green-600\",\n              children: [\"(+\", Math.round(plan.plannedQuantity * 0.2), \" boost = \", Math.round(plan.plannedQuantity * 1.2), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 17\n            }, this), \" \", ((_drugTypes$plan$drugT6 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT6 === void 0 ? void 0 : _drugTypes$plan$drugT6.unit) || 'units']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium\",\n            children: [\"$\", plan.salePrice, \" per \", ((_drugTypes$plan$drugT7 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT7 === void 0 ? void 0 : _drugTypes$plan$drugT7.unit) || 'unit']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1013,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 7\n    }, this), renderStageContent(), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-gray-900 mb-3\",\n        children: \"Required Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Ingredient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"divide-y divide-gray-200 bg-white\",\n            children: [plan.totalIngredientNeeds.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-900\",\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: ingredient.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: [\"$\", ingredient.totalCost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: [\"Packaging (\", plan.packagingNeeded.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: plan.packagingNeeded.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: [\"$\", plan.packagingNeeded.cost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(QuantityQualityModal, {\n      isOpen: showQuantityModal,\n      onClose: () => setShowQuantityModal(false),\n      onConfirm: confirmReproduce,\n      initialQuantity: plan.plannedQuantity,\n      drugType: plan.drugType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 858,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductionPlanCard, \"5yw5x3xNfFnM4W2ff765JHOg1A0=\");\n_c = ProductionPlanCard;\nexport default ProductionPlanCard;\nvar _c;\n$RefreshReg$(_c, \"ProductionPlanCard\");","map":{"version":3,"names":["React","useState","useEffect","DollarSign","Info","Copy","Trash2","MoreHorizontal","ShoppingCart","Beaker","Check","AlertTriangle","HelpCircle","RefreshCw","ChevronsRight","QuantityQualityModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductionPlanCard","plan","isExpanded","onToggleExpand","onUpdatePlan","onMarkAsSold","onRemove","onReproduce","drugTypes","dealers","setDailySales","setDealerTransactions","effectColors","_s","_drugTypes$plan$drugT6","_drugTypes$plan$drugT7","showActionsMenu","setShowActionsMenu","showQuantityModal","setShowQuantityModal","showInfoTooltip","setShowInfoTooltip","purchasedIngredients","setPurchasedIngredients","cookingSteps","setCookingSteps","usePGA","setUsePGA","sellingData","setSellingData","personalQuantity","dealerQuantity","selectedDealer","personalPrice","salePrice","currentStage","setCurrentStage","productionStage","initialPurchased","totalIngredientNeeds","forEach","ingredient","name","initialSteps","seedIngredient","find","ing","includes","push","id","completed","length","undefined","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getDrugTypeEmoji","drugType","_drugTypes$drugType","emoji","calculateProgress","status","totalNeeded","Object","values","reduce","sum","quantity","totalPurchased","qty","Math","min","round","completedSteps","filter","step","totalQuantity","plannedQuantity","soldQuantity","allIngredientsPurchased","every","allCookingStepsCompleted","allProductAllocated","toggleIngredientPurchased","ingredientName","purchased","updatedPurchased","updatePurchasedQuantity","max","parseInt","toggleCookingStep","stepId","updatedSteps","map","updateSellingData","field","value","updatedData","totalAllocated","handlePGAChange","checked","newUsePGA","boost","boostedQuantity","newExpectedRevenue","boostedExpectedRevenue","boostedExpectedProfit","productionCost","advanceStage","nextStage","handleCompleteSale","personalSale","now","amount","expenses","profit","type","productType","units","toISOString","strainName","strainId","prev","d","dealerTransaction","dealerId","dealerName","inventorySupplied","cashCollected","cut","toggleActionsMenu","e","stopPropagation","handleReproduce","confirmReproduce","quality","renderStageContent","_drugTypes$plan$drugT","_drugTypes$plan$drugT2","_drugTypes$plan$drugT3","_drugTypes$plan$drugT4","_drugTypes$plan$drugT5","effectiveQuantity","expectedRevenue","expectedProfit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dateSold","onClick","onChange","newQuantity","target","unit","newPrice","htmlFor","toFixed","style","width","idx","disabled","active","dealer","dealerCut","yourProfit","renderStageBadge","effects","effect","backgroundColor","dateCreated","title","totalCost","packagingNeeded","cost","isOpen","onClose","onConfirm","initialQuantity","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/ProductionPlanCard.js"],"sourcesContent":["// Enhanced Production Plan Card Component\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  DollarSign,\r\n  Info,\r\n  Copy,\r\n  Trash2,\r\n  MoreHorizontal,\r\n  ShoppingCart,\r\n  Beaker,\r\n  Check,\r\n  AlertTriangle,\r\n  HelpCircle,\r\n  RefreshCw,\r\n  ChevronsRight\r\n} from 'lucide-react';\r\n\r\n// Import the quantity modal\r\nimport QuantityQualityModal from './QuantityQualityModal';\r\n\r\n// Production Plan Card Component with workflow stages\r\nconst ProductionPlanCard = ({ \r\n  plan, \r\n  isExpanded, \r\n  onToggleExpand, \r\n  onUpdatePlan, \r\n  onMarkAsSold, \r\n  onRemove,\r\n  onReproduce,\r\n  drugTypes,\r\n  dealers = [], // Added dealers prop\r\n  setDailySales,\r\n  setDealerTransactions,\r\n  effectColors\r\n}) => {\r\n  const [showActionsMenu, setShowActionsMenu] = useState(false);\r\n  const [showQuantityModal, setShowQuantityModal] = useState(false);\r\n  const [showInfoTooltip, setShowInfoTooltip] = useState(false);\r\n\r\n  // State for purchased ingredients tracking\r\n  const [purchasedIngredients, setPurchasedIngredients] = useState({});\r\n  \r\n  // State for cooking progress\r\n  const [cookingSteps, setCookingSteps] = useState([]);\r\n\r\n \r\n  // State for PGA usage selection \r\n  const [usePGA, setUsePGA] = useState(plan.usePGA || false);\r\n    \r\n  // State for selling controls\r\n  const [sellingData, setSellingData] = useState({\r\n    personalQuantity: 0,\r\n    dealerQuantity: 0,\r\n    selectedDealer: '',\r\n    personalPrice: plan.salePrice || 0\r\n  });\r\n\r\n  // Determine the current stage of production\r\n  const [currentStage, setCurrentStage] = useState('plan'); // 'plan', 'buy', 'cook', 'sell'\r\n\r\n  // Load saved stage and progress data when component mounts\r\n  useEffect(() => {\r\n    if (plan.productionStage) {\r\n      setCurrentStage(plan.productionStage);\r\n    }\r\n    \r\n    if (plan.purchasedIngredients) {\r\n      setPurchasedIngredients(plan.purchasedIngredients);\r\n    } else {\r\n      // Initialize empty tracking for all ingredients\r\n      const initialPurchased = {};\r\n      plan.totalIngredientNeeds.forEach(ingredient => {\r\n        initialPurchased[ingredient.name] = 0;\r\n      });\r\n      setPurchasedIngredients(initialPurchased);\r\n    }\r\n\r\n    if (plan.cookingSteps) {\r\n      setCookingSteps(plan.cookingSteps);\r\n    } else {\r\n      // Initialize cooking steps based on the strain's ingredients\r\n      const initialSteps = [];\r\n      // The first step is always the base seed/precursor\r\n      const seedIngredient = plan.totalIngredientNeeds.find(ing => \r\n        ing.name.includes('Seed') || ing.name.includes('Pseudo') || ing.name.includes('Coca')\r\n      );\r\n      \r\n      if (seedIngredient) {\r\n        initialSteps.push({\r\n          id: 'seed',\r\n          name: seedIngredient.name,\r\n          completed: false\r\n        });\r\n      }\r\n\r\n      // Add other ingredients as steps (excluding the seed and packaging)\r\n      plan.totalIngredientNeeds.forEach(ingredient => {\r\n        if (!ingredient.name.includes('Seed') && \r\n            !ingredient.name.includes('Pseudo') && \r\n            !ingredient.name.includes('Coca') &&\r\n            !ingredient.name.includes('Baggie') && \r\n            !ingredient.name.includes('Jar')) {\r\n          initialSteps.push({\r\n            id: ingredient.name,\r\n            name: ingredient.name,\r\n            completed: false\r\n          });\r\n        }\r\n      });\r\n      \r\n      setCookingSteps(initialSteps);\r\n    }\r\n\r\n    // Initialize selling data\r\n    if (plan.sellingData) {\r\n      setSellingData(plan.sellingData);\r\n    } else {\r\n      setSellingData({\r\n        personalQuantity: 0,\r\n        dealerQuantity: 0,\r\n        selectedDealer: dealers.length > 0 ? dealers[0].id : '',\r\n        personalPrice: plan.salePrice || 0\r\n      });\r\n    }\r\n\r\n    // Determine PGA usage\r\n    if (plan.usePGA || plan.usePGA !== undefined) {\r\n      setUsePGA(plan.usePGA);\r\n    }\r\n  }, [plan, dealers]);\r\n\r\n  // Format date to a readable string\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Get drug type emoji\r\n  const getDrugTypeEmoji = (drugType) => {\r\n    return drugTypes[drugType]?.emoji || 'ðŸŒ¿';\r\n  };\r\n  \r\n  // Calculate progress percentage for the progress bar\r\n  const calculateProgress = () => {\r\n    if (plan.status === 'sold') return 100;\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return 0;\r\n      case 'buy':\r\n        // Calculate percentage of purchased ingredients\r\n        const totalNeeded = Object.values(plan.totalIngredientNeeds).reduce((sum, ing) => sum + ing.quantity, 0);\r\n        const totalPurchased = Object.values(purchasedIngredients).reduce((sum, qty) => sum + qty, 0);\r\n        return Math.min(100, Math.round((totalPurchased / totalNeeded) * 25 + 0)); // 0-25%\r\n      case 'cook':\r\n        // Calculate percentage of completed cooking steps\r\n        const completedSteps = cookingSteps.filter(step => step.completed).length;\r\n        return Math.min(100, Math.round((completedSteps / cookingSteps.length) * 25 + 25)); // 25-50%\r\n      case 'sell':\r\n        // Calculate based on sold quantity\r\n        const totalQuantity = plan.plannedQuantity;\r\n        const soldQuantity = sellingData.personalQuantity + sellingData.dealerQuantity;\r\n        return Math.min(100, Math.round((soldQuantity / totalQuantity) * 25 + 50)); // 50-75%\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  // Check if all ingredients are purchased\r\n  const allIngredientsPurchased = () => {\r\n    return plan.totalIngredientNeeds.every(ingredient => \r\n      (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity\r\n    );\r\n  };\r\n\r\n  // Check if all cooking steps are completed\r\n  const allCookingStepsCompleted = () => {\r\n    return cookingSteps.every(step => step.completed);\r\n  };\r\n\r\n  // Check if all product is allocated for sale\r\n  const allProductAllocated = () => {\r\n    return (sellingData.personalQuantity + sellingData.dealerQuantity) >= plan.plannedQuantity;\r\n  };\r\n\r\n  // Handle toggle of purchased state for an ingredient\r\n  const toggleIngredientPurchased = (ingredientName, purchased) => {\r\n    const updatedPurchased = { ...purchasedIngredients };\r\n    \r\n    if (purchased) {\r\n      // Mark as fully purchased\r\n      const ingredient = plan.totalIngredientNeeds.find(ing => ing.name === ingredientName);\r\n      if (ingredient) {\r\n        updatedPurchased[ingredientName] = ingredient.quantity;\r\n      }\r\n    } else {\r\n      // Mark as not purchased\r\n      updatedPurchased[ingredientName] = 0;\r\n    }\r\n    \r\n    setPurchasedIngredients(updatedPurchased);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      purchasedIngredients: updatedPurchased,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle updating the purchased quantity for an ingredient\r\n  const updatePurchasedQuantity = (ingredientName, quantity) => {\r\n    const updatedPurchased = { ...purchasedIngredients };\r\n    updatedPurchased[ingredientName] = Math.max(0, parseInt(quantity) || 0);\r\n    \r\n    setPurchasedIngredients(updatedPurchased);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      purchasedIngredients: updatedPurchased,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle toggling a cooking step as complete\r\n  const toggleCookingStep = (stepId) => {\r\n    const updatedSteps = cookingSteps.map(step => \r\n      step.id === stepId ? { ...step, completed: !step.completed } : step\r\n    );\r\n    \r\n    setCookingSteps(updatedSteps);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      cookingSteps: updatedSteps,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle updating selling quantities\r\n  const updateSellingData = (field, value) => {\r\n    const updatedData = { ...sellingData, [field]: value };\r\n    \r\n    // Prevent exceeding total planned quantity\r\n    const totalAllocated = updatedData.personalQuantity + updatedData.dealerQuantity;\r\n    if (totalAllocated > plan.plannedQuantity) {\r\n      if (field === 'personalQuantity') {\r\n        updatedData.personalQuantity = plan.plannedQuantity - updatedData.dealerQuantity;\r\n      } else if (field === 'dealerQuantity') {\r\n        updatedData.dealerQuantity = plan.plannedQuantity - updatedData.personalQuantity;\r\n      }\r\n    }\r\n    \r\n    setSellingData(updatedData);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      sellingData: updatedData,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle PGA selection\r\n  const handlePGAChange = (checked) => {\r\n    const newUsePGA = checked;\r\n    setUsePGA(newUsePGA);\r\n\r\n    // Update revenue/profit from yield boosts\r\n    const boost = newUsePGA ? 1.2 : 1;\r\n    const boostedQuantity = Math.round(plan.plannedQuantity * boost);\r\n    const newExpectedRevenue = boostedQuantity * plan.salePrice;\r\n\r\n    // Object for updated revenue/profit\r\n    onUpdatePlan(plan.id, {\r\n      usePGA: newUsePGA,\r\n      boostedQuantity: boostedQuantity,\r\n      boostedExpectedRevenue: newExpectedRevenue,\r\n      boostedExpectedProfit: newExpectedRevenue - plan.productionCost,\r\n    });\r\n  };\r\n\r\n  // Move to the next stage\r\n  const advanceStage = () => {\r\n    let nextStage;\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        nextStage = 'buy';\r\n        break;\r\n      case 'buy':\r\n        nextStage = 'cook';\r\n        break;\r\n      case 'cook':\r\n        nextStage = 'sell';\r\n        break;\r\n      case 'sell':\r\n        // If already at sell, we're done - mark as sold\r\n        handleCompleteSale();\r\n        return;\r\n      default:\r\n        nextStage = 'plan';\r\n    }\r\n    \r\n    setCurrentStage(nextStage);\r\n    \r\n    // Save stage to plan state\r\n    onUpdatePlan(plan.id, {\r\n      productionStage: nextStage\r\n    });\r\n  };\r\n\r\n  // Handle completing the entire sale process\r\n  const handleCompleteSale = () => {\r\n    // Process personal sales\r\n    if (sellingData.personalQuantity > 0) {\r\n      const personalSale = {\r\n        id: Date.now(),\r\n        amount: sellingData.personalQuantity * sellingData.personalPrice,\r\n        expenses: 0, // No additional expenses\r\n        profit: sellingData.personalQuantity * sellingData.personalPrice - \r\n                (plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity)),\r\n        type: 'personal',\r\n        productType: plan.drugType,\r\n        units: sellingData.personalQuantity,\r\n        date: new Date().toISOString(),\r\n        strainName: plan.strainName,\r\n        strainId: plan.strainId\r\n      };\r\n      \r\n      // Add to daily sales\r\n      if (setDailySales) {\r\n        setDailySales(prev => [...prev, personalSale]);\r\n      }\r\n    }\r\n    \r\n    // Process dealer sales\r\n    if (sellingData.dealerQuantity > 0 && sellingData.selectedDealer) {\r\n      const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\r\n      \r\n      if (selectedDealer) {\r\n        const dealerTransaction = {\r\n          id: Date.now(),\r\n          dealerId: selectedDealer.id,\r\n          dealerName: selectedDealer.name,\r\n          productType: plan.drugType,\r\n          inventorySupplied: sellingData.dealerQuantity,\r\n          cashCollected: sellingData.dealerQuantity * plan.salePrice,\r\n          profit: sellingData.dealerQuantity * plan.salePrice * (1 - selectedDealer.cut / 100),\r\n          date: new Date().toISOString(),\r\n          strainName: plan.strainName,\r\n          strainId: plan.strainId\r\n        };\r\n        \r\n        // Add to dealer transactions\r\n        if (setDealerTransactions) {\r\n          setDealerTransactions(prev => [...prev, dealerTransaction]);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Mark the production plan as sold\r\n    onMarkAsSold(plan.id);\r\n  };\r\n\r\n  const toggleActionsMenu = (e) => {\r\n    e.stopPropagation();\r\n    setShowActionsMenu(!showActionsMenu);\r\n  };\r\n\r\n  const handleReproduce = () => {\r\n    setShowQuantityModal(true);\r\n  };\r\n\r\n  const confirmReproduce = (quantity, quality) => {\r\n    onReproduce(plan, quantity, quality);\r\n    setShowQuantityModal(false);\r\n  };\r\n\r\n  // Render stage-specific content\r\n  const renderStageContent = () => {\r\n    const effectiveQuantity = usePGA ? Math.round(plan.plannedQuantity* 1.2) : plan.plannedQuantity;\r\n    const expectedRevenue = effectiveQuantity * plan.salePrice;\r\n    const expectedProfit = expectedRevenue - plan.productionCost;\r\n\r\n    if (plan.status === 'sold') {\r\n      return (\r\n        <div className=\"p-4 bg-green-50 border-t border-green-200\">\r\n          <div className=\"flex items-center text-green-700 mb-2\">\r\n            <Check className=\"w-5 h-5 mr-2\" />\r\n            <span className=\"font-medium\">Production Completed and Sold</span>\r\n          </div>\r\n          <p className=\"text-sm text-green-600\">\r\n            This batch was successfully produced and sold on {formatDate(plan.dateSold)}.\r\n          </p>\r\n          <button\r\n            onClick={handleReproduce}\r\n            className=\"mt-3 w-full flex items-center justify-center py-2 bg-green-100 text-green-700 hover:bg-green-200 rounded-md font-medium\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Produce This Strain Again\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <ShoppingCart className=\"w-4 h-4 mr-1 text-blue-500\" />\r\n              Planning Stage\r\n            </h3>\r\n            \r\n            <div className=\"bg-blue-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-blue-700\">\r\n                Set your production quantity and adjust the sale price to see how profitability changes.\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Quantity and Price Controls */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Production Quantity\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    value={plan.plannedQuantity}\r\n                    onChange={(e) => {\r\n                      const newQuantity = Math.max(0, parseInt(e.target.value) || 0);\r\n                      // Recalculate expectedRevenue based on new quantity\r\n                      const newExpectedRevenue = newQuantity * plan.salePrice;\r\n                      onUpdatePlan(plan.id, { \r\n                        plannedQuantity: newQuantity,\r\n                        expectedRevenue: newExpectedRevenue,\r\n                        expectedProfit: newExpectedRevenue - plan.productionCost\r\n                      });\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-md\"\r\n                  />\r\n                  <span className=\"ml-2 p-2 bg-gray-100 rounded-md text-gray-700 whitespace-nowrap\">\r\n                    {drugTypes[plan.drugType]?.unit || 'units'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Price per {drugTypes[plan.drugType]?.unit || 'unit'}\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <span className=\"p-2 border border-r-0 rounded-l-md bg-gray-100 text-gray-700\">$</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"1\"\r\n                    value={plan.salePrice}\r\n                    onChange={(e) => {\r\n                      const newPrice = Math.max(0, parseInt(e.target.value) || 0);\r\n                      // Recalculate expectedRevenue based on new price\r\n                      const newExpectedRevenue = plan.plannedQuantity * newPrice;\r\n                      onUpdatePlan(plan.id, { \r\n                        salePrice: newPrice,\r\n                        expectedRevenue: newExpectedRevenue,\r\n                        expectedProfit: newExpectedRevenue - plan.productionCost\r\n                      });\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-r-md\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* PGA Yield Boost Toogle */}\r\n            <div className=\"flex items-center mt-2 space-x-2\">\r\n              <input \r\n                type=\"checkbox\"\r\n                id={`pga-toogle-${plan.id}`}\r\n                checked={usePGA}\r\n                onChange={(e) => handlePGAChange(e.target.checked)}\r\n                className=\"h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor={`pga-toggle-${plan.id}`} className=\"text-sm text-gray-700\">\r\n                Use <span className=\"font-medium text-indigo-700\">PGA</span> to boost yield <span className=\"text-green-600\">(+20%)</span>\r\n              </label>\r\n            </div>\r\n            \r\n            {/* Financial Summary */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\">\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Total Cost</div>\r\n                <div className=\"text-lg font-semibold\">${plan.productionCost.toFixed(2)}</div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  Cost per {drugTypes[plan.drugType]?.unit || 'unit'}: \r\n                  <span className=\"font-medium text-gray-700\">\r\n                    ${(plan.productionCost / plan.plannedQuantity).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Expected Revenue</div>\r\n                <div className=\"text-lg font-semibold text-blue-600\">${expectedRevenue.toFixed(2)}</div>\r\n              </div>\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Expected Profit</div>\r\n                <div className=\"text-lg font-semibold text-green-600\">${expectedProfit.toFixed(2)}</div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  Profit per {drugTypes[plan.drugType]?.unit || 'unit'}: \r\n                  <span className=\"font-medium text-green-600\">\r\n                    ${(plan.expectedProfit / plan.plannedQuantity).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Profit Margin Display */}\r\n            <div className=\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-700\">Profit margin:</span>\r\n                <span className=\"font-medium text-green-600\">\r\n                  {Math.round((expectedProfit / expectedRevenue) * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-2 relative w-full h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                <div \r\n                  className=\"absolute top-0 left-0 h-full bg-green-500 rounded-full\"\r\n                  style={{ width: `${Math.min(100, Math.round((expectedProfit / expectedRevenue) * 100))}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              className=\"w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\"\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              Proceed to Ingredients\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'buy':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <ShoppingCart className=\"w-4 h-4 mr-1 text-orange-500\" />\r\n              Ingredients Shopping List\r\n            </h3>\r\n            \r\n            <div className=\"bg-orange-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-orange-700\">\r\n                Check off each ingredient as you purchase them. When you have all ingredients, you can proceed to cooking.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              {plan.totalIngredientNeeds.map((ingredient, idx) => (\r\n                <div key={idx} className=\"flex items-center mb-2 p-2 bg-gray-50 rounded\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`ingredient-${idx}`}\r\n                    checked={(purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity}\r\n                    onChange={(e) => toggleIngredientPurchased(ingredient.name, e.target.checked)}\r\n                    className=\"mr-2 h-4 w-4 text-blue-600\"\r\n                  />\r\n                  <label htmlFor={`ingredient-${idx}`} className=\"flex-grow text-sm font-medium\">\r\n                    {ingredient.name}\r\n                  </label>\r\n                  \r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      max={ingredient.quantity}\r\n                      value={purchasedIngredients[ingredient.name] || 0}\r\n                      onChange={(e) => updatePurchasedQuantity(ingredient.name, e.target.value)}\r\n                      className=\"w-16 p-1 text-sm border rounded mr-2 text-center\"\r\n                    />\r\n                    <span className=\"text-sm text-gray-600\">/ {ingredient.quantity}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allIngredientsPurchased()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allIngredientsPurchased()\r\n                  ? 'bg-orange-600 text-white hover:bg-orange-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              {allIngredientsPurchased() ? 'Proceed to Cooking' : 'All Ingredients Required'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'cook':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <Beaker className=\"w-4 h-4 mr-1 text-purple-500\" />\r\n              Cooking Recipe\r\n            </h3>\r\n            \r\n            <div className=\"bg-purple-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-purple-700\">\r\n                Follow the mixing sequence exactly as shown. Check off each step as you complete it.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              {cookingSteps.map((step, idx) => (\r\n                <div \r\n                  key={idx} \r\n                  className={`flex items-center mb-2 p-2 rounded ${\r\n                    step.completed ? 'bg-purple-50 border border-purple-200' : 'bg-gray-50'\r\n                  }`}\r\n                >\r\n                  <div className=\"w-6 h-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center text-xs font-medium mr-2\">\r\n                    {idx + 1}\r\n                  </div>\r\n                  \r\n                  <label htmlFor={`step-${idx}`} className=\"flex-grow text-sm font-medium\">\r\n                    {step.name}\r\n                  </label>\r\n                  \r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`step-${idx}`}\r\n                    checked={step.completed}\r\n                    onChange={() => toggleCookingStep(step.id)}\r\n                    className=\"ml-auto h-5 w-5 text-purple-600\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allCookingStepsCompleted()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allCookingStepsCompleted()\r\n                  ? 'bg-purple-600 text-white hover:bg-purple-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              {allCookingStepsCompleted() ? 'Product Ready for Sale' : 'Complete All Cooking Steps'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'sell':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <DollarSign className=\"w-4 h-4 mr-1 text-green-500\" />\r\n              Product Distribution\r\n            </h3>\r\n            \r\n            <div className=\"bg-green-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-green-700\">\r\n                Allocate your product between personal sales and dealer distribution. \r\n                Total allocated: {sellingData.personalQuantity + sellingData.dealerQuantity} of {plan.plannedQuantity}.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n              {/* Personal Sales Section */}\r\n              <div className=\"border border-gray-200 rounded-lg p-3\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Personal Sales</h4>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm text-gray-600 mb-1\">Quantity to Sell Personally</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max={plan.plannedQuantity - sellingData.dealerQuantity}\r\n                    value={sellingData.personalQuantity}\r\n                    onChange={(e) => updateSellingData('personalQuantity', Math.max(0, parseInt(e.target.value) || 0))}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm text-gray-600 mb-1\">Price per {drugTypes[plan.drugType]?.unit || 'unit'}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"1\"\r\n                    value={sellingData.personalPrice}\r\n                    onChange={(e) => updateSellingData('personalPrice', Math.max(0, parseInt(e.target.value) || 0))}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"text-sm text-gray-700\">\r\n                  <div className=\"flex justify-between mb-1\">\r\n                    <span>Total Revenue:</span>\r\n                    <span className=\"font-medium text-blue-600\">\r\n                      ${(sellingData.personalQuantity * sellingData.personalPrice).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Estimated Profit:</span>\r\n                    <span className=\"font-medium text-green-600\">\r\n                      ${((sellingData.personalQuantity * sellingData.personalPrice) - \r\n                         (plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity))).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Dealer Assignment Section */}\r\n              <div className=\"border border-gray-200 rounded-lg p-3\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Dealer Assignment</h4>\r\n                \r\n                {dealers && dealers.length > 0 ? (\r\n                  <>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"block text-sm text-gray-600 mb-1\">Select Dealer</label>\r\n                      <select\r\n                        value={sellingData.selectedDealer}\r\n                        onChange={(e) => updateSellingData('selectedDealer', e.target.value)}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                      >\r\n                        <option value=\"\">Select a dealer</option>\r\n                        {dealers.filter(d => d.active).map(dealer => (\r\n                          <option key={dealer.id} value={dealer.id}>\r\n                            {dealer.name} - Cut: {dealer.cut}%\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"block text-sm text-gray-600 mb-1\">Quantity to Distribute</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max={plan.plannedQuantity - sellingData.personalQuantity}\r\n                        value={sellingData.dealerQuantity}\r\n                        onChange={(e) => updateSellingData('dealerQuantity', Math.max(0, parseInt(e.target.value) || 0))}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                      />\r\n                    </div>\r\n                    \r\n                    {sellingData.selectedDealer && (\r\n                      <div className=\"text-sm text-gray-700\">\r\n                        <div className=\"flex justify-between mb-1\">\r\n                          <span>Dealer Revenue:</span>\r\n                          <span className=\"font-medium text-blue-600\">\r\n                            ${(sellingData.dealerQuantity * plan.salePrice).toFixed(2)}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        {(() => {\r\n                          const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\r\n                          const dealerCut = selectedDealer ? selectedDealer.cut : 0;\r\n                          const yourProfit = (sellingData.dealerQuantity * plan.salePrice) * (1 - dealerCut / 100);\r\n                          \r\n                          return (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Your Profit (after {dealerCut}% cut):</span>\r\n                              <span className=\"font-medium text-green-600\">\r\n                                ${yourProfit.toFixed(2)}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <div className=\"bg-yellow-50 p-3 rounded text-sm text-yellow-700\">\r\n                    <AlertTriangle className=\"inline-block mr-1 w-4 h-4\" />\r\n                    No active dealers available. Visit the Crew tab to activate dealers.\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allProductAllocated()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allProductAllocated()\r\n                  ? 'bg-green-600 text-white hover:bg-green-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <DollarSign className=\"w-4 h-4 mr-1\" />\r\n              {allProductAllocated() ? 'Complete Sale' : 'Allocate All Product'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Render stage badge\r\n  const renderStageBadge = () => {\r\n    if (plan.status === 'sold') {\r\n      return (\r\n        <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\">\r\n          Sold\r\n        </span>\r\n      );\r\n    }\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800 font-medium\">\r\n            Planning\r\n          </span>\r\n        );\r\n      case 'buy':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800 font-medium\">\r\n            Ingredients\r\n          </span>\r\n        );\r\n      case 'cook':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 font-medium\">\r\n            Cooking\r\n          </span>\r\n        );\r\n      case 'sell':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\">\r\n            Selling\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 font-medium\">\r\n            In Progress\r\n          </span>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"p-4 flex items-center justify-between bg-gray-50 border-b border-gray-200\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <span className=\"text-xl\">{getDrugTypeEmoji(plan.drugType)}</span>\r\n          <div>\r\n            <h3 className=\"font-medium text-gray-900\">{plan.strainName}</h3>\r\n            {plan.effects && plan.effects.length > 0 ? (\r\n              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                {plan.effects.map((effect, idx) => (\r\n                  <span\r\n                    key={idx}\r\n                    className=\"px-2 py-0.5 text-white rounded-full text-xs\"\r\n                    style={{ backgroundColor: effectColors && effectColors[effect] ? effectColors[effect] : '#333' }}\r\n                  >\r\n                    {effect}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-xs text-gray-500 mt-1\">No effects data available</p>\r\n            )}\r\n            <p className=\"text-sm text-gray-500 mt-1\">\r\n              Created: {formatDate(plan.dateCreated)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2\">\r\n          {renderStageBadge()}\r\n          \r\n          {/* More Actions Menu Toggle */}\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={toggleActionsMenu}\r\n              className=\"p-1.5 text-gray-600 hover:bg-gray-100 rounded\"\r\n              title=\"More actions\"\r\n            >\r\n              <MoreHorizontal className=\"h-5 w-5\" />\r\n            </button>\r\n            \r\n            {/* Dropdown Menu */}\r\n            {showActionsMenu && (\r\n              <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\r\n                <div className=\"py-1\">\r\n                  <button\r\n                    onClick={() => {\r\n                      onToggleExpand();\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    <Info className=\"inline h-4 w-4 mr-2\" />\r\n                    {isExpanded ? \"Hide Details\" : \"View Details\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleReproduce();\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    <Copy className=\"inline h-4 w-4 mr-2\" />\r\n                    Produce Again\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      onRemove(plan.id);\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\r\n                  >\r\n                    <Trash2 className=\"inline h-4 w-4 mr-2\" />\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"bg-gray-100 h-2\">\r\n        <div \r\n          className={`h-full ${\r\n            plan.status === 'sold' ? 'bg-green-500' :\r\n            currentStage === 'plan' ? 'bg-blue-500' :\r\n            currentStage === 'buy' ? 'bg-orange-500' :\r\n            currentStage === 'cook' ? 'bg-purple-500' :\r\n            'bg-green-500'\r\n          }`}\r\n          style={{ width: `${calculateProgress()}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* First-time User Tooltip (shown only when info icon is clicked) */}\r\n      {showInfoTooltip && (\r\n        <div className=\"p-2 bg-blue-50 border-b border-blue-200\">\r\n          <div className=\"flex items-start\">\r\n            <HelpCircle className=\"w-4 h-4 text-blue-500 mt-0.5 mr-2 shrink-0\" />\r\n            <div className=\"text-xs text-blue-700\">\r\n              <p className=\"mb-1\"><strong>Production Flow:</strong> Follow these stages to complete production:</p>\r\n              <ol className=\"list-decimal ml-4 space-y-1\">\r\n                <li><strong>Plan:</strong> Review production details</li>\r\n                <li><strong>Buy Ingredients:</strong> Acquire all needed supplies</li>\r\n                <li><strong>Cook:</strong> Follow the recipe sequence exactly</li>\r\n                <li><strong>Sell:</strong> Distribute product personally or through dealers</li>\r\n              </ol>\r\n              <button \r\n                onClick={() => setShowInfoTooltip(false)}\r\n                className=\"mt-1 text-blue-700 hover:text-blue-800 font-medium\"\r\n              >\r\n                Got it\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Production Stage Info Button */}\r\n      {!showInfoTooltip && !plan.status === 'sold' && (\r\n        <div className=\"px-4 py-1 bg-gray-50 border-b border-gray-200 flex justify-between text-xs text-gray-500\">\r\n          <span>\r\n            {currentStage === 'plan' ? 'Planning Stage' : \r\n             currentStage === 'buy' ? 'Buying Ingredients' : \r\n             currentStage === 'cook' ? 'Cooking Process' : \r\n             'Distribution Stage'}\r\n          </span>\r\n          <button \r\n            onClick={() => setShowInfoTooltip(true)}\r\n            className=\"text-blue-500 hover:text-blue-700 flex items-center\"\r\n          >\r\n            <HelpCircle className=\"w-3 h-3 mr-1\" />\r\n            <span>How it works</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quick Info Section */}\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <div className=\"text-sm text-gray-500\">Quantity</div>\r\n            <div className=\"text-lg font-medium\">\r\n              {plan.plannedQuantity}\r\n              {usePGA && (\r\n                <span className=\"ml-2 text-sm text-green-600\">\r\n                  (+{Math.round(plan.plannedQuantity * 0.2)} boost = {Math.round(plan.plannedQuantity * 1.2)})\r\n                </span>\r\n              )} {drugTypes[plan.drugType]?.unit || 'units'}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-sm text-gray-500\">Price</div>\r\n            <div className=\"text-lg font-medium\">${plan.salePrice} per {drugTypes[plan.drugType]?.unit || 'unit'}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stage-specific Content */}\r\n      {renderStageContent()}\r\n\r\n      {/* Expanded Details */}\r\n      {isExpanded && (\r\n        <div className=\"p-4 bg-gray-50\">\r\n          <h4 className=\"font-medium text-gray-900 mb-3\">Required Ingredients</h4>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Ingredient\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Quantity\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Cost\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200 bg-white\">\r\n                {plan.totalIngredientNeeds.map((ingredient, idx) => (\r\n                  <tr key={idx}>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\r\n                      {ingredient.name}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                      {ingredient.quantity}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                      ${ingredient.totalCost.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"bg-gray-50\">\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    Packaging ({plan.packagingNeeded.type})\r\n                  </td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                    {plan.packagingNeeded.quantity}\r\n                  </td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                    ${plan.packagingNeeded.cost.toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quantity Modal */}\r\n      <QuantityQualityModal\r\n        isOpen={showQuantityModal}\r\n        onClose={() => setShowQuantityModal(false)}\r\n        onConfirm={confirmReproduce}\r\n        initialQuantity={plan.plannedQuantity}\r\n        drugType={plan.drugType}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}