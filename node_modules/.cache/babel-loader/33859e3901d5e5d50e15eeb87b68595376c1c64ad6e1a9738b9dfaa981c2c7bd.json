{"ast":null,"code":"// EffectBuilderTab.js\nimport React,{useState}from'react';import{Beaker,RotateCcw,Check,Search,AlertTriangle,ArrowRight,X}from'lucide-react';import{effectDetails}from'./straindata';// Effect Builder Tab Component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EffectBuilderTab=_ref=>{let{seedTypes,ingredients,effectColors,drugTypes,calculateStrainEffects}=_ref;// State for selected effects and search\nconst[selectedEffects,setSelectedEffects]=useState([]);const[effectSearchTerm,setEffectSearchTerm]=useState('');const[selectedDrugType,setSelectedDrugType]=useState('weed');const[solutionFound,setSolutionFound]=useState(false);const[isSearching,setIsSearching]=useState(false);const[bestSolution,setBestSolution]=useState(null);const[searchResults,setSearchResults]=useState([]);const[searchProgress,setSearchProgress]=useState(0);const[effectSortOrder,setEffectSortOrder]=useState('alphabetical');// 'alphabetical', 'type', 'value'\nconst[effectTypeFilter,setEffectTypeFilter]=useState('all');// 'all', 'Ability', 'Cosmetic'\n// Get all available effects from effect colors for display\nconst allEffects=Object.keys(effectColors).sort();// Filter and sort effects based on search term and sort order\nconst filteredAndSortedEffects=()=>{// First filter by search term\nlet filtered=allEffects.filter(effect=>effect.toLowerCase().includes(effectSearchTerm.toLowerCase()));// Filter by effect type if not 'all'\nif(effectTypeFilter!=='all'){filtered=filtered.filter(effect=>{var _effectDetails$effect;return((_effectDetails$effect=effectDetails[effect])===null||_effectDetails$effect===void 0?void 0:_effectDetails$effect.type)===effectTypeFilter;});}// Then sort by selected order\nif(effectSortOrder==='type'){filtered=[...filtered].sort((a,b)=>{var _effectDetails$a,_effectDetails$b;const typeA=((_effectDetails$a=effectDetails[a])===null||_effectDetails$a===void 0?void 0:_effectDetails$a.type)||'';const typeB=((_effectDetails$b=effectDetails[b])===null||_effectDetails$b===void 0?void 0:_effectDetails$b.type)||'';return typeA.localeCompare(typeB)||a.localeCompare(b);});}else if(effectSortOrder==='value'){filtered=[...filtered].sort((a,b)=>{var _effectDetails$a2,_effectDetails$b2;const valueA=((_effectDetails$a2=effectDetails[a])===null||_effectDetails$a2===void 0?void 0:_effectDetails$a2.multiplier)||0;const valueB=((_effectDetails$b2=effectDetails[b])===null||_effectDetails$b2===void 0?void 0:_effectDetails$b2.multiplier)||0;return valueB-valueA;// Higher values first\n});}// For 'alphabetical', already sorted\nreturn filtered;};// Toggle effect selection\nconst toggleEffect=effect=>{if(selectedEffects.includes(effect)){setSelectedEffects(selectedEffects.filter(e=>e!==effect));}else{// Only allow selecting up to 8 effects (maximum in the game)\nif(selectedEffects.length<8){setSelectedEffects([...selectedEffects,effect]);}}// Reset solution when effects change\nsetSolutionFound(false);setBestSolution(null);};// Reset all selections\nconst resetSelections=()=>{setSelectedEffects([]);setSolutionFound(false);setBestSolution(null);setSearchResults([]);setSearchProgress(0);};// Filter seeds by drug type\nconst getFilteredSeeds=()=>{return seedTypes.filter(seed=>seed.drugType===selectedDrugType);};// Filter ingredients based on drug type\nconst getFilteredIngredients=()=>{// Common ingredients that work with all drug types\nconst commonIngredients=['Cuke','Banana','Paracetamol','Donut','Viagra','Mouth Wash','Flu Medicine','Gasoline','Energy Drink','Motor Oil','Mega Bean','Chili','Battery','Iodine','Addy','Horse Semen'];// Drug-specific ingredients\nconst methSpecificIngredients=['Glass Shards','Blue Food Coloring'];const cocaineSpecificIngredients=['Baking Soda','Caffeine Powder'];return ingredients.filter(ingredient=>{if(commonIngredients.includes(ingredient.name)){return true;}if(selectedDrugType==='meth'&&methSpecificIngredients.includes(ingredient.name)){return true;}if(selectedDrugType==='cocaine'&&cocaineSpecificIngredients.includes(ingredient.name)){return true;}// For weed, show most ingredients except the very specific ones for meth/cocaine\nif(selectedDrugType==='weed'){return!methSpecificIngredients.includes(ingredient.name)&&!cocaineSpecificIngredients.includes(ingredient.name);}return true;});};// Check if a given sequence can produce the selected effects\nconst checkSequence=(seed,ingredientSequence)=>{if(!seed||ingredientSequence.length===0)return false;const result=calculateStrainEffects(seed.effect,ingredientSequence);const finalEffects=result.finalEffects;// Check if ALL selected effects are in the final effects\nconst allSelected=selectedEffects.every(effect=>finalEffects.includes(effect));if(allSelected){return{seed,ingredients:ingredientSequence,allEffects:finalEffects,matched:selectedEffects,extra:finalEffects.filter(effect=>!selectedEffects.includes(effect))};}return false;};// Calculate effect match percentage for a potential solution\nconst calculateEffectMatchPercentage=solution=>{if(!solution)return 0;const matchedCount=solution.matched.length;const totalEffects=selectedEffects.length;return matchedCount/totalEffects*100;};// Building and searching for a solution\nconst searchForSolutions=async()=>{if(selectedEffects.length===0)return;setIsSearching(true);setSolutionFound(false);setBestSolution(null);setSearchResults([]);setSearchProgress(0);const filteredSeeds=getFilteredSeeds();const filteredIngredients=getFilteredIngredients();// Use a more intelligent approach to find solutions\n// Start with checking if any single seed already contains one of the desired effects\nconst seedsWithDesiredEffects=filteredSeeds.filter(seed=>selectedEffects.includes(seed.effect));// Also include all seeds as fallbacks\nconst seedsToTry=[...seedsWithDesiredEffects,...filteredSeeds.filter(seed=>!seedsWithDesiredEffects.some(s=>s.name===seed.name))];let solutions=[];let bestMatch=null;let bestMatchPercentage=0;const totalCombinations=seedsToTry.length*Math.min(10,filteredIngredients.length**3);let combinationsTried=0;// Process in chunks to keep UI responsive\nfor(const seed of seedsToTry){// Check the seed alone first\nconst seedOnlyResult=calculateStrainEffects(seed.effect,[]);const seedMatches=selectedEffects.filter(effect=>seedOnlyResult.finalEffects.includes(effect));const seedMatchPercentage=seedMatches.length/selectedEffects.length*100;if(seedMatchPercentage>bestMatchPercentage){bestMatchPercentage=seedMatchPercentage;bestMatch={seed,ingredients:[],allEffects:seedOnlyResult.finalEffects,matched:seedMatches,extra:seedOnlyResult.finalEffects.filter(effect=>!seedMatches.includes(effect))};// If perfect match, add to solutions\nif(seedMatchPercentage===100){solutions.push(bestMatch);}}// Try adding 1 ingredient\nfor(const ing1 of filteredIngredients){await new Promise(resolve=>setTimeout(resolve,0));// Allow UI updates\nconst sequence1=[ing1];const result1=checkSequence(seed,sequence1);combinationsTried++;setSearchProgress(Math.min(99,combinationsTried/totalCombinations*100));if(result1){solutions.push(result1);if(solutions.length>=5)break;// Limit to 5 solutions\n}else if(result1===false){// Calculate partial match\nconst partialResult=calculateStrainEffects(seed.effect,sequence1);const matches=selectedEffects.filter(effect=>partialResult.finalEffects.includes(effect));const matchPercentage=matches.length/selectedEffects.length*100;if(matchPercentage>bestMatchPercentage){bestMatchPercentage=matchPercentage;bestMatch={seed,ingredients:sequence1,allEffects:partialResult.finalEffects,matched:matches,extra:partialResult.finalEffects.filter(effect=>!matches.includes(effect))};}}// Try adding 2 ingredients\nfor(const ing2 of filteredIngredients){await new Promise(resolve=>setTimeout(resolve,0));// Allow UI updates\nconst sequence2=[ing1,ing2];const result2=checkSequence(seed,sequence2);combinationsTried++;setSearchProgress(Math.min(99,combinationsTried/totalCombinations*100));if(result2){solutions.push(result2);if(solutions.length>=5)break;// Limit to 5 solutions\n}else if(result2===false){// Calculate partial match\nconst partialResult=calculateStrainEffects(seed.effect,sequence2);const matches=selectedEffects.filter(effect=>partialResult.finalEffects.includes(effect));const matchPercentage=matches.length/selectedEffects.length*100;if(matchPercentage>bestMatchPercentage){bestMatchPercentage=matchPercentage;bestMatch={seed,ingredients:sequence2,allEffects:partialResult.finalEffects,matched:matches,extra:partialResult.finalEffects.filter(effect=>!matches.includes(effect))};}}// Only try 3 ingredients if we haven't found solutions yet\nif(solutions.length===0){// Try adding 3 ingredients\nfor(const ing3 of filteredIngredients){const sequence3=[ing1,ing2,ing3];const result3=checkSequence(seed,sequence3);combinationsTried++;setSearchProgress(Math.min(99,combinationsTried/totalCombinations*100));if(result3){solutions.push(result3);if(solutions.length>=5)break;// Limit to 5 solutions\n}else if(result3===false){// Calculate partial match\nconst partialResult=calculateStrainEffects(seed.effect,sequence3);const matches=selectedEffects.filter(effect=>partialResult.finalEffects.includes(effect));const matchPercentage=matches.length/selectedEffects.length*100;if(matchPercentage>bestMatchPercentage){bestMatchPercentage=matchPercentage;bestMatch={seed,ingredients:sequence3,allEffects:partialResult.finalEffects,matched:matches,extra:partialResult.finalEffects.filter(effect=>!matches.includes(effect))};}}}}if(solutions.length>=5)break;// Limit to 5 solutions\n}if(solutions.length>=5)break;// Limit to 5 solutions\n}if(solutions.length>=5)break;// Limit to 5 solutions\n}// Sort solutions by least ingredients first\nsolutions.sort((a,b)=>a.ingredients.length-b.ingredients.length);if(solutions.length>0){setSolutionFound(true);setBestSolution(solutions[0]);setSearchResults(solutions);}else if(bestMatch){// If no perfect solutions, show best partial match\nsetSolutionFound(false);setBestSolution(bestMatch);setSearchResults([bestMatch]);}else{setSolutionFound(false);setBestSolution(null);setSearchResults([]);}setSearchProgress(100);setIsSearching(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-xl shadow-lg p-6 mt-8 border border-gray-200\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\",children:[/*#__PURE__*/_jsx(Beaker,{className:\"mr-2 w-6 h-6 text-purple-500\"}),\"Effect Builder\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-700 mb-2\",children:\"Select Product Type\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-4\",children:Object.entries(drugTypes).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(\"button\",{className:`p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center justify-center gap-2\n                ${selectedDrugType===key?'bg-blue-50 border-blue-500 shadow-md':'bg-gray-50 border-gray-200 hover:bg-gray-100'}`,onClick:()=>setSelectedDrugType(key),children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-3xl\",children:value.emoji}),/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-center\",children:value.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 text-center\",children:[\"$\",value.basePrice,\" per \",value.unit]})]},key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-700\",children:\"Select Desired Effects\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[selectedEffects.length,\"/8 effects selected\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-full md:w-64 mb-2 md:mb-0\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search effects...\",value:effectSearchTerm,onChange:e=>setEffectSearchTerm(e.target.value),className:\"w-full p-2 pl-9 text-sm border rounded-md\"}),/*#__PURE__*/_jsx(Search,{className:\"absolute left-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\"}),effectSearchTerm&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectSearchTerm(''),className:\"absolute right-2 top-1/2 transform -translate-y-1/2\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 text-gray-400\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap items-center gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 mr-2\",children:\"Type:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex rounded-md shadow-sm\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectTypeFilter('all'),className:`px-3 py-1 text-xs rounded-l-md border ${effectTypeFilter==='all'?'bg-purple-100 border-purple-300 text-purple-800':'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,children:\"All\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectTypeFilter('Ability'),className:`px-3 py-1 text-xs border-t border-b ${effectTypeFilter==='Ability'?'bg-purple-100 border-purple-300 text-purple-800':'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,children:\"Ability\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectTypeFilter('Cosmetic'),className:`px-3 py-1 text-xs rounded-r-md border ${effectTypeFilter==='Cosmetic'?'bg-purple-100 border-purple-300 text-purple-800':'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,children:\"Cosmetic\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 mr-2\",children:\"Sort:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex rounded-md shadow-sm\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectSortOrder('alphabetical'),className:`px-3 py-1 text-xs rounded-l-md border ${effectSortOrder==='alphabetical'?'bg-purple-100 border-purple-300 text-purple-800':'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,children:\"Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectSortOrder('type'),className:`px-3 py-1 text-xs border-t border-b ${effectSortOrder==='type'?'bg-purple-100 border-purple-300 text-purple-800':'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,children:\"Type\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEffectSortOrder('value'),className:`px-3 py-1 text-xs rounded-r-md border ${effectSortOrder==='value'?'bg-purple-100 border-purple-300 text-purple-800':'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,children:\"Value\"})]})]})]})]}),selectedEffects.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-700 mb-2\",children:\"Selected Effects:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:selectedEffects.map(effect=>{var _effectDetails$effect2,_effectDetails$effect3,_effectDetails$effect4,_effectDetails$effect5;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 text-white rounded-l-full text-sm inline-flex items-center\",style:{backgroundColor:effectColors[effect]||'#333'},children:[/*#__PURE__*/_jsx(\"span\",{children:effect}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\",children:(_effectDetails$effect2=effectDetails[effect])===null||_effectDetails$effect2===void 0?void 0:_effectDetails$effect2.type.charAt(0)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleEffect(effect),className:\"bg-gray-200 hover:bg-gray-300 p-1 rounded-r-full\",children:/*#__PURE__*/_jsx(X,{className:\"w-4 h-4 text-gray-600\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs top-full left-0 mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium mb-1\",children:effect}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 mb-1\",children:[\"Type: \",(_effectDetails$effect3=effectDetails[effect])===null||_effectDetails$effect3===void 0?void 0:_effectDetails$effect3.type]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300\",children:[\"Value: \",(((_effectDetails$effect4=effectDetails[effect])===null||_effectDetails$effect4===void 0?void 0:_effectDetails$effect4.multiplier)*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:(_effectDetails$effect5=effectDetails[effect])===null||_effectDetails$effect5===void 0?void 0:_effectDetails$effect5.description}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute w-2 h-2 bg-gray-900 transform rotate-45 top-0 left-4 -translate-y-1\"})]})]},effect);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 max-h-72 overflow-y-auto p-2 border rounded-md\",children:filteredAndSortedEffects().length>0?filteredAndSortedEffects().map((effect,index)=>{var _effectDetails$effect6,_effectDetails$effect7,_effectDetails$effect8,_effectDetails$effect9;// Determine if this is in the first row\nconst isInFirstFourRows=index<16;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleEffect(effect),className:`w-full p-2 rounded-md text-white text-sm transition-all ${selectedEffects.includes(effect)?'opacity-100 ring-2 ring-white':'opacity-80 hover:opacity-100'}`,style:{backgroundColor:effectColors[effect]||'#333'},disabled:selectedEffects.length>=8&&!selectedEffects.includes(effect),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:effect}),selectedEffects.includes(effect)&&/*#__PURE__*/_jsx(Check,{className:\"ml-1 w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 px-1 py-0.5 bg-white bg-opacity-20 rounded text-xs\",children:(_effectDetails$effect6=effectDetails[effect])===null||_effectDetails$effect6===void 0?void 0:_effectDetails$effect6.type})]})}),/*#__PURE__*/_jsxs(\"div\",{className:`absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs ${isInFirstFourRows?'top-full mt-2':'bottom-full mb-2'} left-1/2 transform -translate-x-1/2`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium mb-1\",children:effect}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 mb-1\",children:[\"Type: \",(_effectDetails$effect7=effectDetails[effect])===null||_effectDetails$effect7===void 0?void 0:_effectDetails$effect7.type]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300\",children:[\"Value: \",(((_effectDetails$effect8=effectDetails[effect])===null||_effectDetails$effect8===void 0?void 0:_effectDetails$effect8.multiplier)*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:(_effectDetails$effect9=effectDetails[effect])===null||_effectDetails$effect9===void 0?void 0:_effectDetails$effect9.description}),/*#__PURE__*/_jsx(\"div\",{className:`absolute w-2 h-2 bg-gray-900 transform rotate-45 ${isInFirstFourRows?'top-0 -translate-y-1':'bottom-0 translate-y-1'} left-1/2 -translate-x-1/2`})]})]},effect);}):/*#__PURE__*/_jsx(\"div\",{className:\"col-span-full text-center p-4 text-gray-500\",children:\"No effects match your search\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3 mb-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:searchForSolutions,className:\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex-1 flex items-center justify-center\",disabled:selectedEffects.length===0||isSearching,children:[/*#__PURE__*/_jsx(Beaker,{className:\"mr-2 w-5 h-5\"}),\"Find Recipe\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:resetSelections,className:\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 flex items-center justify-center\",disabled:isSearching,children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"mr-2 w-5 h-5\"}),\"Reset\"]})]}),isSearching&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm text-gray-600 mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Searching for recipes...\"}),/*#__PURE__*/_jsxs(\"span\",{children:[Math.round(searchProgress),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2.5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-600 h-2.5 rounded-full\",style:{width:`${searchProgress}%`}})})]}),searchProgress===100&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[solutionFound?/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-green-50 rounded-lg border border-green-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-green-700 font-medium mb-2\",children:[/*#__PURE__*/_jsx(Check,{className:\"mr-2 w-5 h-5\"}),\"Perfect Match Found!\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-green-600 mb-2\",children:[\"We found \",searchResults.length,\" recipe\",searchResults.length!==1?'s':'',\" that will produce a strain with all your selected effects.\"]})]}):bestSolution?/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-yellow-50 rounded-lg border border-yellow-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-yellow-700 font-medium mb-2\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"mr-2 w-5 h-5\"}),\"Partial Match Found\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-yellow-600 mb-2\",children:[\"We found a recipe that includes \",bestSolution.matched.length,\" out of \",selectedEffects.length,\"desired effects (\",Math.round(calculateEffectMatchPercentage(bestSolution)),\"% match).\"]})]}):searchResults.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-red-50 rounded-lg border border-red-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-red-700 font-medium mb-2\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"mr-2 w-5 h-5\"}),\"No Matches Found\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-red-600 mb-2\",children:\"We couldn't find any recipes that produce a strain with your selected effects. Try selecting fewer effects or different combinations.\"})]}),searchResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-800\",children:\"Recipe Solutions\"}),searchResults.map((solution,index)=>{var _drugTypes$selectedDr;return/*#__PURE__*/_jsxs(\"div\",{className:`p-4 rounded-lg border ${solutionFound?'bg-green-50 border-green-200':'bg-yellow-50 border-yellow-200'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-3\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-gray-800\",children:[\"Recipe #\",index+1,\" - \",solution.seed.name]}),/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800\",children:[Math.round(calculateEffectMatchPercentage(solution)),\"% Match\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\",children:\"1\"}),/*#__PURE__*/_jsx(ArrowRight,{className:\"mx-2 w-4 h-4 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:((_drugTypes$selectedDr=drugTypes[selectedDrugType])===null||_drugTypes$selectedDr===void 0?void 0:_drugTypes$selectedDr.emoji)||'🌱'}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Start with \",/*#__PURE__*/_jsx(\"strong\",{children:solution.seed.name})]})]})]}),solution.ingredients.map((ingredient,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\",children:idx+2}),/*#__PURE__*/_jsx(ArrowRight,{className:\"mx-2 w-4 h-4 text-gray-400\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl mr-2\",children:ingredient.emoji||'🧪'}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Add \",/*#__PURE__*/_jsx(\"strong\",{children:ingredient.name})]})]})]},idx))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-3 rounded-md border border-gray-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-700 mb-2\",children:\"This recipe will create a strain with these effects:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:solution.allEffects.map(effect=>{var _effectDetails$effect10,_effectDetails$effect11,_effectDetails$effect12,_effectDetails$effect13;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsxs(\"span\",{className:`px-2 py-1 text-white rounded-full text-xs inline-flex items-center ${selectedEffects.includes(effect)?'ring-2 ring-white':'opacity-70'}`,style:{backgroundColor:effectColors[effect]||'#333'},children:[effect,/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\",children:(_effectDetails$effect10=effectDetails[effect])===null||_effectDetails$effect10===void 0?void 0:_effectDetails$effect10.type.charAt(0)}),!selectedEffects.includes(effect)&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs\",children:\"+\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium mb-1\",children:effect}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 mb-1\",children:[\"Type: \",(_effectDetails$effect11=effectDetails[effect])===null||_effectDetails$effect11===void 0?void 0:_effectDetails$effect11.type]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300\",children:[\"Value: \",(((_effectDetails$effect12=effectDetails[effect])===null||_effectDetails$effect12===void 0?void 0:_effectDetails$effect12.multiplier)*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:(_effectDetails$effect13=effectDetails[effect])===null||_effectDetails$effect13===void 0?void 0:_effectDetails$effect13.description}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"})]})]},effect);})}),!solutionFound&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-yellow-700\",children:\"Missing effects: \"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mt-1\",children:selectedEffects.filter(e=>!solution.matched.includes(e)).map(effect=>{var _effectDetails$effect14,_effectDetails$effect15,_effectDetails$effect16,_effectDetails$effect17;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"inline-block px-2 py-0.5 rounded-full text-xs text-white\",style:{backgroundColor:effectColors[effect]||'#333'},children:[effect,/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\",children:(_effectDetails$effect14=effectDetails[effect])===null||_effectDetails$effect14===void 0?void 0:_effectDetails$effect14.type.charAt(0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium mb-1\",children:effect}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 mb-1\",children:[\"Type: \",(_effectDetails$effect15=effectDetails[effect])===null||_effectDetails$effect15===void 0?void 0:_effectDetails$effect15.type]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300\",children:[\"Value: \",(((_effectDetails$effect16=effectDetails[effect])===null||_effectDetails$effect16===void 0?void 0:_effectDetails$effect16.multiplier)*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:(_effectDetails$effect17=effectDetails[effect])===null||_effectDetails$effect17===void 0?void 0:_effectDetails$effect17.description}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"})]})]},effect);})})]})]})]},index);})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-blue-800 mb-2\",children:\"How the Effect Builder Works\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-blue-700 mb-2\",children:\"The Effect Builder attempts to find the optimal recipe that will produce a strain with your selected effects. It searches through different seeds and ingredient combinations to find solutions that match your criteria.\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc list-inside text-sm text-blue-700 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Select up to 8 desired effects for your strain\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Choose the right drug type for your product\"}),/*#__PURE__*/_jsx(\"li\",{children:\"The builder will search for the best recipe to create your desired strain\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Perfect matches include all your selected effects\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Partial matches include some but not all selected effects\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-blue-700 mt-2\",children:\"Note: Not all effect combinations are possible due to game mechanics. The builder will find the closest match possible.\"})]})]});};export default EffectBuilderTab;","map":{"version":3,"names":["React","useState","Beaker","RotateCcw","Check","Search","AlertTriangle","ArrowRight","X","effectDetails","jsx","_jsx","jsxs","_jsxs","EffectBuilderTab","_ref","seedTypes","ingredients","effectColors","drugTypes","calculateStrainEffects","selectedEffects","setSelectedEffects","effectSearchTerm","setEffectSearchTerm","selectedDrugType","setSelectedDrugType","solutionFound","setSolutionFound","isSearching","setIsSearching","bestSolution","setBestSolution","searchResults","setSearchResults","searchProgress","setSearchProgress","effectSortOrder","setEffectSortOrder","effectTypeFilter","setEffectTypeFilter","allEffects","Object","keys","sort","filteredAndSortedEffects","filtered","filter","effect","toLowerCase","includes","_effectDetails$effect","type","a","b","_effectDetails$a","_effectDetails$b","typeA","typeB","localeCompare","_effectDetails$a2","_effectDetails$b2","valueA","multiplier","valueB","toggleEffect","e","length","resetSelections","getFilteredSeeds","seed","drugType","getFilteredIngredients","commonIngredients","methSpecificIngredients","cocaineSpecificIngredients","ingredient","name","checkSequence","ingredientSequence","result","finalEffects","allSelected","every","matched","extra","calculateEffectMatchPercentage","solution","matchedCount","totalEffects","searchForSolutions","filteredSeeds","filteredIngredients","seedsWithDesiredEffects","seedsToTry","some","s","solutions","bestMatch","bestMatchPercentage","totalCombinations","Math","min","combinationsTried","seedOnlyResult","seedMatches","seedMatchPercentage","push","ing1","Promise","resolve","setTimeout","sequence1","result1","partialResult","matches","matchPercentage","ing2","sequence2","result2","ing3","sequence3","result3","className","children","entries","map","_ref2","key","value","onClick","emoji","basePrice","unit","placeholder","onChange","target","_effectDetails$effect2","_effectDetails$effect3","_effectDetails$effect4","_effectDetails$effect5","style","backgroundColor","charAt","toFixed","description","index","_effectDetails$effect6","_effectDetails$effect7","_effectDetails$effect8","_effectDetails$effect9","isInFirstFourRows","disabled","round","width","_drugTypes$selectedDr","idx","_effectDetails$effect10","_effectDetails$effect11","_effectDetails$effect12","_effectDetails$effect13","_effectDetails$effect14","_effectDetails$effect15","_effectDetails$effect16","_effectDetails$effect17"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/EffectBuilderTab.js"],"sourcesContent":["// EffectBuilderTab.js\r\nimport React, { useState} from 'react';\r\nimport {\r\n  Beaker,\r\n  RotateCcw,\r\n  Check,\r\n  Search,\r\n  AlertTriangle,\r\n  ArrowRight,\r\n  X,\r\n} from 'lucide-react';\r\nimport { effectDetails } from './straindata';\r\n\r\n// Effect Builder Tab Component\r\nconst EffectBuilderTab = ({ \r\n  seedTypes, \r\n  ingredients, \r\n  effectColors, \r\n  drugTypes,\r\n  calculateStrainEffects,\r\n}) => {\r\n  // State for selected effects and search\r\n  const [selectedEffects, setSelectedEffects] = useState([]);\r\n  const [effectSearchTerm, setEffectSearchTerm] = useState('');\r\n  const [selectedDrugType, setSelectedDrugType] = useState('weed');\r\n  const [solutionFound, setSolutionFound] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [bestSolution, setBestSolution] = useState(null);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchProgress, setSearchProgress] = useState(0);\r\n  const [effectSortOrder, setEffectSortOrder] = useState('alphabetical'); // 'alphabetical', 'type', 'value'\r\n  const [effectTypeFilter, setEffectTypeFilter] = useState('all'); // 'all', 'Ability', 'Cosmetic'\r\n  \r\n  // Get all available effects from effect colors for display\r\n  const allEffects = Object.keys(effectColors).sort();\r\n  \r\n  // Filter and sort effects based on search term and sort order\r\n  const filteredAndSortedEffects = () => {\r\n    // First filter by search term\r\n    let filtered = allEffects.filter(effect => \r\n      effect.toLowerCase().includes(effectSearchTerm.toLowerCase())\r\n    );\r\n    \r\n    // Filter by effect type if not 'all'\r\n    if (effectTypeFilter !== 'all') {\r\n      filtered = filtered.filter(effect => \r\n        effectDetails[effect]?.type === effectTypeFilter\r\n      );\r\n    }\r\n    \r\n    // Then sort by selected order\r\n    if (effectSortOrder === 'type') {\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const typeA = effectDetails[a]?.type || '';\r\n        const typeB = effectDetails[b]?.type || '';\r\n        return typeA.localeCompare(typeB) || a.localeCompare(b);\r\n      });\r\n    } else if (effectSortOrder === 'value') {\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const valueA = effectDetails[a]?.multiplier || 0;\r\n        const valueB = effectDetails[b]?.multiplier || 0;\r\n        return valueB - valueA; // Higher values first\r\n      });\r\n    }\r\n    // For 'alphabetical', already sorted\r\n    \r\n    return filtered;\r\n  };\r\n\r\n  // Toggle effect selection\r\n  const toggleEffect = (effect) => {\r\n    if (selectedEffects.includes(effect)) {\r\n      setSelectedEffects(selectedEffects.filter(e => e !== effect));\r\n    } else {\r\n      // Only allow selecting up to 8 effects (maximum in the game)\r\n      if (selectedEffects.length < 8) {\r\n        setSelectedEffects([...selectedEffects, effect]);\r\n      }\r\n    }\r\n    // Reset solution when effects change\r\n    setSolutionFound(false);\r\n    setBestSolution(null);\r\n  };\r\n  \r\n  // Reset all selections\r\n  const resetSelections = () => {\r\n    setSelectedEffects([]);\r\n    setSolutionFound(false);\r\n    setBestSolution(null);\r\n    setSearchResults([]);\r\n    setSearchProgress(0);\r\n  };\r\n  \r\n  // Filter seeds by drug type\r\n  const getFilteredSeeds = () => {\r\n    return seedTypes.filter(seed => seed.drugType === selectedDrugType);\r\n  };\r\n  \r\n  // Filter ingredients based on drug type\r\n  const getFilteredIngredients = () => {\r\n    // Common ingredients that work with all drug types\r\n    const commonIngredients = [\r\n      'Cuke', 'Banana', 'Paracetamol', 'Donut', 'Viagra', 'Mouth Wash', 'Flu Medicine', 'Gasoline',\r\n      'Energy Drink', 'Motor Oil', 'Mega Bean', 'Chili', 'Battery', 'Iodine', 'Addy', 'Horse Semen'\r\n    ];\r\n    \r\n    // Drug-specific ingredients\r\n    const methSpecificIngredients = ['Glass Shards', 'Blue Food Coloring'];\r\n    const cocaineSpecificIngredients = ['Baking Soda', 'Caffeine Powder'];\r\n    \r\n    return ingredients.filter(ingredient => {\r\n      if (commonIngredients.includes(ingredient.name)) {\r\n        return true;\r\n      }\r\n      \r\n      if (selectedDrugType === 'meth' && methSpecificIngredients.includes(ingredient.name)) {\r\n        return true;\r\n      }\r\n      \r\n      if (selectedDrugType === 'cocaine' && cocaineSpecificIngredients.includes(ingredient.name)) {\r\n        return true;\r\n      }\r\n      \r\n      // For weed, show most ingredients except the very specific ones for meth/cocaine\r\n      if (selectedDrugType === 'weed') {\r\n        return !methSpecificIngredients.includes(ingredient.name) && \r\n               !cocaineSpecificIngredients.includes(ingredient.name);\r\n      }\r\n      \r\n      return true;\r\n    });\r\n  };\r\n  \r\n  // Check if a given sequence can produce the selected effects\r\n  const checkSequence = (seed, ingredientSequence) => {\r\n    if (!seed || ingredientSequence.length === 0) return false;\r\n    \r\n    const result = calculateStrainEffects(seed.effect, ingredientSequence);\r\n    const finalEffects = result.finalEffects;\r\n    \r\n    // Check if ALL selected effects are in the final effects\r\n    const allSelected = selectedEffects.every(effect => finalEffects.includes(effect));\r\n    \r\n    if (allSelected) {\r\n      return {\r\n        seed,\r\n        ingredients: ingredientSequence,\r\n        allEffects: finalEffects,\r\n        matched: selectedEffects,\r\n        extra: finalEffects.filter(effect => !selectedEffects.includes(effect))\r\n      };\r\n    }\r\n    \r\n    return false;\r\n  };\r\n  \r\n  // Calculate effect match percentage for a potential solution\r\n  const calculateEffectMatchPercentage = (solution) => {\r\n    if (!solution) return 0;\r\n    \r\n    const matchedCount = solution.matched.length;\r\n    const totalEffects = selectedEffects.length;\r\n    \r\n    return (matchedCount / totalEffects) * 100;\r\n  };\r\n  \r\n  // Building and searching for a solution\r\n  const searchForSolutions = async () => {\r\n    if (selectedEffects.length === 0) return;\r\n    \r\n    setIsSearching(true);\r\n    setSolutionFound(false);\r\n    setBestSolution(null);\r\n    setSearchResults([]);\r\n    setSearchProgress(0);\r\n    \r\n    const filteredSeeds = getFilteredSeeds();\r\n    const filteredIngredients = getFilteredIngredients();\r\n    \r\n    // Use a more intelligent approach to find solutions\r\n    // Start with checking if any single seed already contains one of the desired effects\r\n    const seedsWithDesiredEffects = filteredSeeds.filter(seed => \r\n      selectedEffects.includes(seed.effect)\r\n    );\r\n    \r\n    // Also include all seeds as fallbacks\r\n    const seedsToTry = [...seedsWithDesiredEffects, ...filteredSeeds.filter(seed => \r\n      !seedsWithDesiredEffects.some(s => s.name === seed.name)\r\n    )];\r\n    \r\n    let solutions = [];\r\n    let bestMatch = null;\r\n    let bestMatchPercentage = 0;\r\n    \r\n    const totalCombinations = seedsToTry.length * Math.min(10, filteredIngredients.length ** 3);\r\n    let combinationsTried = 0;\r\n    \r\n    // Process in chunks to keep UI responsive\r\n    for (const seed of seedsToTry) {\r\n      // Check the seed alone first\r\n      const seedOnlyResult = calculateStrainEffects(seed.effect, []);\r\n      const seedMatches = selectedEffects.filter(effect => seedOnlyResult.finalEffects.includes(effect));\r\n      const seedMatchPercentage = (seedMatches.length / selectedEffects.length) * 100;\r\n      \r\n      if (seedMatchPercentage > bestMatchPercentage) {\r\n        bestMatchPercentage = seedMatchPercentage;\r\n        bestMatch = {\r\n          seed,\r\n          ingredients: [],\r\n          allEffects: seedOnlyResult.finalEffects,\r\n          matched: seedMatches,\r\n          extra: seedOnlyResult.finalEffects.filter(effect => !seedMatches.includes(effect))\r\n        };\r\n        \r\n        // If perfect match, add to solutions\r\n        if (seedMatchPercentage === 100) {\r\n          solutions.push(bestMatch);\r\n        }\r\n      }\r\n      \r\n      // Try adding 1 ingredient\r\n      for (const ing1 of filteredIngredients) {\r\n        await new Promise(resolve => setTimeout(resolve, 0)); // Allow UI updates\r\n        \r\n        const sequence1 = [ing1];\r\n        const result1 = checkSequence(seed, sequence1);\r\n        \r\n        combinationsTried++;\r\n        setSearchProgress(Math.min(99, (combinationsTried / totalCombinations) * 100));\r\n        \r\n        if (result1) {\r\n          solutions.push(result1);\r\n          if (solutions.length >= 5) break; // Limit to 5 solutions\r\n        } else if (result1 === false) {\r\n          // Calculate partial match\r\n          const partialResult = calculateStrainEffects(seed.effect, sequence1);\r\n          const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\r\n          const matchPercentage = (matches.length / selectedEffects.length) * 100;\r\n          \r\n          if (matchPercentage > bestMatchPercentage) {\r\n            bestMatchPercentage = matchPercentage;\r\n            bestMatch = {\r\n              seed,\r\n              ingredients: sequence1,\r\n              allEffects: partialResult.finalEffects,\r\n              matched: matches,\r\n              extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\r\n            };\r\n          }\r\n        }\r\n        \r\n        // Try adding 2 ingredients\r\n        for (const ing2 of filteredIngredients) {\r\n          await new Promise(resolve => setTimeout(resolve, 0)); // Allow UI updates\r\n          \r\n          const sequence2 = [ing1, ing2];\r\n          const result2 = checkSequence(seed, sequence2);\r\n          \r\n          combinationsTried++;\r\n          setSearchProgress(Math.min(99, (combinationsTried / totalCombinations) * 100));\r\n          \r\n          if (result2) {\r\n            solutions.push(result2);\r\n            if (solutions.length >= 5) break; // Limit to 5 solutions\r\n          } else if (result2 === false) {\r\n            // Calculate partial match\r\n            const partialResult = calculateStrainEffects(seed.effect, sequence2);\r\n            const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\r\n            const matchPercentage = (matches.length / selectedEffects.length) * 100;\r\n            \r\n            if (matchPercentage > bestMatchPercentage) {\r\n              bestMatchPercentage = matchPercentage;\r\n              bestMatch = {\r\n                seed,\r\n                ingredients: sequence2,\r\n                allEffects: partialResult.finalEffects,\r\n                matched: matches,\r\n                extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\r\n              };\r\n            }\r\n          }\r\n          \r\n          // Only try 3 ingredients if we haven't found solutions yet\r\n          if (solutions.length === 0) {\r\n            // Try adding 3 ingredients\r\n            for (const ing3 of filteredIngredients) {\r\n              const sequence3 = [ing1, ing2, ing3];\r\n              const result3 = checkSequence(seed, sequence3);\r\n              \r\n              combinationsTried++;\r\n              setSearchProgress(Math.min(99, (combinationsTried / totalCombinations) * 100));\r\n              \r\n              if (result3) {\r\n                solutions.push(result3);\r\n                if (solutions.length >= 5) break; // Limit to 5 solutions\r\n              } else if (result3 === false) {\r\n                // Calculate partial match\r\n                const partialResult = calculateStrainEffects(seed.effect, sequence3);\r\n                const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\r\n                const matchPercentage = (matches.length / selectedEffects.length) * 100;\r\n                \r\n                if (matchPercentage > bestMatchPercentage) {\r\n                  bestMatchPercentage = matchPercentage;\r\n                  bestMatch = {\r\n                    seed,\r\n                    ingredients: sequence3,\r\n                    allEffects: partialResult.finalEffects,\r\n                    matched: matches,\r\n                    extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (solutions.length >= 5) break; // Limit to 5 solutions\r\n        }\r\n        \r\n        if (solutions.length >= 5) break; // Limit to 5 solutions\r\n      }\r\n      \r\n      if (solutions.length >= 5) break; // Limit to 5 solutions\r\n    }\r\n    \r\n    // Sort solutions by least ingredients first\r\n    solutions.sort((a, b) => a.ingredients.length - b.ingredients.length);\r\n    \r\n    if (solutions.length > 0) {\r\n      setSolutionFound(true);\r\n      setBestSolution(solutions[0]);\r\n      setSearchResults(solutions);\r\n    } else if (bestMatch) {\r\n      // If no perfect solutions, show best partial match\r\n      setSolutionFound(false);\r\n      setBestSolution(bestMatch);\r\n      setSearchResults([bestMatch]);\r\n    } else {\r\n      setSolutionFound(false);\r\n      setBestSolution(null);\r\n      setSearchResults([]);\r\n    }\r\n    \r\n    setSearchProgress(100);\r\n    setIsSearching(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-lg p-6 mt-8 border border-gray-200\">\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\r\n        <Beaker className=\"mr-2 w-6 h-6 text-purple-500\" />\r\n        Effect Builder\r\n      </h2>\r\n\r\n      {/* Drug Type Selection */}\r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-md font-medium text-gray-700 mb-2\">Select Product Type</h3>\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          {Object.entries(drugTypes).map(([key, value]) => (\r\n            <button\r\n              key={key}\r\n              className={`p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center justify-center gap-2\r\n                ${selectedDrugType === key \r\n                  ? 'bg-blue-50 border-blue-500 shadow-md' \r\n                  : 'bg-gray-50 border-gray-200 hover:bg-gray-100'}`}\r\n              onClick={() => setSelectedDrugType(key)}\r\n            >\r\n              <span className=\"text-3xl\">{value.emoji}</span>\r\n              <div className=\"font-medium text-center\">{value.name}</div>\r\n              <div className=\"text-xs text-gray-500 text-center\">${value.basePrice} per {value.unit}</div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Effects Selection */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h3 className=\"text-md font-medium text-gray-700\">Select Desired Effects</h3>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {selectedEffects.length}/8 effects selected\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-wrap justify-between items-center mb-4\">\r\n          <div className=\"relative w-full md:w-64 mb-2 md:mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search effects...\"\r\n              value={effectSearchTerm}\r\n              onChange={(e) => setEffectSearchTerm(e.target.value)}\r\n              className=\"w-full p-2 pl-9 text-sm border rounded-md\"\r\n            />\r\n            <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n            {effectSearchTerm && (\r\n              <button \r\n                onClick={() => setEffectSearchTerm('')}\r\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2\"\r\n              >\r\n                <X className=\"w-4 h-4 text-gray-400\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"flex flex-wrap items-center gap-4\">\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-sm text-gray-600 mr-2\">Type:</span>\r\n              <div className=\"inline-flex rounded-md shadow-sm\">\r\n                <button\r\n                  onClick={() => setEffectTypeFilter('all')}\r\n                  className={`px-3 py-1 text-xs rounded-l-md border ${\r\n                    effectTypeFilter === 'all'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectTypeFilter('Ability')}\r\n                  className={`px-3 py-1 text-xs border-t border-b ${\r\n                    effectTypeFilter === 'Ability'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Ability\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectTypeFilter('Cosmetic')}\r\n                  className={`px-3 py-1 text-xs rounded-r-md border ${\r\n                    effectTypeFilter === 'Cosmetic'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Cosmetic\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-sm text-gray-600 mr-2\">Sort:</span>\r\n              <div className=\"inline-flex rounded-md shadow-sm\">\r\n                <button\r\n                  onClick={() => setEffectSortOrder('alphabetical')}\r\n                  className={`px-3 py-1 text-xs rounded-l-md border ${\r\n                    effectSortOrder === 'alphabetical'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Name\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectSortOrder('type')}\r\n                  className={`px-3 py-1 text-xs border-t border-b ${\r\n                    effectSortOrder === 'type'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Type\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectSortOrder('value')}\r\n                  className={`px-3 py-1 text-xs rounded-r-md border ${\r\n                    effectSortOrder === 'value'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Value\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Selected Effects Preview */}\r\n        {selectedEffects.length > 0 && (\r\n          <div className=\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n            <div className=\"font-medium text-gray-700 mb-2\">Selected Effects:</div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {selectedEffects.map((effect) => (\r\n                <div key={effect} className=\"relative group\">\r\n                  <div className=\"flex items-center\">\r\n                    <span\r\n                      className=\"px-2 py-1 text-white rounded-l-full text-sm inline-flex items-center\"\r\n                      style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                    >\r\n                      <span>{effect}</span>\r\n                      <span className=\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\">\r\n                        {effectDetails[effect]?.type.charAt(0)}\r\n                      </span>\r\n                    </span>\r\n                    <button\r\n                      onClick={() => toggleEffect(effect)}\r\n                      className=\"bg-gray-200 hover:bg-gray-300 p-1 rounded-r-full\"\r\n                    >\r\n                      <X className=\"w-4 h-4 text-gray-600\" />\r\n                    </button>\r\n                  </div>\r\n                  {/* Tooltip - Always position below when in the selected effects area */}\r\n                  <div className=\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs top-full left-0 mt-2\">\r\n                    <div className=\"font-medium mb-1\">{effect}</div>\r\n                    <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                    <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                    <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                    <div className=\"absolute w-2 h-2 bg-gray-900 transform rotate-45 top-0 left-4 -translate-y-1\"></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Effects Grid */}\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 max-h-72 overflow-y-auto p-2 border rounded-md\">\r\n          {filteredAndSortedEffects().length > 0 ? (\r\n            filteredAndSortedEffects().map((effect, index) => {\r\n              // Determine if this is in the first row\r\n              const isInFirstFourRows = index < 16;\r\n      \r\n                return (\r\n                    <div key={effect} className=\"relative group\">\r\n                    <button\r\n                        onClick={() => toggleEffect(effect)}\r\n                        className={`w-full p-2 rounded-md text-white text-sm transition-all ${\r\n                        selectedEffects.includes(effect) \r\n                            ? 'opacity-100 ring-2 ring-white' \r\n                            : 'opacity-80 hover:opacity-100'\r\n                        }`}\r\n                        style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                        disabled={selectedEffects.length >= 8 && !selectedEffects.includes(effect)}\r\n                    >\r\n                        <div className=\"flex items-center justify-between\">\r\n                        <span>{effect}</span>\r\n                        {selectedEffects.includes(effect) && (\r\n                            <Check className=\"ml-1 w-4 h-4\" />\r\n                        )}\r\n                        <span className=\"ml-2 px-1 py-0.5 bg-white bg-opacity-20 rounded text-xs\">\r\n                            {effectDetails[effect]?.type}\r\n                        </span>\r\n                        </div>\r\n                    </button>\r\n                    {/* Tooltip - Position below for first 4 rows, above for others */}\r\n                    <div className={`absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs ${\r\n                        isInFirstFourRows ? 'top-full mt-2' : 'bottom-full mb-2'\r\n                    } left-1/2 transform -translate-x-1/2`}>\r\n                        <div className=\"font-medium mb-1\">{effect}</div>\r\n                        <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                        <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                        <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                        <div className={`absolute w-2 h-2 bg-gray-900 transform rotate-45 ${\r\n                        isInFirstFourRows ? 'top-0 -translate-y-1' : 'bottom-0 translate-y-1'\r\n                        } left-1/2 -translate-x-1/2`}></div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-span-full text-center p-4 text-gray-500\">\r\n              No effects match your search\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex gap-3 mb-6\">\r\n        <button\r\n          onClick={searchForSolutions}\r\n          className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex-1 flex items-center justify-center\"\r\n          disabled={selectedEffects.length === 0 || isSearching}\r\n        >\r\n          <Beaker className=\"mr-2 w-5 h-5\" />\r\n          Find Recipe\r\n        </button>\r\n        \r\n        <button\r\n          onClick={resetSelections}\r\n          className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 flex items-center justify-center\"\r\n          disabled={isSearching}\r\n        >\r\n          <RotateCcw className=\"mr-2 w-5 h-5\" />\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      {/* Search Progress */}\r\n      {isSearching && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\r\n            <span>Searching for recipes...</span>\r\n            <span>{Math.round(searchProgress)}%</span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n            <div \r\n              className=\"bg-purple-600 h-2.5 rounded-full\" \r\n              style={{ width: `${searchProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Results Display */}\r\n      {searchProgress === 100 && (\r\n        <div className=\"space-y-6\">\r\n          {solutionFound ? (\r\n            <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n              <div className=\"flex items-center text-green-700 font-medium mb-2\">\r\n                <Check className=\"mr-2 w-5 h-5\" />\r\n                Perfect Match Found!\r\n              </div>\r\n              <p className=\"text-sm text-green-600 mb-2\">\r\n                We found {searchResults.length} recipe{searchResults.length !== 1 ? 's' : ''} that \r\n                will produce a strain with all your selected effects.\r\n              </p>\r\n            </div>\r\n          ) : bestSolution ? (\r\n            <div className=\"p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\r\n              <div className=\"flex items-center text-yellow-700 font-medium mb-2\">\r\n                <AlertTriangle className=\"mr-2 w-5 h-5\" />\r\n                Partial Match Found\r\n              </div>\r\n              <p className=\"text-sm text-yellow-600 mb-2\">\r\n                We found a recipe that includes {bestSolution.matched.length} out of {selectedEffects.length} \r\n                desired effects ({Math.round(calculateEffectMatchPercentage(bestSolution))}% match).\r\n              </p>\r\n            </div>\r\n          ) : searchResults.length === 0 && (\r\n            <div className=\"p-4 bg-red-50 rounded-lg border border-red-200\">\r\n              <div className=\"flex items-center text-red-700 font-medium mb-2\">\r\n                <AlertTriangle className=\"mr-2 w-5 h-5\" />\r\n                No Matches Found\r\n              </div>\r\n              <p className=\"text-sm text-red-600 mb-2\">\r\n                We couldn't find any recipes that produce a strain with your selected effects.\r\n                Try selecting fewer effects or different combinations.\r\n              </p>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Solution Cards */}\r\n          {searchResults.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-800\">Recipe Solutions</h3>\r\n              \r\n              {searchResults.map((solution, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`p-4 rounded-lg border ${\r\n                    solutionFound \r\n                      ? 'bg-green-50 border-green-200' \r\n                      : 'bg-yellow-50 border-yellow-200'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex justify-between items-start mb-3\">\r\n                    <h4 className=\"font-medium text-gray-800\">\r\n                      Recipe #{index + 1} - {solution.seed.name}\r\n                    </h4>\r\n                    <span className=\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800\">\r\n                      {Math.round(calculateEffectMatchPercentage(solution))}% Match\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {/* Recipe Steps */}\r\n                  <div className=\"space-y-3 mb-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\">\r\n                        1\r\n                      </div>\r\n                      <ArrowRight className=\"mx-2 w-4 h-4 text-gray-400\" />\r\n                      <div className=\"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\">\r\n                        <span className=\"text-xl mr-2\">{drugTypes[selectedDrugType]?.emoji || '🌱'}</span>\r\n                        <span>Start with <strong>{solution.seed.name}</strong></span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {solution.ingredients.map((ingredient, idx) => (\r\n                      <div key={idx} className=\"flex items-center\">\r\n                        <div className=\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\">\r\n                          {idx + 2}\r\n                        </div>\r\n                        <ArrowRight className=\"mx-2 w-4 h-4 text-gray-400\" />\r\n                        <div className=\"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\">\r\n                          <span className=\"text-xl mr-2\">{ingredient.emoji || '🧪'}</span>\r\n                          <span>Add <strong>{ingredient.name}</strong></span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Effects Result */}\r\n                  <div className=\"bg-white p-3 rounded-md border border-gray-200\">\r\n                    <div className=\"font-medium text-gray-700 mb-2\">\r\n                      This recipe will create a strain with these effects:\r\n                    </div>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {solution.allEffects.map((effect) => (\r\n                        <div key={effect} className=\"relative group\">\r\n                          <span\r\n                            className={`px-2 py-1 text-white rounded-full text-xs inline-flex items-center ${\r\n                              selectedEffects.includes(effect) \r\n                                ? 'ring-2 ring-white' \r\n                                : 'opacity-70'\r\n                            }`}\r\n                            style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                          >\r\n                            {effect}\r\n                            <span className=\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\">\r\n                              {effectDetails[effect]?.type.charAt(0)}\r\n                            </span>\r\n                            {!selectedEffects.includes(effect) && (\r\n                              <span className=\"ml-1 text-xs\">+</span>\r\n                            )}\r\n                          </span>\r\n                          {/* Tooltip */}\r\n                          <div className=\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\">\r\n                            <div className=\"font-medium mb-1\">{effect}</div>\r\n                            <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                            <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                            <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                            <div className=\"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"></div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    \r\n                    {!solutionFound && (\r\n                      <div className=\"mt-3 text-sm\">\r\n                        <span className=\"font-medium text-yellow-700\">Missing effects: </span>\r\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                          {selectedEffects.filter(e => !solution.matched.includes(e)).map((effect) => (\r\n                            <div key={effect} className=\"relative group\">\r\n                              <span \r\n                                className=\"inline-block px-2 py-0.5 rounded-full text-xs text-white\"\r\n                                style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                              >\r\n                                {effect}\r\n                                <span className=\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\">\r\n                                  {effectDetails[effect]?.type.charAt(0)}\r\n                                </span>\r\n                              </span>\r\n                              {/* Tooltip */}\r\n                              <div className=\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\">\r\n                                <div className=\"font-medium mb-1\">{effect}</div>\r\n                                <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                                <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                                <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                                <div className=\"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"></div>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Information about how it works */}\r\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n        <h3 className=\"font-medium text-blue-800 mb-2\">How the Effect Builder Works</h3>\r\n        <p className=\"text-sm text-blue-700 mb-2\">\r\n          The Effect Builder attempts to find the optimal recipe that will produce a strain with your selected effects.\r\n          It searches through different seeds and ingredient combinations to find solutions that match your criteria.\r\n        </p>\r\n        <ul className=\"list-disc list-inside text-sm text-blue-700 space-y-1\">\r\n          <li>Select up to 8 desired effects for your strain</li>\r\n          <li>Choose the right drug type for your product</li>\r\n          <li>The builder will search for the best recipe to create your desired strain</li>\r\n          <li>Perfect matches include all your selected effects</li>\r\n          <li>Partial matches include some but not all selected effects</li>\r\n        </ul>\r\n        <p className=\"text-sm text-blue-700 mt-2\">\r\n          Note: Not all effect combinations are possible due to game mechanics. The builder will find the closest match possible.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EffectBuilderTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}