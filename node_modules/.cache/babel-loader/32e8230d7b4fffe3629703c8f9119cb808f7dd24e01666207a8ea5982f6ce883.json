{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Documents\\\\_Technical Projects\\\\Doponomics\\\\dopeonomics\\\\src\\\\EffectBuilderTab.js\",\n  _s = $RefreshSig$();\n// EffectBuilderTab.js\nimport React, { useState } from 'react';\nimport { Beaker, RotateCcw, Check, Search, AlertTriangle, ArrowRight, X } from 'lucide-react';\nimport { effectDetails } from './straindata';\n\n// Effect Builder Tab Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EffectBuilderTab = ({\n  seedTypes,\n  ingredients,\n  effectColors,\n  drugTypes,\n  calculateStrainEffects\n}) => {\n  _s();\n  // State for selected effects and search\n  const [selectedEffects, setSelectedEffects] = useState([]);\n  const [effectSearchTerm, setEffectSearchTerm] = useState('');\n  const [selectedDrugType, setSelectedDrugType] = useState('weed');\n  const [solutionFound, setSolutionFound] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [bestSolution, setBestSolution] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchProgress, setSearchProgress] = useState(0);\n  const [effectSortOrder, setEffectSortOrder] = useState('alphabetical'); // 'alphabetical', 'type', 'value'\n  const [effectTypeFilter, setEffectTypeFilter] = useState('all'); // 'all', 'Ability', 'Cosmetic'\n\n  // Get all available effects from effect colors for display\n  const allEffects = Object.keys(effectColors).sort();\n\n  // Filter and sort effects based on search term and sort order\n  const filteredAndSortedEffects = () => {\n    // First filter by search term\n    let filtered = allEffects.filter(effect => effect.toLowerCase().includes(effectSearchTerm.toLowerCase()));\n\n    // Filter by effect type if not 'all'\n    if (effectTypeFilter !== 'all') {\n      filtered = filtered.filter(effect => {\n        var _effectDetails$effect;\n        return ((_effectDetails$effect = effectDetails[effect]) === null || _effectDetails$effect === void 0 ? void 0 : _effectDetails$effect.type) === effectTypeFilter;\n      });\n    }\n\n    // Then sort by selected order\n    if (effectSortOrder === 'type') {\n      filtered = [...filtered].sort((a, b) => {\n        var _effectDetails$a, _effectDetails$b;\n        const typeA = ((_effectDetails$a = effectDetails[a]) === null || _effectDetails$a === void 0 ? void 0 : _effectDetails$a.type) || '';\n        const typeB = ((_effectDetails$b = effectDetails[b]) === null || _effectDetails$b === void 0 ? void 0 : _effectDetails$b.type) || '';\n        return typeA.localeCompare(typeB) || a.localeCompare(b);\n      });\n    } else if (effectSortOrder === 'value') {\n      filtered = [...filtered].sort((a, b) => {\n        var _effectDetails$a2, _effectDetails$b2;\n        const valueA = ((_effectDetails$a2 = effectDetails[a]) === null || _effectDetails$a2 === void 0 ? void 0 : _effectDetails$a2.multiplier) || 0;\n        const valueB = ((_effectDetails$b2 = effectDetails[b]) === null || _effectDetails$b2 === void 0 ? void 0 : _effectDetails$b2.multiplier) || 0;\n        return valueB - valueA; // Higher values first\n      });\n    }\n    // For 'alphabetical', already sorted\n\n    return filtered;\n  };\n\n  // Toggle effect selection\n  const toggleEffect = effect => {\n    if (selectedEffects.includes(effect)) {\n      setSelectedEffects(selectedEffects.filter(e => e !== effect));\n    } else {\n      // Only allow selecting up to 8 effects (maximum in the game)\n      if (selectedEffects.length < 8) {\n        setSelectedEffects([...selectedEffects, effect]);\n      }\n    }\n    // Reset solution when effects change\n    setSolutionFound(false);\n    setBestSolution(null);\n  };\n\n  // Reset all selections\n  const resetSelections = () => {\n    setSelectedEffects([]);\n    setSolutionFound(false);\n    setBestSolution(null);\n    setSearchResults([]);\n    setSearchProgress(0);\n  };\n\n  // Filter seeds by drug type\n  const getFilteredSeeds = () => {\n    return seedTypes.filter(seed => seed.drugType === selectedDrugType);\n  };\n\n  // Filter ingredients based on drug type\n  const getFilteredIngredients = () => {\n    // Common ingredients that work with all drug types\n    const commonIngredients = ['Cuke', 'Banana', 'Paracetamol', 'Donut', 'Viagra', 'Mouth Wash', 'Flu Medicine', 'Gasoline', 'Energy Drink', 'Motor Oil', 'Mega Bean', 'Chili', 'Battery', 'Iodine', 'Addy', 'Horse Semen'];\n\n    // Drug-specific ingredients\n    const methSpecificIngredients = ['Glass Shards', 'Blue Food Coloring'];\n    const cocaineSpecificIngredients = ['Baking Soda', 'Caffeine Powder'];\n    return ingredients.filter(ingredient => {\n      if (commonIngredients.includes(ingredient.name)) {\n        return true;\n      }\n      if (selectedDrugType === 'meth' && methSpecificIngredients.includes(ingredient.name)) {\n        return true;\n      }\n      if (selectedDrugType === 'cocaine' && cocaineSpecificIngredients.includes(ingredient.name)) {\n        return true;\n      }\n\n      // For weed, show most ingredients except the very specific ones for meth/cocaine\n      if (selectedDrugType === 'weed') {\n        return !methSpecificIngredients.includes(ingredient.name) && !cocaineSpecificIngredients.includes(ingredient.name);\n      }\n      return true;\n    });\n  };\n\n  // Check if a given sequence can produce the selected effects\n  const checkSequence = (seed, ingredientSequence) => {\n    if (!seed || ingredientSequence.length === 0) return false;\n    const result = calculateStrainEffects(seed.effect, ingredientSequence);\n    const finalEffects = result.finalEffects;\n\n    // Check if ALL selected effects are in the final effects\n    const allSelected = selectedEffects.every(effect => finalEffects.includes(effect));\n    if (allSelected) {\n      return {\n        seed,\n        ingredients: ingredientSequence,\n        allEffects: finalEffects,\n        matched: selectedEffects,\n        extra: finalEffects.filter(effect => !selectedEffects.includes(effect))\n      };\n    }\n    return false;\n  };\n\n  // Calculate effect match percentage for a potential solution\n  const calculateEffectMatchPercentage = solution => {\n    if (!solution) return 0;\n    const matchedCount = solution.matched.length;\n    const totalEffects = selectedEffects.length;\n    return matchedCount / totalEffects * 100;\n  };\n\n  // Building and searching for a solution\n  const searchForSolutions = async () => {\n    if (selectedEffects.length === 0) return;\n    setIsSearching(true);\n    setSolutionFound(false);\n    setBestSolution(null);\n    setSearchResults([]);\n    setSearchProgress(0);\n    const filteredSeeds = getFilteredSeeds();\n    const filteredIngredients = getFilteredIngredients();\n\n    // Use a more intelligent approach to find solutions\n    // Start with checking if any single seed already contains one of the desired effects\n    const seedsWithDesiredEffects = filteredSeeds.filter(seed => selectedEffects.includes(seed.effect));\n\n    // Also include all seeds as fallbacks\n    const seedsToTry = [...seedsWithDesiredEffects, ...filteredSeeds.filter(seed => !seedsWithDesiredEffects.some(s => s.name === seed.name))];\n    let solutions = [];\n    let bestMatch = null;\n    let bestMatchPercentage = 0;\n    const totalCombinations = seedsToTry.length * Math.min(10, filteredIngredients.length ** 3);\n    let combinationsTried = 0;\n\n    // Process in chunks to keep UI responsive\n    for (const seed of seedsToTry) {\n      // Check the seed alone first\n      const seedOnlyResult = calculateStrainEffects(seed.effect, []);\n      const seedMatches = selectedEffects.filter(effect => seedOnlyResult.finalEffects.includes(effect));\n      const seedMatchPercentage = seedMatches.length / selectedEffects.length * 100;\n      if (seedMatchPercentage > bestMatchPercentage) {\n        bestMatchPercentage = seedMatchPercentage;\n        bestMatch = {\n          seed,\n          ingredients: [],\n          allEffects: seedOnlyResult.finalEffects,\n          matched: seedMatches,\n          extra: seedOnlyResult.finalEffects.filter(effect => !seedMatches.includes(effect))\n        };\n\n        // If perfect match, add to solutions\n        if (seedMatchPercentage === 100) {\n          solutions.push(bestMatch);\n        }\n      }\n\n      // Try adding 1 ingredient\n      for (const ing1 of filteredIngredients) {\n        await new Promise(resolve => setTimeout(resolve, 0)); // Allow UI updates\n\n        const sequence1 = [ing1];\n        const result1 = checkSequence(seed, sequence1);\n        combinationsTried++;\n        setSearchProgress(Math.min(99, combinationsTried / totalCombinations * 100));\n        if (result1) {\n          solutions.push(result1);\n          if (solutions.length >= 5) break; // Limit to 5 solutions\n        } else if (result1 === false) {\n          // Calculate partial match\n          const partialResult = calculateStrainEffects(seed.effect, sequence1);\n          const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\n          const matchPercentage = matches.length / selectedEffects.length * 100;\n          if (matchPercentage > bestMatchPercentage) {\n            bestMatchPercentage = matchPercentage;\n            bestMatch = {\n              seed,\n              ingredients: sequence1,\n              allEffects: partialResult.finalEffects,\n              matched: matches,\n              extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\n            };\n          }\n        }\n\n        // Try adding 2 ingredients\n        for (const ing2 of filteredIngredients) {\n          await new Promise(resolve => setTimeout(resolve, 0)); // Allow UI updates\n\n          const sequence2 = [ing1, ing2];\n          const result2 = checkSequence(seed, sequence2);\n          combinationsTried++;\n          setSearchProgress(Math.min(99, combinationsTried / totalCombinations * 100));\n          if (result2) {\n            solutions.push(result2);\n            if (solutions.length >= 5) break; // Limit to 5 solutions\n          } else if (result2 === false) {\n            // Calculate partial match\n            const partialResult = calculateStrainEffects(seed.effect, sequence2);\n            const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\n            const matchPercentage = matches.length / selectedEffects.length * 100;\n            if (matchPercentage > bestMatchPercentage) {\n              bestMatchPercentage = matchPercentage;\n              bestMatch = {\n                seed,\n                ingredients: sequence2,\n                allEffects: partialResult.finalEffects,\n                matched: matches,\n                extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\n              };\n            }\n          }\n\n          // Only try 3 ingredients if we haven't found solutions yet\n          if (solutions.length === 0) {\n            // Try adding 3 ingredients\n            for (const ing3 of filteredIngredients) {\n              const sequence3 = [ing1, ing2, ing3];\n              const result3 = checkSequence(seed, sequence3);\n              combinationsTried++;\n              setSearchProgress(Math.min(99, combinationsTried / totalCombinations * 100));\n              if (result3) {\n                solutions.push(result3);\n                if (solutions.length >= 5) break; // Limit to 5 solutions\n              } else if (result3 === false) {\n                // Calculate partial match\n                const partialResult = calculateStrainEffects(seed.effect, sequence3);\n                const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\n                const matchPercentage = matches.length / selectedEffects.length * 100;\n                if (matchPercentage > bestMatchPercentage) {\n                  bestMatchPercentage = matchPercentage;\n                  bestMatch = {\n                    seed,\n                    ingredients: sequence3,\n                    allEffects: partialResult.finalEffects,\n                    matched: matches,\n                    extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\n                  };\n                }\n              }\n            }\n          }\n          if (solutions.length >= 5) break; // Limit to 5 solutions\n        }\n        if (solutions.length >= 5) break; // Limit to 5 solutions\n      }\n      if (solutions.length >= 5) break; // Limit to 5 solutions\n    }\n\n    // Sort solutions by least ingredients first\n    solutions.sort((a, b) => a.ingredients.length - b.ingredients.length);\n    if (solutions.length > 0) {\n      setSolutionFound(true);\n      setBestSolution(solutions[0]);\n      setSearchResults(solutions);\n    } else if (bestMatch) {\n      // If no perfect solutions, show best partial match\n      setSolutionFound(false);\n      setBestSolution(bestMatch);\n      setSearchResults([bestMatch]);\n    } else {\n      setSolutionFound(false);\n      setBestSolution(null);\n      setSearchResults([]);\n    }\n    setSearchProgress(100);\n    setIsSearching(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow-lg p-6 mt-8 border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-gray-800 mb-6 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Beaker, {\n        className: \"mr-2 w-6 h-6 text-purple-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), \"Effect Builder\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-md font-medium text-gray-700 mb-2\",\n        children: \"Select Product Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-4\",\n        children: Object.entries(drugTypes).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center justify-center gap-2\n                ${selectedDrugType === key ? 'bg-blue-50 border-blue-500 shadow-md' : 'bg-gray-50 border-gray-200 hover:bg-gray-100'}`,\n          onClick: () => setSelectedDrugType(key),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-3xl\",\n            children: value.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-center\",\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500 text-center\",\n            children: [\"$\", value.basePrice, \" per \", value.unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium text-gray-700\",\n          children: \"Select Desired Effects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [selectedEffects.length, \"/8 effects selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full md:w-64 mb-2 md:mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search effects...\",\n            value: effectSearchTerm,\n            onChange: e => setEffectSearchTerm(e.target.value),\n            className: \"w-full p-2 pl-9 text-sm border rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            className: \"absolute left-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), effectSearchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEffectSearchTerm(''),\n            className: \"absolute right-2 top-1/2 transform -translate-y-1/2\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              className: \"w-4 h-4 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap items-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600 mr-2\",\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-flex rounded-md shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEffectTypeFilter('all'),\n                className: `px-3 py-1 text-xs rounded-l-md border ${effectTypeFilter === 'all' ? 'bg-purple-100 border-purple-300 text-purple-800' : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEffectTypeFilter('Ability'),\n                className: `px-3 py-1 text-xs border-t border-b ${effectTypeFilter === 'Ability' ? 'bg-purple-100 border-purple-300 text-purple-800' : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,\n                children: \"Ability\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEffectTypeFilter('Cosmetic'),\n                className: `px-3 py-1 text-xs rounded-r-md border ${effectTypeFilter === 'Cosmetic' ? 'bg-purple-100 border-purple-300 text-purple-800' : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,\n                children: \"Cosmetic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600 mr-2\",\n              children: \"Sort:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-flex rounded-md shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEffectSortOrder('alphabetical'),\n                className: `px-3 py-1 text-xs rounded-l-md border ${effectSortOrder === 'alphabetical' ? 'bg-purple-100 border-purple-300 text-purple-800' : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEffectSortOrder('type'),\n                className: `px-3 py-1 text-xs border-t border-b ${effectSortOrder === 'type' ? 'bg-purple-100 border-purple-300 text-purple-800' : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEffectSortOrder('value'),\n                className: `px-3 py-1 text-xs rounded-r-md border ${effectSortOrder === 'value' ? 'bg-purple-100 border-purple-300 text-purple-800' : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'}`,\n                children: \"Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), selectedEffects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium text-gray-700 mb-2\",\n          children: \"Selected Effects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: selectedEffects.map(effect => {\n            var _effectDetails$effect2, _effectDetails$effect3, _effectDetails$effect4, _effectDetails$effect5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative group\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"px-2 py-1 text-white rounded-l-full text-sm inline-flex items-center\",\n                  style: {\n                    backgroundColor: effectColors[effect] || '#333'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: effect\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\",\n                    children: (_effectDetails$effect2 = effectDetails[effect]) === null || _effectDetails$effect2 === void 0 ? void 0 : _effectDetails$effect2.type.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleEffect(effect),\n                  className: \"bg-gray-200 hover:bg-gray-300 p-1 rounded-r-full\",\n                  children: /*#__PURE__*/_jsxDEV(X, {\n                    className: \"w-4 h-4 text-gray-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs top-full left-0 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium mb-1\",\n                  children: effect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-300 mb-1\",\n                  children: [\"Type: \", (_effectDetails$effect3 = effectDetails[effect]) === null || _effectDetails$effect3 === void 0 ? void 0 : _effectDetails$effect3.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-300\",\n                  children: [\"Value: \", (((_effectDetails$effect4 = effectDetails[effect]) === null || _effectDetails$effect4 === void 0 ? void 0 : _effectDetails$effect4.multiplier) * 100).toFixed(0), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-1\",\n                  children: (_effectDetails$effect5 = effectDetails[effect]) === null || _effectDetails$effect5 === void 0 ? void 0 : _effectDetails$effect5.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute w-2 h-2 bg-gray-900 transform rotate-45 top-0 left-4 -translate-y-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this)]\n            }, effect, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 max-h-72 overflow-y-auto p-2 border rounded-md\",\n        children: filteredAndSortedEffects().length > 0 ? filteredAndSortedEffects().map((effect, index) => {\n          var _effectDetails$effect6, _effectDetails$effect7, _effectDetails$effect8, _effectDetails$effect9;\n          // Determine if this is in the first row\n          const isInFirstFourRows = index < 16;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleEffect(effect),\n              className: `w-full p-2 rounded-md text-white text-sm transition-all ${selectedEffects.includes(effect) ? 'opacity-100 ring-2 ring-white' : 'opacity-80 hover:opacity-100'}`,\n              style: {\n                backgroundColor: effectColors[effect] || '#333'\n              },\n              disabled: selectedEffects.length >= 8 && !selectedEffects.includes(effect),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: effect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 25\n                }, this), selectedEffects.includes(effect) && /*#__PURE__*/_jsxDEV(Check, {\n                  className: \"ml-1 w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 px-1 py-0.5 bg-white bg-opacity-20 rounded text-xs\",\n                  children: (_effectDetails$effect6 = effectDetails[effect]) === null || _effectDetails$effect6 === void 0 ? void 0 : _effectDetails$effect6.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs ${isInFirstFourRows ? 'top-full mt-2' : 'bottom-full mb-2'} left-1/2 transform -translate-x-1/2`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium mb-1\",\n                children: effect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-300 mb-1\",\n                children: [\"Type: \", (_effectDetails$effect7 = effectDetails[effect]) === null || _effectDetails$effect7 === void 0 ? void 0 : _effectDetails$effect7.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-300\",\n                children: [\"Value: \", (((_effectDetails$effect8 = effectDetails[effect]) === null || _effectDetails$effect8 === void 0 ? void 0 : _effectDetails$effect8.multiplier) * 100).toFixed(0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-1\",\n                children: (_effectDetails$effect9 = effectDetails[effect]) === null || _effectDetails$effect9 === void 0 ? void 0 : _effectDetails$effect9.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `absolute w-2 h-2 bg-gray-900 transform rotate-45 ${isInFirstFourRows ? 'top-0 -translate-y-1' : 'bottom-0 translate-y-1'} left-1/2 -translate-x-1/2`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 21\n            }, this)]\n          }, effect, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 21\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-full text-center p-4 text-gray-500\",\n          children: \"No effects match your search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchForSolutions,\n        className: \"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex-1 flex items-center justify-center\",\n        disabled: selectedEffects.length === 0 || isSearching,\n        children: [/*#__PURE__*/_jsxDEV(Beaker, {\n          className: \"mr-2 w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), \"Find Recipe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSelections,\n        className: \"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 flex items-center justify-center\",\n        disabled: isSearching,\n        children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n          className: \"mr-2 w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), \"Reset\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-sm text-gray-600 mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Searching for recipes...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.round(searchProgress), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full h-2.5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-600 h-2.5 rounded-full\",\n          style: {\n            width: `${searchProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }, this), searchProgress === 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [solutionFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-green-50 rounded-lg border border-green-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-green-700 font-medium mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            className: \"mr-2 w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 17\n          }, this), \"Perfect Match Found!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-600 mb-2\",\n          children: [\"We found \", searchResults.length, \" recipe\", searchResults.length !== 1 ? 's' : '', \" that will produce a strain with all your selected effects.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 13\n      }, this) : bestSolution ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-yellow-50 rounded-lg border border-yellow-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-yellow-700 font-medium mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"mr-2 w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this), \"Partial Match Found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-yellow-600 mb-2\",\n          children: [\"We found a recipe that includes \", bestSolution.matched.length, \" out of \", selectedEffects.length, \"desired effects (\", Math.round(calculateEffectMatchPercentage(bestSolution)), \"% match).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 13\n      }, this) : searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-red-50 rounded-lg border border-red-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-red-700 font-medium mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"mr-2 w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 17\n          }, this), \"No Matches Found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-600 mb-2\",\n          children: \"We couldn't find any recipes that produce a strain with your selected effects. Try selecting fewer effects or different combinations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 13\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-gray-800\",\n          children: \"Recipe Solutions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 15\n        }, this), searchResults.map((solution, index) => {\n          var _drugTypes$selectedDr;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 rounded-lg border ${solutionFound ? 'bg-green-50 border-green-200' : 'bg-yellow-50 border-yellow-200'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-gray-800\",\n                children: [\"Recipe #\", index + 1, \" - \", solution.seed.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800\",\n                children: [Math.round(calculateEffectMatchPercentage(solution)), \"% Match\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-3 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\",\n                  children: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n                  className: \"mx-2 w-4 h-4 text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xl mr-2\",\n                    children: ((_drugTypes$selectedDr = drugTypes[selectedDrugType]) === null || _drugTypes$selectedDr === void 0 ? void 0 : _drugTypes$selectedDr.emoji) || '🌱'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Start with \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: solution.seed.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 676,\n                      columnNumber: 42\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this), solution.ingredients.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\",\n                  children: idx + 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n                  className: \"mx-2 w-4 h-4 text-gray-400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xl mr-2\",\n                    children: ingredient.emoji || '🧪'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Add \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: ingredient.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 25\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white p-3 rounded-md border border-gray-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-gray-700 mb-2\",\n                children: \"This recipe will create a strain with these effects:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-wrap gap-2\",\n                children: solution.allEffects.map(effect => {\n                  var _effectDetails$effect10, _effectDetails$effect11, _effectDetails$effect12, _effectDetails$effect13;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"relative group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-1 text-white rounded-full text-xs inline-flex items-center ${selectedEffects.includes(effect) ? 'ring-2 ring-white' : 'opacity-70'}`,\n                      style: {\n                        backgroundColor: effectColors[effect] || '#333'\n                      },\n                      children: [effect, /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\",\n                        children: (_effectDetails$effect10 = effectDetails[effect]) === null || _effectDetails$effect10 === void 0 ? void 0 : _effectDetails$effect10.type.charAt(0)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 711,\n                        columnNumber: 29\n                      }, this), !selectedEffects.includes(effect) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-1 text-xs\",\n                        children: \"+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 715,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 702,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"font-medium mb-1\",\n                        children: effect\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 720,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-gray-300 mb-1\",\n                        children: [\"Type: \", (_effectDetails$effect11 = effectDetails[effect]) === null || _effectDetails$effect11 === void 0 ? void 0 : _effectDetails$effect11.type]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 721,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-gray-300\",\n                        children: [\"Value: \", (((_effectDetails$effect12 = effectDetails[effect]) === null || _effectDetails$effect12 === void 0 ? void 0 : _effectDetails$effect12.multiplier) * 100).toFixed(0), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 722,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mt-1\",\n                        children: (_effectDetails$effect13 = effectDetails[effect]) === null || _effectDetails$effect13 === void 0 ? void 0 : _effectDetails$effect13.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 723,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 724,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 27\n                    }, this)]\n                  }, effect, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 21\n              }, this), !solutionFound && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-3 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-yellow-700\",\n                  children: \"Missing effects: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap gap-1 mt-1\",\n                  children: selectedEffects.filter(e => !solution.matched.includes(e)).map(effect => {\n                    var _effectDetails$effect14, _effectDetails$effect15, _effectDetails$effect16, _effectDetails$effect17;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"relative group\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inline-block px-2 py-0.5 rounded-full text-xs text-white\",\n                        style: {\n                          backgroundColor: effectColors[effect] || '#333'\n                        },\n                        children: [effect, /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\",\n                          children: (_effectDetails$effect14 = effectDetails[effect]) === null || _effectDetails$effect14 === void 0 ? void 0 : _effectDetails$effect14.type.charAt(0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 741,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 736,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"font-medium mb-1\",\n                          children: effect\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 747,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-gray-300 mb-1\",\n                          children: [\"Type: \", (_effectDetails$effect15 = effectDetails[effect]) === null || _effectDetails$effect15 === void 0 ? void 0 : _effectDetails$effect15.type]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 748,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"text-gray-300\",\n                          children: [\"Value: \", (((_effectDetails$effect16 = effectDetails[effect]) === null || _effectDetails$effect16 === void 0 ? void 0 : _effectDetails$effect16.multiplier) * 100).toFixed(0), \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 749,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"mt-1\",\n                          children: (_effectDetails$effect17 = effectDetails[effect]) === null || _effectDetails$effect17 === void 0 ? void 0 : _effectDetails$effect17.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 750,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 751,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 746,\n                        columnNumber: 31\n                      }, this)]\n                    }, effect, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 735,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium text-blue-800 mb-2\",\n        children: \"How the Effect Builder Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-700 mb-2\",\n        children: \"The Effect Builder attempts to find the optimal recipe that will produce a strain with your selected effects. It searches through different seeds and ingredient combinations to find solutions that match your criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside text-sm text-blue-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Select up to 8 desired effects for your strain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Choose the right drug type for your product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The builder will search for the best recipe to create your desired strain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Perfect matches include all your selected effects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Partial matches include some but not all selected effects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-blue-700 mt-2\",\n        children: \"Note: Not all effect combinations are possible due to game mechanics. The builder will find the closest match possible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(EffectBuilderTab, \"9t5/Bmnms2QB3kI769vhhQGYSiw=\");\n_c = EffectBuilderTab;\nexport default EffectBuilderTab;\nvar _c;\n$RefreshReg$(_c, \"EffectBuilderTab\");","map":{"version":3,"names":["React","useState","Beaker","RotateCcw","Check","Search","AlertTriangle","ArrowRight","X","effectDetails","jsxDEV","_jsxDEV","EffectBuilderTab","seedTypes","ingredients","effectColors","drugTypes","calculateStrainEffects","_s","selectedEffects","setSelectedEffects","effectSearchTerm","setEffectSearchTerm","selectedDrugType","setSelectedDrugType","solutionFound","setSolutionFound","isSearching","setIsSearching","bestSolution","setBestSolution","searchResults","setSearchResults","searchProgress","setSearchProgress","effectSortOrder","setEffectSortOrder","effectTypeFilter","setEffectTypeFilter","allEffects","Object","keys","sort","filteredAndSortedEffects","filtered","filter","effect","toLowerCase","includes","_effectDetails$effect","type","a","b","_effectDetails$a","_effectDetails$b","typeA","typeB","localeCompare","_effectDetails$a2","_effectDetails$b2","valueA","multiplier","valueB","toggleEffect","e","length","resetSelections","getFilteredSeeds","seed","drugType","getFilteredIngredients","commonIngredients","methSpecificIngredients","cocaineSpecificIngredients","ingredient","name","checkSequence","ingredientSequence","result","finalEffects","allSelected","every","matched","extra","calculateEffectMatchPercentage","solution","matchedCount","totalEffects","searchForSolutions","filteredSeeds","filteredIngredients","seedsWithDesiredEffects","seedsToTry","some","s","solutions","bestMatch","bestMatchPercentage","totalCombinations","Math","min","combinationsTried","seedOnlyResult","seedMatches","seedMatchPercentage","push","ing1","Promise","resolve","setTimeout","sequence1","result1","partialResult","matches","matchPercentage","ing2","sequence2","result2","ing3","sequence3","result3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","key","value","onClick","emoji","basePrice","unit","placeholder","onChange","target","_effectDetails$effect2","_effectDetails$effect3","_effectDetails$effect4","_effectDetails$effect5","style","backgroundColor","charAt","toFixed","description","index","_effectDetails$effect6","_effectDetails$effect7","_effectDetails$effect8","_effectDetails$effect9","isInFirstFourRows","disabled","round","width","_drugTypes$selectedDr","idx","_effectDetails$effect10","_effectDetails$effect11","_effectDetails$effect12","_effectDetails$effect13","_effectDetails$effect14","_effectDetails$effect15","_effectDetails$effect16","_effectDetails$effect17","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/EffectBuilderTab.js"],"sourcesContent":["// EffectBuilderTab.js\r\nimport React, { useState} from 'react';\r\nimport {\r\n  Beaker,\r\n  RotateCcw,\r\n  Check,\r\n  Search,\r\n  AlertTriangle,\r\n  ArrowRight,\r\n  X,\r\n} from 'lucide-react';\r\nimport { effectDetails } from './straindata';\r\n\r\n// Effect Builder Tab Component\r\nconst EffectBuilderTab = ({ \r\n  seedTypes, \r\n  ingredients, \r\n  effectColors, \r\n  drugTypes,\r\n  calculateStrainEffects,\r\n}) => {\r\n  // State for selected effects and search\r\n  const [selectedEffects, setSelectedEffects] = useState([]);\r\n  const [effectSearchTerm, setEffectSearchTerm] = useState('');\r\n  const [selectedDrugType, setSelectedDrugType] = useState('weed');\r\n  const [solutionFound, setSolutionFound] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [bestSolution, setBestSolution] = useState(null);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchProgress, setSearchProgress] = useState(0);\r\n  const [effectSortOrder, setEffectSortOrder] = useState('alphabetical'); // 'alphabetical', 'type', 'value'\r\n  const [effectTypeFilter, setEffectTypeFilter] = useState('all'); // 'all', 'Ability', 'Cosmetic'\r\n  \r\n  // Get all available effects from effect colors for display\r\n  const allEffects = Object.keys(effectColors).sort();\r\n  \r\n  // Filter and sort effects based on search term and sort order\r\n  const filteredAndSortedEffects = () => {\r\n    // First filter by search term\r\n    let filtered = allEffects.filter(effect => \r\n      effect.toLowerCase().includes(effectSearchTerm.toLowerCase())\r\n    );\r\n    \r\n    // Filter by effect type if not 'all'\r\n    if (effectTypeFilter !== 'all') {\r\n      filtered = filtered.filter(effect => \r\n        effectDetails[effect]?.type === effectTypeFilter\r\n      );\r\n    }\r\n    \r\n    // Then sort by selected order\r\n    if (effectSortOrder === 'type') {\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const typeA = effectDetails[a]?.type || '';\r\n        const typeB = effectDetails[b]?.type || '';\r\n        return typeA.localeCompare(typeB) || a.localeCompare(b);\r\n      });\r\n    } else if (effectSortOrder === 'value') {\r\n      filtered = [...filtered].sort((a, b) => {\r\n        const valueA = effectDetails[a]?.multiplier || 0;\r\n        const valueB = effectDetails[b]?.multiplier || 0;\r\n        return valueB - valueA; // Higher values first\r\n      });\r\n    }\r\n    // For 'alphabetical', already sorted\r\n    \r\n    return filtered;\r\n  };\r\n\r\n  // Toggle effect selection\r\n  const toggleEffect = (effect) => {\r\n    if (selectedEffects.includes(effect)) {\r\n      setSelectedEffects(selectedEffects.filter(e => e !== effect));\r\n    } else {\r\n      // Only allow selecting up to 8 effects (maximum in the game)\r\n      if (selectedEffects.length < 8) {\r\n        setSelectedEffects([...selectedEffects, effect]);\r\n      }\r\n    }\r\n    // Reset solution when effects change\r\n    setSolutionFound(false);\r\n    setBestSolution(null);\r\n  };\r\n  \r\n  // Reset all selections\r\n  const resetSelections = () => {\r\n    setSelectedEffects([]);\r\n    setSolutionFound(false);\r\n    setBestSolution(null);\r\n    setSearchResults([]);\r\n    setSearchProgress(0);\r\n  };\r\n  \r\n  // Filter seeds by drug type\r\n  const getFilteredSeeds = () => {\r\n    return seedTypes.filter(seed => seed.drugType === selectedDrugType);\r\n  };\r\n  \r\n  // Filter ingredients based on drug type\r\n  const getFilteredIngredients = () => {\r\n    // Common ingredients that work with all drug types\r\n    const commonIngredients = [\r\n      'Cuke', 'Banana', 'Paracetamol', 'Donut', 'Viagra', 'Mouth Wash', 'Flu Medicine', 'Gasoline',\r\n      'Energy Drink', 'Motor Oil', 'Mega Bean', 'Chili', 'Battery', 'Iodine', 'Addy', 'Horse Semen'\r\n    ];\r\n    \r\n    // Drug-specific ingredients\r\n    const methSpecificIngredients = ['Glass Shards', 'Blue Food Coloring'];\r\n    const cocaineSpecificIngredients = ['Baking Soda', 'Caffeine Powder'];\r\n    \r\n    return ingredients.filter(ingredient => {\r\n      if (commonIngredients.includes(ingredient.name)) {\r\n        return true;\r\n      }\r\n      \r\n      if (selectedDrugType === 'meth' && methSpecificIngredients.includes(ingredient.name)) {\r\n        return true;\r\n      }\r\n      \r\n      if (selectedDrugType === 'cocaine' && cocaineSpecificIngredients.includes(ingredient.name)) {\r\n        return true;\r\n      }\r\n      \r\n      // For weed, show most ingredients except the very specific ones for meth/cocaine\r\n      if (selectedDrugType === 'weed') {\r\n        return !methSpecificIngredients.includes(ingredient.name) && \r\n               !cocaineSpecificIngredients.includes(ingredient.name);\r\n      }\r\n      \r\n      return true;\r\n    });\r\n  };\r\n  \r\n  // Check if a given sequence can produce the selected effects\r\n  const checkSequence = (seed, ingredientSequence) => {\r\n    if (!seed || ingredientSequence.length === 0) return false;\r\n    \r\n    const result = calculateStrainEffects(seed.effect, ingredientSequence);\r\n    const finalEffects = result.finalEffects;\r\n    \r\n    // Check if ALL selected effects are in the final effects\r\n    const allSelected = selectedEffects.every(effect => finalEffects.includes(effect));\r\n    \r\n    if (allSelected) {\r\n      return {\r\n        seed,\r\n        ingredients: ingredientSequence,\r\n        allEffects: finalEffects,\r\n        matched: selectedEffects,\r\n        extra: finalEffects.filter(effect => !selectedEffects.includes(effect))\r\n      };\r\n    }\r\n    \r\n    return false;\r\n  };\r\n  \r\n  // Calculate effect match percentage for a potential solution\r\n  const calculateEffectMatchPercentage = (solution) => {\r\n    if (!solution) return 0;\r\n    \r\n    const matchedCount = solution.matched.length;\r\n    const totalEffects = selectedEffects.length;\r\n    \r\n    return (matchedCount / totalEffects) * 100;\r\n  };\r\n  \r\n  // Building and searching for a solution\r\n  const searchForSolutions = async () => {\r\n    if (selectedEffects.length === 0) return;\r\n    \r\n    setIsSearching(true);\r\n    setSolutionFound(false);\r\n    setBestSolution(null);\r\n    setSearchResults([]);\r\n    setSearchProgress(0);\r\n    \r\n    const filteredSeeds = getFilteredSeeds();\r\n    const filteredIngredients = getFilteredIngredients();\r\n    \r\n    // Use a more intelligent approach to find solutions\r\n    // Start with checking if any single seed already contains one of the desired effects\r\n    const seedsWithDesiredEffects = filteredSeeds.filter(seed => \r\n      selectedEffects.includes(seed.effect)\r\n    );\r\n    \r\n    // Also include all seeds as fallbacks\r\n    const seedsToTry = [...seedsWithDesiredEffects, ...filteredSeeds.filter(seed => \r\n      !seedsWithDesiredEffects.some(s => s.name === seed.name)\r\n    )];\r\n    \r\n    let solutions = [];\r\n    let bestMatch = null;\r\n    let bestMatchPercentage = 0;\r\n    \r\n    const totalCombinations = seedsToTry.length * Math.min(10, filteredIngredients.length ** 3);\r\n    let combinationsTried = 0;\r\n    \r\n    // Process in chunks to keep UI responsive\r\n    for (const seed of seedsToTry) {\r\n      // Check the seed alone first\r\n      const seedOnlyResult = calculateStrainEffects(seed.effect, []);\r\n      const seedMatches = selectedEffects.filter(effect => seedOnlyResult.finalEffects.includes(effect));\r\n      const seedMatchPercentage = (seedMatches.length / selectedEffects.length) * 100;\r\n      \r\n      if (seedMatchPercentage > bestMatchPercentage) {\r\n        bestMatchPercentage = seedMatchPercentage;\r\n        bestMatch = {\r\n          seed,\r\n          ingredients: [],\r\n          allEffects: seedOnlyResult.finalEffects,\r\n          matched: seedMatches,\r\n          extra: seedOnlyResult.finalEffects.filter(effect => !seedMatches.includes(effect))\r\n        };\r\n        \r\n        // If perfect match, add to solutions\r\n        if (seedMatchPercentage === 100) {\r\n          solutions.push(bestMatch);\r\n        }\r\n      }\r\n      \r\n      // Try adding 1 ingredient\r\n      for (const ing1 of filteredIngredients) {\r\n        await new Promise(resolve => setTimeout(resolve, 0)); // Allow UI updates\r\n        \r\n        const sequence1 = [ing1];\r\n        const result1 = checkSequence(seed, sequence1);\r\n        \r\n        combinationsTried++;\r\n        setSearchProgress(Math.min(99, (combinationsTried / totalCombinations) * 100));\r\n        \r\n        if (result1) {\r\n          solutions.push(result1);\r\n          if (solutions.length >= 5) break; // Limit to 5 solutions\r\n        } else if (result1 === false) {\r\n          // Calculate partial match\r\n          const partialResult = calculateStrainEffects(seed.effect, sequence1);\r\n          const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\r\n          const matchPercentage = (matches.length / selectedEffects.length) * 100;\r\n          \r\n          if (matchPercentage > bestMatchPercentage) {\r\n            bestMatchPercentage = matchPercentage;\r\n            bestMatch = {\r\n              seed,\r\n              ingredients: sequence1,\r\n              allEffects: partialResult.finalEffects,\r\n              matched: matches,\r\n              extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\r\n            };\r\n          }\r\n        }\r\n        \r\n        // Try adding 2 ingredients\r\n        for (const ing2 of filteredIngredients) {\r\n          await new Promise(resolve => setTimeout(resolve, 0)); // Allow UI updates\r\n          \r\n          const sequence2 = [ing1, ing2];\r\n          const result2 = checkSequence(seed, sequence2);\r\n          \r\n          combinationsTried++;\r\n          setSearchProgress(Math.min(99, (combinationsTried / totalCombinations) * 100));\r\n          \r\n          if (result2) {\r\n            solutions.push(result2);\r\n            if (solutions.length >= 5) break; // Limit to 5 solutions\r\n          } else if (result2 === false) {\r\n            // Calculate partial match\r\n            const partialResult = calculateStrainEffects(seed.effect, sequence2);\r\n            const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\r\n            const matchPercentage = (matches.length / selectedEffects.length) * 100;\r\n            \r\n            if (matchPercentage > bestMatchPercentage) {\r\n              bestMatchPercentage = matchPercentage;\r\n              bestMatch = {\r\n                seed,\r\n                ingredients: sequence2,\r\n                allEffects: partialResult.finalEffects,\r\n                matched: matches,\r\n                extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\r\n              };\r\n            }\r\n          }\r\n          \r\n          // Only try 3 ingredients if we haven't found solutions yet\r\n          if (solutions.length === 0) {\r\n            // Try adding 3 ingredients\r\n            for (const ing3 of filteredIngredients) {\r\n              const sequence3 = [ing1, ing2, ing3];\r\n              const result3 = checkSequence(seed, sequence3);\r\n              \r\n              combinationsTried++;\r\n              setSearchProgress(Math.min(99, (combinationsTried / totalCombinations) * 100));\r\n              \r\n              if (result3) {\r\n                solutions.push(result3);\r\n                if (solutions.length >= 5) break; // Limit to 5 solutions\r\n              } else if (result3 === false) {\r\n                // Calculate partial match\r\n                const partialResult = calculateStrainEffects(seed.effect, sequence3);\r\n                const matches = selectedEffects.filter(effect => partialResult.finalEffects.includes(effect));\r\n                const matchPercentage = (matches.length / selectedEffects.length) * 100;\r\n                \r\n                if (matchPercentage > bestMatchPercentage) {\r\n                  bestMatchPercentage = matchPercentage;\r\n                  bestMatch = {\r\n                    seed,\r\n                    ingredients: sequence3,\r\n                    allEffects: partialResult.finalEffects,\r\n                    matched: matches,\r\n                    extra: partialResult.finalEffects.filter(effect => !matches.includes(effect))\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (solutions.length >= 5) break; // Limit to 5 solutions\r\n        }\r\n        \r\n        if (solutions.length >= 5) break; // Limit to 5 solutions\r\n      }\r\n      \r\n      if (solutions.length >= 5) break; // Limit to 5 solutions\r\n    }\r\n    \r\n    // Sort solutions by least ingredients first\r\n    solutions.sort((a, b) => a.ingredients.length - b.ingredients.length);\r\n    \r\n    if (solutions.length > 0) {\r\n      setSolutionFound(true);\r\n      setBestSolution(solutions[0]);\r\n      setSearchResults(solutions);\r\n    } else if (bestMatch) {\r\n      // If no perfect solutions, show best partial match\r\n      setSolutionFound(false);\r\n      setBestSolution(bestMatch);\r\n      setSearchResults([bestMatch]);\r\n    } else {\r\n      setSolutionFound(false);\r\n      setBestSolution(null);\r\n      setSearchResults([]);\r\n    }\r\n    \r\n    setSearchProgress(100);\r\n    setIsSearching(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-xl shadow-lg p-6 mt-8 border border-gray-200\">\r\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-6 flex items-center\">\r\n        <Beaker className=\"mr-2 w-6 h-6 text-purple-500\" />\r\n        Effect Builder\r\n      </h2>\r\n\r\n      {/* Drug Type Selection */}\r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-md font-medium text-gray-700 mb-2\">Select Product Type</h3>\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          {Object.entries(drugTypes).map(([key, value]) => (\r\n            <button\r\n              key={key}\r\n              className={`p-4 rounded-lg border-2 transition-all duration-200 flex flex-col items-center justify-center gap-2\r\n                ${selectedDrugType === key \r\n                  ? 'bg-blue-50 border-blue-500 shadow-md' \r\n                  : 'bg-gray-50 border-gray-200 hover:bg-gray-100'}`}\r\n              onClick={() => setSelectedDrugType(key)}\r\n            >\r\n              <span className=\"text-3xl\">{value.emoji}</span>\r\n              <div className=\"font-medium text-center\">{value.name}</div>\r\n              <div className=\"text-xs text-gray-500 text-center\">${value.basePrice} per {value.unit}</div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Effects Selection */}\r\n      <div className=\"mb-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h3 className=\"text-md font-medium text-gray-700\">Select Desired Effects</h3>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {selectedEffects.length}/8 effects selected\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-wrap justify-between items-center mb-4\">\r\n          <div className=\"relative w-full md:w-64 mb-2 md:mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search effects...\"\r\n              value={effectSearchTerm}\r\n              onChange={(e) => setEffectSearchTerm(e.target.value)}\r\n              className=\"w-full p-2 pl-9 text-sm border rounded-md\"\r\n            />\r\n            <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n            {effectSearchTerm && (\r\n              <button \r\n                onClick={() => setEffectSearchTerm('')}\r\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2\"\r\n              >\r\n                <X className=\"w-4 h-4 text-gray-400\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"flex flex-wrap items-center gap-4\">\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-sm text-gray-600 mr-2\">Type:</span>\r\n              <div className=\"inline-flex rounded-md shadow-sm\">\r\n                <button\r\n                  onClick={() => setEffectTypeFilter('all')}\r\n                  className={`px-3 py-1 text-xs rounded-l-md border ${\r\n                    effectTypeFilter === 'all'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectTypeFilter('Ability')}\r\n                  className={`px-3 py-1 text-xs border-t border-b ${\r\n                    effectTypeFilter === 'Ability'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Ability\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectTypeFilter('Cosmetic')}\r\n                  className={`px-3 py-1 text-xs rounded-r-md border ${\r\n                    effectTypeFilter === 'Cosmetic'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Cosmetic\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-sm text-gray-600 mr-2\">Sort:</span>\r\n              <div className=\"inline-flex rounded-md shadow-sm\">\r\n                <button\r\n                  onClick={() => setEffectSortOrder('alphabetical')}\r\n                  className={`px-3 py-1 text-xs rounded-l-md border ${\r\n                    effectSortOrder === 'alphabetical'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Name\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectSortOrder('type')}\r\n                  className={`px-3 py-1 text-xs border-t border-b ${\r\n                    effectSortOrder === 'type'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Type\r\n                </button>\r\n                <button\r\n                  onClick={() => setEffectSortOrder('value')}\r\n                  className={`px-3 py-1 text-xs rounded-r-md border ${\r\n                    effectSortOrder === 'value'\r\n                      ? 'bg-purple-100 border-purple-300 text-purple-800'\r\n                      : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Value\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Selected Effects Preview */}\r\n        {selectedEffects.length > 0 && (\r\n          <div className=\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n            <div className=\"font-medium text-gray-700 mb-2\">Selected Effects:</div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {selectedEffects.map((effect) => (\r\n                <div key={effect} className=\"relative group\">\r\n                  <div className=\"flex items-center\">\r\n                    <span\r\n                      className=\"px-2 py-1 text-white rounded-l-full text-sm inline-flex items-center\"\r\n                      style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                    >\r\n                      <span>{effect}</span>\r\n                      <span className=\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\">\r\n                        {effectDetails[effect]?.type.charAt(0)}\r\n                      </span>\r\n                    </span>\r\n                    <button\r\n                      onClick={() => toggleEffect(effect)}\r\n                      className=\"bg-gray-200 hover:bg-gray-300 p-1 rounded-r-full\"\r\n                    >\r\n                      <X className=\"w-4 h-4 text-gray-600\" />\r\n                    </button>\r\n                  </div>\r\n                  {/* Tooltip - Always position below when in the selected effects area */}\r\n                  <div className=\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs top-full left-0 mt-2\">\r\n                    <div className=\"font-medium mb-1\">{effect}</div>\r\n                    <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                    <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                    <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                    <div className=\"absolute w-2 h-2 bg-gray-900 transform rotate-45 top-0 left-4 -translate-y-1\"></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Effects Grid */}\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 max-h-72 overflow-y-auto p-2 border rounded-md\">\r\n          {filteredAndSortedEffects().length > 0 ? (\r\n            filteredAndSortedEffects().map((effect, index) => {\r\n              // Determine if this is in the first row\r\n              const isInFirstFourRows = index < 16;\r\n      \r\n                return (\r\n                    <div key={effect} className=\"relative group\">\r\n                    <button\r\n                        onClick={() => toggleEffect(effect)}\r\n                        className={`w-full p-2 rounded-md text-white text-sm transition-all ${\r\n                        selectedEffects.includes(effect) \r\n                            ? 'opacity-100 ring-2 ring-white' \r\n                            : 'opacity-80 hover:opacity-100'\r\n                        }`}\r\n                        style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                        disabled={selectedEffects.length >= 8 && !selectedEffects.includes(effect)}\r\n                    >\r\n                        <div className=\"flex items-center justify-between\">\r\n                        <span>{effect}</span>\r\n                        {selectedEffects.includes(effect) && (\r\n                            <Check className=\"ml-1 w-4 h-4\" />\r\n                        )}\r\n                        <span className=\"ml-2 px-1 py-0.5 bg-white bg-opacity-20 rounded text-xs\">\r\n                            {effectDetails[effect]?.type}\r\n                        </span>\r\n                        </div>\r\n                    </button>\r\n                    {/* Tooltip - Position below for first 4 rows, above for others */}\r\n                    <div className={`absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs ${\r\n                        isInFirstFourRows ? 'top-full mt-2' : 'bottom-full mb-2'\r\n                    } left-1/2 transform -translate-x-1/2`}>\r\n                        <div className=\"font-medium mb-1\">{effect}</div>\r\n                        <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                        <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                        <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                        <div className={`absolute w-2 h-2 bg-gray-900 transform rotate-45 ${\r\n                        isInFirstFourRows ? 'top-0 -translate-y-1' : 'bottom-0 translate-y-1'\r\n                        } left-1/2 -translate-x-1/2`}></div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-span-full text-center p-4 text-gray-500\">\r\n              No effects match your search\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex gap-3 mb-6\">\r\n        <button\r\n          onClick={searchForSolutions}\r\n          className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex-1 flex items-center justify-center\"\r\n          disabled={selectedEffects.length === 0 || isSearching}\r\n        >\r\n          <Beaker className=\"mr-2 w-5 h-5\" />\r\n          Find Recipe\r\n        </button>\r\n        \r\n        <button\r\n          onClick={resetSelections}\r\n          className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 flex items-center justify-center\"\r\n          disabled={isSearching}\r\n        >\r\n          <RotateCcw className=\"mr-2 w-5 h-5\" />\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      {/* Search Progress */}\r\n      {isSearching && (\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\r\n            <span>Searching for recipes...</span>\r\n            <span>{Math.round(searchProgress)}%</span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n            <div \r\n              className=\"bg-purple-600 h-2.5 rounded-full\" \r\n              style={{ width: `${searchProgress}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Results Display */}\r\n      {searchProgress === 100 && (\r\n        <div className=\"space-y-6\">\r\n          {solutionFound ? (\r\n            <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n              <div className=\"flex items-center text-green-700 font-medium mb-2\">\r\n                <Check className=\"mr-2 w-5 h-5\" />\r\n                Perfect Match Found!\r\n              </div>\r\n              <p className=\"text-sm text-green-600 mb-2\">\r\n                We found {searchResults.length} recipe{searchResults.length !== 1 ? 's' : ''} that \r\n                will produce a strain with all your selected effects.\r\n              </p>\r\n            </div>\r\n          ) : bestSolution ? (\r\n            <div className=\"p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\r\n              <div className=\"flex items-center text-yellow-700 font-medium mb-2\">\r\n                <AlertTriangle className=\"mr-2 w-5 h-5\" />\r\n                Partial Match Found\r\n              </div>\r\n              <p className=\"text-sm text-yellow-600 mb-2\">\r\n                We found a recipe that includes {bestSolution.matched.length} out of {selectedEffects.length} \r\n                desired effects ({Math.round(calculateEffectMatchPercentage(bestSolution))}% match).\r\n              </p>\r\n            </div>\r\n          ) : searchResults.length === 0 && (\r\n            <div className=\"p-4 bg-red-50 rounded-lg border border-red-200\">\r\n              <div className=\"flex items-center text-red-700 font-medium mb-2\">\r\n                <AlertTriangle className=\"mr-2 w-5 h-5\" />\r\n                No Matches Found\r\n              </div>\r\n              <p className=\"text-sm text-red-600 mb-2\">\r\n                We couldn't find any recipes that produce a strain with your selected effects.\r\n                Try selecting fewer effects or different combinations.\r\n              </p>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Solution Cards */}\r\n          {searchResults.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-800\">Recipe Solutions</h3>\r\n              \r\n              {searchResults.map((solution, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`p-4 rounded-lg border ${\r\n                    solutionFound \r\n                      ? 'bg-green-50 border-green-200' \r\n                      : 'bg-yellow-50 border-yellow-200'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex justify-between items-start mb-3\">\r\n                    <h4 className=\"font-medium text-gray-800\">\r\n                      Recipe #{index + 1} - {solution.seed.name}\r\n                    </h4>\r\n                    <span className=\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800\">\r\n                      {Math.round(calculateEffectMatchPercentage(solution))}% Match\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {/* Recipe Steps */}\r\n                  <div className=\"space-y-3 mb-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\">\r\n                        1\r\n                      </div>\r\n                      <ArrowRight className=\"mx-2 w-4 h-4 text-gray-400\" />\r\n                      <div className=\"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\">\r\n                        <span className=\"text-xl mr-2\">{drugTypes[selectedDrugType]?.emoji || '🌱'}</span>\r\n                        <span>Start with <strong>{solution.seed.name}</strong></span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {solution.ingredients.map((ingredient, idx) => (\r\n                      <div key={idx} className=\"flex items-center\">\r\n                        <div className=\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center text-purple-800 font-medium\">\r\n                          {idx + 2}\r\n                        </div>\r\n                        <ArrowRight className=\"mx-2 w-4 h-4 text-gray-400\" />\r\n                        <div className=\"flex items-center bg-purple-50 px-3 py-1 rounded-lg border border-purple-200\">\r\n                          <span className=\"text-xl mr-2\">{ingredient.emoji || '🧪'}</span>\r\n                          <span>Add <strong>{ingredient.name}</strong></span>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Effects Result */}\r\n                  <div className=\"bg-white p-3 rounded-md border border-gray-200\">\r\n                    <div className=\"font-medium text-gray-700 mb-2\">\r\n                      This recipe will create a strain with these effects:\r\n                    </div>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {solution.allEffects.map((effect) => (\r\n                        <div key={effect} className=\"relative group\">\r\n                          <span\r\n                            className={`px-2 py-1 text-white rounded-full text-xs inline-flex items-center ${\r\n                              selectedEffects.includes(effect) \r\n                                ? 'ring-2 ring-white' \r\n                                : 'opacity-70'\r\n                            }`}\r\n                            style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                          >\r\n                            {effect}\r\n                            <span className=\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\">\r\n                              {effectDetails[effect]?.type.charAt(0)}\r\n                            </span>\r\n                            {!selectedEffects.includes(effect) && (\r\n                              <span className=\"ml-1 text-xs\">+</span>\r\n                            )}\r\n                          </span>\r\n                          {/* Tooltip */}\r\n                          <div className=\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\">\r\n                            <div className=\"font-medium mb-1\">{effect}</div>\r\n                            <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                            <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                            <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                            <div className=\"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"></div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                    \r\n                    {!solutionFound && (\r\n                      <div className=\"mt-3 text-sm\">\r\n                        <span className=\"font-medium text-yellow-700\">Missing effects: </span>\r\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                          {selectedEffects.filter(e => !solution.matched.includes(e)).map((effect) => (\r\n                            <div key={effect} className=\"relative group\">\r\n                              <span \r\n                                className=\"inline-block px-2 py-0.5 rounded-full text-xs text-white\"\r\n                                style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                              >\r\n                                {effect}\r\n                                <span className=\"ml-1 text-xs bg-white bg-opacity-20 px-1 rounded\">\r\n                                  {effectDetails[effect]?.type.charAt(0)}\r\n                                </span>\r\n                              </span>\r\n                              {/* Tooltip */}\r\n                              <div className=\"absolute z-10 invisible group-hover:visible bg-gray-900 text-white p-2 rounded-md shadow-lg w-48 text-xs bottom-full left-0 mb-2\">\r\n                                <div className=\"font-medium mb-1\">{effect}</div>\r\n                                <div className=\"text-gray-300 mb-1\">Type: {effectDetails[effect]?.type}</div>\r\n                                <div className=\"text-gray-300\">Value: {(effectDetails[effect]?.multiplier * 100).toFixed(0)}%</div>\r\n                                <div className=\"mt-1\">{effectDetails[effect]?.description}</div>\r\n                                <div className=\"absolute w-2 h-2 bg-gray-900 transform rotate-45 bottom-0 left-4 translate-y-1\"></div>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Information about how it works */}\r\n      <div className=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n        <h3 className=\"font-medium text-blue-800 mb-2\">How the Effect Builder Works</h3>\r\n        <p className=\"text-sm text-blue-700 mb-2\">\r\n          The Effect Builder attempts to find the optimal recipe that will produce a strain with your selected effects.\r\n          It searches through different seeds and ingredient combinations to find solutions that match your criteria.\r\n        </p>\r\n        <ul className=\"list-disc list-inside text-sm text-blue-700 space-y-1\">\r\n          <li>Select up to 8 desired effects for your strain</li>\r\n          <li>Choose the right drug type for your product</li>\r\n          <li>The builder will search for the best recipe to create your desired strain</li>\r\n          <li>Perfect matches include all your selected effects</li>\r\n          <li>Partial matches include some but not all selected effects</li>\r\n        </ul>\r\n        <p className=\"text-sm text-blue-700 mt-2\">\r\n          Note: Not all effect combinations are possible due to game mechanics. The builder will find the closest match possible.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EffectBuilderTab;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,SACEC,MAAM,EACNC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,aAAa,EACbC,UAAU,EACVC,CAAC,QACI,cAAc;AACrB,SAASC,aAAa,QAAQ,cAAc;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,SAAS;EACTC,WAAW;EACXC,YAAY;EACZC,SAAS;EACTC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,MAAM,CAAC;EAChE,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;EACxE,MAAM,CAACoC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjE;EACA,MAAMsC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC1B,YAAY,CAAC,CAAC2B,IAAI,CAAC,CAAC;;EAEnD;EACA,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;IACrC;IACA,IAAIC,QAAQ,GAAGL,UAAU,CAACM,MAAM,CAACC,MAAM,IACrCA,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC3B,gBAAgB,CAAC0B,WAAW,CAAC,CAAC,CAC9D,CAAC;;IAED;IACA,IAAIV,gBAAgB,KAAK,KAAK,EAAE;MAC9BO,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,MAAM;QAAA,IAAAG,qBAAA;QAAA,OAC/B,EAAAA,qBAAA,GAAAxC,aAAa,CAACqC,MAAM,CAAC,cAAAG,qBAAA,uBAArBA,qBAAA,CAAuBC,IAAI,MAAKb,gBAAgB;MAAA,CAClD,CAAC;IACH;;IAEA;IACA,IAAIF,eAAe,KAAK,MAAM,EAAE;MAC9BS,QAAQ,GAAG,CAAC,GAAGA,QAAQ,CAAC,CAACF,IAAI,CAAC,CAACS,CAAC,EAAEC,CAAC,KAAK;QAAA,IAAAC,gBAAA,EAAAC,gBAAA;QACtC,MAAMC,KAAK,GAAG,EAAAF,gBAAA,GAAA5C,aAAa,CAAC0C,CAAC,CAAC,cAAAE,gBAAA,uBAAhBA,gBAAA,CAAkBH,IAAI,KAAI,EAAE;QAC1C,MAAMM,KAAK,GAAG,EAAAF,gBAAA,GAAA7C,aAAa,CAAC2C,CAAC,CAAC,cAAAE,gBAAA,uBAAhBA,gBAAA,CAAkBJ,IAAI,KAAI,EAAE;QAC1C,OAAOK,KAAK,CAACE,aAAa,CAACD,KAAK,CAAC,IAAIL,CAAC,CAACM,aAAa,CAACL,CAAC,CAAC;MACzD,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIjB,eAAe,KAAK,OAAO,EAAE;MACtCS,QAAQ,GAAG,CAAC,GAAGA,QAAQ,CAAC,CAACF,IAAI,CAAC,CAACS,CAAC,EAAEC,CAAC,KAAK;QAAA,IAAAM,iBAAA,EAAAC,iBAAA;QACtC,MAAMC,MAAM,GAAG,EAAAF,iBAAA,GAAAjD,aAAa,CAAC0C,CAAC,CAAC,cAAAO,iBAAA,uBAAhBA,iBAAA,CAAkBG,UAAU,KAAI,CAAC;QAChD,MAAMC,MAAM,GAAG,EAAAH,iBAAA,GAAAlD,aAAa,CAAC2C,CAAC,CAAC,cAAAO,iBAAA,uBAAhBA,iBAAA,CAAkBE,UAAU,KAAI,CAAC;QAChD,OAAOC,MAAM,GAAGF,MAAM,CAAC,CAAC;MAC1B,CAAC,CAAC;IACJ;IACA;;IAEA,OAAOhB,QAAQ;EACjB,CAAC;;EAED;EACA,MAAMmB,YAAY,GAAIjB,MAAM,IAAK;IAC/B,IAAI3B,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAC,EAAE;MACpC1B,kBAAkB,CAACD,eAAe,CAAC0B,MAAM,CAACmB,CAAC,IAAIA,CAAC,KAAKlB,MAAM,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL;MACA,IAAI3B,eAAe,CAAC8C,MAAM,GAAG,CAAC,EAAE;QAC9B7C,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAE2B,MAAM,CAAC,CAAC;MAClD;IACF;IACA;IACApB,gBAAgB,CAAC,KAAK,CAAC;IACvBI,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMoC,eAAe,GAAGA,CAAA,KAAM;IAC5B9C,kBAAkB,CAAC,EAAE,CAAC;IACtBM,gBAAgB,CAAC,KAAK,CAAC;IACvBI,eAAe,CAAC,IAAI,CAAC;IACrBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,iBAAiB,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMiC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOtD,SAAS,CAACgC,MAAM,CAACuB,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK9C,gBAAgB,CAAC;EACrE,CAAC;;EAED;EACA,MAAM+C,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA,MAAMC,iBAAiB,GAAG,CACxB,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,EAC5F,cAAc,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,CAC9F;;IAED;IACA,MAAMC,uBAAuB,GAAG,CAAC,cAAc,EAAE,oBAAoB,CAAC;IACtE,MAAMC,0BAA0B,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC;IAErE,OAAO3D,WAAW,CAAC+B,MAAM,CAAC6B,UAAU,IAAI;MACtC,IAAIH,iBAAiB,CAACvB,QAAQ,CAAC0B,UAAU,CAACC,IAAI,CAAC,EAAE;QAC/C,OAAO,IAAI;MACb;MAEA,IAAIpD,gBAAgB,KAAK,MAAM,IAAIiD,uBAAuB,CAACxB,QAAQ,CAAC0B,UAAU,CAACC,IAAI,CAAC,EAAE;QACpF,OAAO,IAAI;MACb;MAEA,IAAIpD,gBAAgB,KAAK,SAAS,IAAIkD,0BAA0B,CAACzB,QAAQ,CAAC0B,UAAU,CAACC,IAAI,CAAC,EAAE;QAC1F,OAAO,IAAI;MACb;;MAEA;MACA,IAAIpD,gBAAgB,KAAK,MAAM,EAAE;QAC/B,OAAO,CAACiD,uBAAuB,CAACxB,QAAQ,CAAC0B,UAAU,CAACC,IAAI,CAAC,IAClD,CAACF,0BAA0B,CAACzB,QAAQ,CAAC0B,UAAU,CAACC,IAAI,CAAC;MAC9D;MAEA,OAAO,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAACR,IAAI,EAAES,kBAAkB,KAAK;IAClD,IAAI,CAACT,IAAI,IAAIS,kBAAkB,CAACZ,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IAE1D,MAAMa,MAAM,GAAG7D,sBAAsB,CAACmD,IAAI,CAACtB,MAAM,EAAE+B,kBAAkB,CAAC;IACtE,MAAME,YAAY,GAAGD,MAAM,CAACC,YAAY;;IAExC;IACA,MAAMC,WAAW,GAAG7D,eAAe,CAAC8D,KAAK,CAACnC,MAAM,IAAIiC,YAAY,CAAC/B,QAAQ,CAACF,MAAM,CAAC,CAAC;IAElF,IAAIkC,WAAW,EAAE;MACf,OAAO;QACLZ,IAAI;QACJtD,WAAW,EAAE+D,kBAAkB;QAC/BtC,UAAU,EAAEwC,YAAY;QACxBG,OAAO,EAAE/D,eAAe;QACxBgE,KAAK,EAAEJ,YAAY,CAAClC,MAAM,CAACC,MAAM,IAAI,CAAC3B,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAC;MACxE,CAAC;IACH;IAEA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAMsC,8BAA8B,GAAIC,QAAQ,IAAK;IACnD,IAAI,CAACA,QAAQ,EAAE,OAAO,CAAC;IAEvB,MAAMC,YAAY,GAAGD,QAAQ,CAACH,OAAO,CAACjB,MAAM;IAC5C,MAAMsB,YAAY,GAAGpE,eAAe,CAAC8C,MAAM;IAE3C,OAAQqB,YAAY,GAAGC,YAAY,GAAI,GAAG;EAC5C,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIrE,eAAe,CAAC8C,MAAM,KAAK,CAAC,EAAE;IAElCrC,cAAc,CAAC,IAAI,CAAC;IACpBF,gBAAgB,CAAC,KAAK,CAAC;IACvBI,eAAe,CAAC,IAAI,CAAC;IACrBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,iBAAiB,CAAC,CAAC,CAAC;IAEpB,MAAMuD,aAAa,GAAGtB,gBAAgB,CAAC,CAAC;IACxC,MAAMuB,mBAAmB,GAAGpB,sBAAsB,CAAC,CAAC;;IAEpD;IACA;IACA,MAAMqB,uBAAuB,GAAGF,aAAa,CAAC5C,MAAM,CAACuB,IAAI,IACvDjD,eAAe,CAAC6B,QAAQ,CAACoB,IAAI,CAACtB,MAAM,CACtC,CAAC;;IAED;IACA,MAAM8C,UAAU,GAAG,CAAC,GAAGD,uBAAuB,EAAE,GAAGF,aAAa,CAAC5C,MAAM,CAACuB,IAAI,IAC1E,CAACuB,uBAAuB,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnB,IAAI,KAAKP,IAAI,CAACO,IAAI,CACzD,CAAC,CAAC;IAEF,IAAIoB,SAAS,GAAG,EAAE;IAClB,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,mBAAmB,GAAG,CAAC;IAE3B,MAAMC,iBAAiB,GAAGN,UAAU,CAAC3B,MAAM,GAAGkC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEV,mBAAmB,CAACzB,MAAM,IAAI,CAAC,CAAC;IAC3F,IAAIoC,iBAAiB,GAAG,CAAC;;IAEzB;IACA,KAAK,MAAMjC,IAAI,IAAIwB,UAAU,EAAE;MAC7B;MACA,MAAMU,cAAc,GAAGrF,sBAAsB,CAACmD,IAAI,CAACtB,MAAM,EAAE,EAAE,CAAC;MAC9D,MAAMyD,WAAW,GAAGpF,eAAe,CAAC0B,MAAM,CAACC,MAAM,IAAIwD,cAAc,CAACvB,YAAY,CAAC/B,QAAQ,CAACF,MAAM,CAAC,CAAC;MAClG,MAAM0D,mBAAmB,GAAID,WAAW,CAACtC,MAAM,GAAG9C,eAAe,CAAC8C,MAAM,GAAI,GAAG;MAE/E,IAAIuC,mBAAmB,GAAGP,mBAAmB,EAAE;QAC7CA,mBAAmB,GAAGO,mBAAmB;QACzCR,SAAS,GAAG;UACV5B,IAAI;UACJtD,WAAW,EAAE,EAAE;UACfyB,UAAU,EAAE+D,cAAc,CAACvB,YAAY;UACvCG,OAAO,EAAEqB,WAAW;UACpBpB,KAAK,EAAEmB,cAAc,CAACvB,YAAY,CAAClC,MAAM,CAACC,MAAM,IAAI,CAACyD,WAAW,CAACvD,QAAQ,CAACF,MAAM,CAAC;QACnF,CAAC;;QAED;QACA,IAAI0D,mBAAmB,KAAK,GAAG,EAAE;UAC/BT,SAAS,CAACU,IAAI,CAACT,SAAS,CAAC;QAC3B;MACF;;MAEA;MACA,KAAK,MAAMU,IAAI,IAAIhB,mBAAmB,EAAE;QACtC,MAAM,IAAIiB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEtD,MAAME,SAAS,GAAG,CAACJ,IAAI,CAAC;QACxB,MAAMK,OAAO,GAAGnC,aAAa,CAACR,IAAI,EAAE0C,SAAS,CAAC;QAE9CT,iBAAiB,EAAE;QACnBnE,iBAAiB,CAACiE,IAAI,CAACC,GAAG,CAAC,EAAE,EAAGC,iBAAiB,GAAGH,iBAAiB,GAAI,GAAG,CAAC,CAAC;QAE9E,IAAIa,OAAO,EAAE;UACXhB,SAAS,CAACU,IAAI,CAACM,OAAO,CAAC;UACvB,IAAIhB,SAAS,CAAC9B,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;QACpC,CAAC,MAAM,IAAI8C,OAAO,KAAK,KAAK,EAAE;UAC5B;UACA,MAAMC,aAAa,GAAG/F,sBAAsB,CAACmD,IAAI,CAACtB,MAAM,EAAEgE,SAAS,CAAC;UACpE,MAAMG,OAAO,GAAG9F,eAAe,CAAC0B,MAAM,CAACC,MAAM,IAAIkE,aAAa,CAACjC,YAAY,CAAC/B,QAAQ,CAACF,MAAM,CAAC,CAAC;UAC7F,MAAMoE,eAAe,GAAID,OAAO,CAAChD,MAAM,GAAG9C,eAAe,CAAC8C,MAAM,GAAI,GAAG;UAEvE,IAAIiD,eAAe,GAAGjB,mBAAmB,EAAE;YACzCA,mBAAmB,GAAGiB,eAAe;YACrClB,SAAS,GAAG;cACV5B,IAAI;cACJtD,WAAW,EAAEgG,SAAS;cACtBvE,UAAU,EAAEyE,aAAa,CAACjC,YAAY;cACtCG,OAAO,EAAE+B,OAAO;cAChB9B,KAAK,EAAE6B,aAAa,CAACjC,YAAY,CAAClC,MAAM,CAACC,MAAM,IAAI,CAACmE,OAAO,CAACjE,QAAQ,CAACF,MAAM,CAAC;YAC9E,CAAC;UACH;QACF;;QAEA;QACA,KAAK,MAAMqE,IAAI,IAAIzB,mBAAmB,EAAE;UACtC,MAAM,IAAIiB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEtD,MAAMQ,SAAS,GAAG,CAACV,IAAI,EAAES,IAAI,CAAC;UAC9B,MAAME,OAAO,GAAGzC,aAAa,CAACR,IAAI,EAAEgD,SAAS,CAAC;UAE9Cf,iBAAiB,EAAE;UACnBnE,iBAAiB,CAACiE,IAAI,CAACC,GAAG,CAAC,EAAE,EAAGC,iBAAiB,GAAGH,iBAAiB,GAAI,GAAG,CAAC,CAAC;UAE9E,IAAImB,OAAO,EAAE;YACXtB,SAAS,CAACU,IAAI,CAACY,OAAO,CAAC;YACvB,IAAItB,SAAS,CAAC9B,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;UACpC,CAAC,MAAM,IAAIoD,OAAO,KAAK,KAAK,EAAE;YAC5B;YACA,MAAML,aAAa,GAAG/F,sBAAsB,CAACmD,IAAI,CAACtB,MAAM,EAAEsE,SAAS,CAAC;YACpE,MAAMH,OAAO,GAAG9F,eAAe,CAAC0B,MAAM,CAACC,MAAM,IAAIkE,aAAa,CAACjC,YAAY,CAAC/B,QAAQ,CAACF,MAAM,CAAC,CAAC;YAC7F,MAAMoE,eAAe,GAAID,OAAO,CAAChD,MAAM,GAAG9C,eAAe,CAAC8C,MAAM,GAAI,GAAG;YAEvE,IAAIiD,eAAe,GAAGjB,mBAAmB,EAAE;cACzCA,mBAAmB,GAAGiB,eAAe;cACrClB,SAAS,GAAG;gBACV5B,IAAI;gBACJtD,WAAW,EAAEsG,SAAS;gBACtB7E,UAAU,EAAEyE,aAAa,CAACjC,YAAY;gBACtCG,OAAO,EAAE+B,OAAO;gBAChB9B,KAAK,EAAE6B,aAAa,CAACjC,YAAY,CAAClC,MAAM,CAACC,MAAM,IAAI,CAACmE,OAAO,CAACjE,QAAQ,CAACF,MAAM,CAAC;cAC9E,CAAC;YACH;UACF;;UAEA;UACA,IAAIiD,SAAS,CAAC9B,MAAM,KAAK,CAAC,EAAE;YAC1B;YACA,KAAK,MAAMqD,IAAI,IAAI5B,mBAAmB,EAAE;cACtC,MAAM6B,SAAS,GAAG,CAACb,IAAI,EAAES,IAAI,EAAEG,IAAI,CAAC;cACpC,MAAME,OAAO,GAAG5C,aAAa,CAACR,IAAI,EAAEmD,SAAS,CAAC;cAE9ClB,iBAAiB,EAAE;cACnBnE,iBAAiB,CAACiE,IAAI,CAACC,GAAG,CAAC,EAAE,EAAGC,iBAAiB,GAAGH,iBAAiB,GAAI,GAAG,CAAC,CAAC;cAE9E,IAAIsB,OAAO,EAAE;gBACXzB,SAAS,CAACU,IAAI,CAACe,OAAO,CAAC;gBACvB,IAAIzB,SAAS,CAAC9B,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;cACpC,CAAC,MAAM,IAAIuD,OAAO,KAAK,KAAK,EAAE;gBAC5B;gBACA,MAAMR,aAAa,GAAG/F,sBAAsB,CAACmD,IAAI,CAACtB,MAAM,EAAEyE,SAAS,CAAC;gBACpE,MAAMN,OAAO,GAAG9F,eAAe,CAAC0B,MAAM,CAACC,MAAM,IAAIkE,aAAa,CAACjC,YAAY,CAAC/B,QAAQ,CAACF,MAAM,CAAC,CAAC;gBAC7F,MAAMoE,eAAe,GAAID,OAAO,CAAChD,MAAM,GAAG9C,eAAe,CAAC8C,MAAM,GAAI,GAAG;gBAEvE,IAAIiD,eAAe,GAAGjB,mBAAmB,EAAE;kBACzCA,mBAAmB,GAAGiB,eAAe;kBACrClB,SAAS,GAAG;oBACV5B,IAAI;oBACJtD,WAAW,EAAEyG,SAAS;oBACtBhF,UAAU,EAAEyE,aAAa,CAACjC,YAAY;oBACtCG,OAAO,EAAE+B,OAAO;oBAChB9B,KAAK,EAAE6B,aAAa,CAACjC,YAAY,CAAClC,MAAM,CAACC,MAAM,IAAI,CAACmE,OAAO,CAACjE,QAAQ,CAACF,MAAM,CAAC;kBAC9E,CAAC;gBACH;cACF;YACF;UACF;UAEA,IAAIiD,SAAS,CAAC9B,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;QACpC;QAEA,IAAI8B,SAAS,CAAC9B,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;MACpC;MAEA,IAAI8B,SAAS,CAAC9B,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;IACpC;;IAEA;IACA8B,SAAS,CAACrD,IAAI,CAAC,CAACS,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACrC,WAAW,CAACmD,MAAM,GAAGb,CAAC,CAACtC,WAAW,CAACmD,MAAM,CAAC;IAErE,IAAI8B,SAAS,CAAC9B,MAAM,GAAG,CAAC,EAAE;MACxBvC,gBAAgB,CAAC,IAAI,CAAC;MACtBI,eAAe,CAACiE,SAAS,CAAC,CAAC,CAAC,CAAC;MAC7B/D,gBAAgB,CAAC+D,SAAS,CAAC;IAC7B,CAAC,MAAM,IAAIC,SAAS,EAAE;MACpB;MACAtE,gBAAgB,CAAC,KAAK,CAAC;MACvBI,eAAe,CAACkE,SAAS,CAAC;MAC1BhE,gBAAgB,CAAC,CAACgE,SAAS,CAAC,CAAC;IAC/B,CAAC,MAAM;MACLtE,gBAAgB,CAAC,KAAK,CAAC;MACvBI,eAAe,CAAC,IAAI,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;IACtB;IAEAE,iBAAiB,CAAC,GAAG,CAAC;IACtBN,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEjB,OAAA;IAAK8G,SAAS,EAAC,+DAA+D;IAAAC,QAAA,gBAC5E/G,OAAA;MAAI8G,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBACzE/G,OAAA,CAACT,MAAM;QAACuH,SAAS,EAAC;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,kBAErD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGLnH,OAAA;MAAK8G,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB/G,OAAA;QAAI8G,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/EnH,OAAA;QAAK8G,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EACpClF,MAAM,CAACuF,OAAO,CAAC/G,SAAS,CAAC,CAACgH,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,kBAC1CvH,OAAA;UAEE8G,SAAS,EAAE;AACzB,kBAAkBlG,gBAAgB,KAAK0G,GAAG,GACtB,sCAAsC,GACtC,8CAA8C,EAAG;UACvDE,OAAO,EAAEA,CAAA,KAAM3G,mBAAmB,CAACyG,GAAG,CAAE;UAAAP,QAAA,gBAExC/G,OAAA;YAAM8G,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAEQ,KAAK,CAACE;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/CnH,OAAA;YAAK8G,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAEQ,KAAK,CAACvD;UAAI;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3DnH,OAAA;YAAK8G,SAAS,EAAC,mCAAmC;YAAAC,QAAA,GAAC,GAAC,EAACQ,KAAK,CAACG,SAAS,EAAC,OAAK,EAACH,KAAK,CAACI,IAAI;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GATvFG,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUF,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnH,OAAA;MAAK8G,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB/G,OAAA;QAAK8G,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrD/G,OAAA;UAAI8G,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7EnH,OAAA;UAAK8G,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GACnCvG,eAAe,CAAC8C,MAAM,EAAC,qBAC1B;QAAA;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnH,OAAA;QAAK8G,SAAS,EAAC,kDAAkD;QAAAC,QAAA,gBAC/D/G,OAAA;UAAK8G,SAAS,EAAC,sCAAsC;UAAAC,QAAA,gBACnD/G,OAAA;YACEuC,IAAI,EAAC,MAAM;YACXqF,WAAW,EAAC,mBAAmB;YAC/BL,KAAK,EAAE7G,gBAAiB;YACxBmH,QAAQ,EAAGxE,CAAC,IAAK1C,mBAAmB,CAAC0C,CAAC,CAACyE,MAAM,CAACP,KAAK,CAAE;YACrDT,SAAS,EAAC;UAA2C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACFnH,OAAA,CAACN,MAAM;YAACoH,SAAS,EAAC;UAA0E;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC9FzG,gBAAgB,iBACfV,OAAA;YACEwH,OAAO,EAAEA,CAAA,KAAM7G,mBAAmB,CAAC,EAAE,CAAE;YACvCmG,SAAS,EAAC,qDAAqD;YAAAC,QAAA,eAE/D/G,OAAA,CAACH,CAAC;cAACiH,SAAS,EAAC;YAAuB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENnH,OAAA;UAAK8G,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChD/G,OAAA;YAAK8G,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC/G,OAAA;cAAM8G,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzDnH,OAAA;cAAK8G,SAAS,EAAC,kCAAkC;cAAAC,QAAA,gBAC/C/G,OAAA;gBACEwH,OAAO,EAAEA,CAAA,KAAM7F,mBAAmB,CAAC,KAAK,CAAE;gBAC1CmF,SAAS,EAAE,yCACTpF,gBAAgB,KAAK,KAAK,GACtB,iDAAiD,GACjD,yDAAyD,EAC5D;gBAAAqF,QAAA,EACJ;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTnH,OAAA;gBACEwH,OAAO,EAAEA,CAAA,KAAM7F,mBAAmB,CAAC,SAAS,CAAE;gBAC9CmF,SAAS,EAAE,uCACTpF,gBAAgB,KAAK,SAAS,GAC1B,iDAAiD,GACjD,yDAAyD,EAC5D;gBAAAqF,QAAA,EACJ;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTnH,OAAA;gBACEwH,OAAO,EAAEA,CAAA,KAAM7F,mBAAmB,CAAC,UAAU,CAAE;gBAC/CmF,SAAS,EAAE,yCACTpF,gBAAgB,KAAK,UAAU,GAC3B,iDAAiD,GACjD,yDAAyD,EAC5D;gBAAAqF,QAAA,EACJ;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENnH,OAAA;YAAK8G,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC/G,OAAA;cAAM8G,SAAS,EAAC,4BAA4B;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzDnH,OAAA;cAAK8G,SAAS,EAAC,kCAAkC;cAAAC,QAAA,gBAC/C/G,OAAA;gBACEwH,OAAO,EAAEA,CAAA,KAAM/F,kBAAkB,CAAC,cAAc,CAAE;gBAClDqF,SAAS,EAAE,yCACTtF,eAAe,KAAK,cAAc,GAC9B,iDAAiD,GACjD,yDAAyD,EAC5D;gBAAAuF,QAAA,EACJ;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTnH,OAAA;gBACEwH,OAAO,EAAEA,CAAA,KAAM/F,kBAAkB,CAAC,MAAM,CAAE;gBAC1CqF,SAAS,EAAE,uCACTtF,eAAe,KAAK,MAAM,GACtB,iDAAiD,GACjD,yDAAyD,EAC5D;gBAAAuF,QAAA,EACJ;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTnH,OAAA;gBACEwH,OAAO,EAAEA,CAAA,KAAM/F,kBAAkB,CAAC,OAAO,CAAE;gBAC3CqF,SAAS,EAAE,yCACTtF,eAAe,KAAK,OAAO,GACvB,iDAAiD,GACjD,yDAAyD,EAC5D;gBAAAuF,QAAA,EACJ;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGL3G,eAAe,CAAC8C,MAAM,GAAG,CAAC,iBACzBtD,OAAA;QAAK8G,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACpE/G,OAAA;UAAK8G,SAAS,EAAC,gCAAgC;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvEnH,OAAA;UAAK8G,SAAS,EAAC,sBAAsB;UAAAC,QAAA,EAClCvG,eAAe,CAAC6G,GAAG,CAAElF,MAAM;YAAA,IAAA4F,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;YAAA,oBAC1BlI,OAAA;cAAkB8G,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC1C/G,OAAA;gBAAK8G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChC/G,OAAA;kBACE8G,SAAS,EAAC,sEAAsE;kBAChFqB,KAAK,EAAE;oBAAEC,eAAe,EAAEhI,YAAY,CAAC+B,MAAM,CAAC,IAAI;kBAAO,CAAE;kBAAA4E,QAAA,gBAE3D/G,OAAA;oBAAA+G,QAAA,EAAO5E;kBAAM;oBAAA6E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACrBnH,OAAA;oBAAM8G,SAAS,EAAC,kDAAkD;oBAAAC,QAAA,GAAAgB,sBAAA,GAC/DjI,aAAa,CAACqC,MAAM,CAAC,cAAA4F,sBAAA,uBAArBA,sBAAA,CAAuBxF,IAAI,CAAC8F,MAAM,CAAC,CAAC;kBAAC;oBAAArB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACPnH,OAAA;kBACEwH,OAAO,EAAEA,CAAA,KAAMpE,YAAY,CAACjB,MAAM,CAAE;kBACpC2E,SAAS,EAAC,kDAAkD;kBAAAC,QAAA,eAE5D/G,OAAA,CAACH,CAAC;oBAACiH,SAAS,EAAC;kBAAuB;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eAENnH,OAAA;gBAAK8G,SAAS,EAAC,+HAA+H;gBAAAC,QAAA,gBAC5I/G,OAAA;kBAAK8G,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAE5E;gBAAM;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChDnH,OAAA;kBAAK8G,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,GAAC,QAAM,GAAAiB,sBAAA,GAAClI,aAAa,CAACqC,MAAM,CAAC,cAAA6F,sBAAA,uBAArBA,sBAAA,CAAuBzF,IAAI;gBAAA;kBAAAyE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC7EnH,OAAA;kBAAK8G,SAAS,EAAC,eAAe;kBAAAC,QAAA,GAAC,SAAO,EAAC,CAAC,EAAAkB,sBAAA,GAAAnI,aAAa,CAACqC,MAAM,CAAC,cAAA8F,sBAAA,uBAArBA,sBAAA,CAAuB/E,UAAU,IAAG,GAAG,EAAEoF,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;gBAAA;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACnGnH,OAAA;kBAAK8G,SAAS,EAAC,MAAM;kBAAAC,QAAA,GAAAmB,sBAAA,GAAEpI,aAAa,CAACqC,MAAM,CAAC,cAAA+F,sBAAA,uBAArBA,sBAAA,CAAuBK;gBAAW;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChEnH,OAAA;kBAAK8G,SAAS,EAAC;gBAA8E;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjG,CAAC;YAAA,GAzBEhF,MAAM;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA0BX,CAAC;UAAA,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGDnH,OAAA;QAAK8G,SAAS,EAAC,qGAAqG;QAAAC,QAAA,EACjH/E,wBAAwB,CAAC,CAAC,CAACsB,MAAM,GAAG,CAAC,GACpCtB,wBAAwB,CAAC,CAAC,CAACqF,GAAG,CAAC,CAAClF,MAAM,EAAEqG,KAAK,KAAK;UAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;UAChD;UACA,MAAMC,iBAAiB,GAAGL,KAAK,GAAG,EAAE;UAElC,oBACIxI,OAAA;YAAkB8G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC5C/G,OAAA;cACIwH,OAAO,EAAEA,CAAA,KAAMpE,YAAY,CAACjB,MAAM,CAAE;cACpC2E,SAAS,EAAE,2DACXtG,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAC,GAC1B,+BAA+B,GAC/B,8BAA8B,EACjC;cACHgG,KAAK,EAAE;gBAAEC,eAAe,EAAEhI,YAAY,CAAC+B,MAAM,CAAC,IAAI;cAAO,CAAE;cAC3D2G,QAAQ,EAAEtI,eAAe,CAAC8C,MAAM,IAAI,CAAC,IAAI,CAAC9C,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAE;cAAA4E,QAAA,eAE3E/G,OAAA;gBAAK8G,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,gBAClD/G,OAAA;kBAAA+G,QAAA,EAAO5E;gBAAM;kBAAA6E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,EACpB3G,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAC,iBAC7BnC,OAAA,CAACP,KAAK;kBAACqH,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CACpC,eACDnH,OAAA;kBAAM8G,SAAS,EAAC,yDAAyD;kBAAAC,QAAA,GAAA0B,sBAAA,GACpE3I,aAAa,CAACqC,MAAM,CAAC,cAAAsG,sBAAA,uBAArBA,sBAAA,CAAuBlG;gBAAI;kBAAAyE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eAETnH,OAAA;cAAK8G,SAAS,EAAE,4GACZ+B,iBAAiB,GAAG,eAAe,GAAG,kBAAkB,sCACrB;cAAA9B,QAAA,gBACnC/G,OAAA;gBAAK8G,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAAE5E;cAAM;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChDnH,OAAA;gBAAK8G,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,GAAC,QAAM,GAAA2B,sBAAA,GAAC5I,aAAa,CAACqC,MAAM,CAAC,cAAAuG,sBAAA,uBAArBA,sBAAA,CAAuBnG,IAAI;cAAA;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7EnH,OAAA;gBAAK8G,SAAS,EAAC,eAAe;gBAAAC,QAAA,GAAC,SAAO,EAAC,CAAC,EAAA4B,sBAAA,GAAA7I,aAAa,CAACqC,MAAM,CAAC,cAAAwG,sBAAA,uBAArBA,sBAAA,CAAuBzF,UAAU,IAAG,GAAG,EAAEoF,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnGnH,OAAA;gBAAK8G,SAAS,EAAC,MAAM;gBAAAC,QAAA,GAAA6B,sBAAA,GAAE9I,aAAa,CAACqC,MAAM,CAAC,cAAAyG,sBAAA,uBAArBA,sBAAA,CAAuBL;cAAW;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChEnH,OAAA;gBAAK8G,SAAS,EAAE,oDAChB+B,iBAAiB,GAAG,sBAAsB,GAAG,wBAAwB;cACxC;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA,GAhCMhF,MAAM;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiCf,CAAC;QAEV,CAAC,CAAC,gBAEFnH,OAAA;UAAK8G,SAAS,EAAC,6CAA6C;UAAAC,QAAA,EAAC;QAE7D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnH,OAAA;MAAK8G,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B/G,OAAA;QACEwH,OAAO,EAAE3C,kBAAmB;QAC5BiC,SAAS,EAAC,2GAA2G;QACrHgC,QAAQ,EAAEtI,eAAe,CAAC8C,MAAM,KAAK,CAAC,IAAItC,WAAY;QAAA+F,QAAA,gBAEtD/G,OAAA,CAACT,MAAM;UAACuH,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAErC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETnH,OAAA;QACEwH,OAAO,EAAEjE,eAAgB;QACzBuD,SAAS,EAAC,gGAAgG;QAC1GgC,QAAQ,EAAE9H,WAAY;QAAA+F,QAAA,gBAEtB/G,OAAA,CAACR,SAAS;UAACsH,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,SAExC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLnG,WAAW,iBACVhB,OAAA;MAAK8G,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB/G,OAAA;QAAK8G,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC9D/G,OAAA;UAAA+G,QAAA,EAAM;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrCnH,OAAA;UAAA+G,QAAA,GAAOvB,IAAI,CAACuD,KAAK,CAACzH,cAAc,CAAC,EAAC,GAAC;QAAA;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACNnH,OAAA;QAAK8G,SAAS,EAAC,uCAAuC;QAAAC,QAAA,eACpD/G,OAAA;UACE8G,SAAS,EAAC,kCAAkC;UAC5CqB,KAAK,EAAE;YAAEa,KAAK,EAAE,GAAG1H,cAAc;UAAI;QAAE;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA7F,cAAc,KAAK,GAAG,iBACrBtB,OAAA;MAAK8G,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBjG,aAAa,gBACZd,OAAA;QAAK8G,SAAS,EAAC,oDAAoD;QAAAC,QAAA,gBACjE/G,OAAA;UAAK8G,SAAS,EAAC,mDAAmD;UAAAC,QAAA,gBAChE/G,OAAA,CAACP,KAAK;YAACqH,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,wBAEpC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnH,OAAA;UAAG8G,SAAS,EAAC,6BAA6B;UAAAC,QAAA,GAAC,WAChC,EAAC3F,aAAa,CAACkC,MAAM,EAAC,SAAO,EAAClC,aAAa,CAACkC,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,6DAE/E;QAAA;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,GACJjG,YAAY,gBACdlB,OAAA;QAAK8G,SAAS,EAAC,sDAAsD;QAAAC,QAAA,gBACnE/G,OAAA;UAAK8G,SAAS,EAAC,oDAAoD;UAAAC,QAAA,gBACjE/G,OAAA,CAACL,aAAa;YAACmH,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,uBAE5C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnH,OAAA;UAAG8G,SAAS,EAAC,8BAA8B;UAAAC,QAAA,GAAC,kCACV,EAAC7F,YAAY,CAACqD,OAAO,CAACjB,MAAM,EAAC,UAAQ,EAAC9C,eAAe,CAAC8C,MAAM,EAAC,mBAC5E,EAACkC,IAAI,CAACuD,KAAK,CAACtE,8BAA8B,CAACvD,YAAY,CAAC,CAAC,EAAC,WAC7E;QAAA;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,GACJ/F,aAAa,CAACkC,MAAM,KAAK,CAAC,iBAC5BtD,OAAA;QAAK8G,SAAS,EAAC,gDAAgD;QAAAC,QAAA,gBAC7D/G,OAAA;UAAK8G,SAAS,EAAC,iDAAiD;UAAAC,QAAA,gBAC9D/G,OAAA,CAACL,aAAa;YAACmH,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,oBAE5C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnH,OAAA;UAAG8G,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAGzC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN,EAGA/F,aAAa,CAACkC,MAAM,GAAG,CAAC,iBACvBtD,OAAA;QAAK8G,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB/G,OAAA;UAAI8G,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAEtE/F,aAAa,CAACiG,GAAG,CAAC,CAAC3C,QAAQ,EAAE8D,KAAK;UAAA,IAAAS,qBAAA;UAAA,oBACjCjJ,OAAA;YAEE8G,SAAS,EAAE,yBACThG,aAAa,GACT,8BAA8B,GAC9B,gCAAgC,EACnC;YAAAiG,QAAA,gBAEH/G,OAAA;cAAK8G,SAAS,EAAC,uCAAuC;cAAAC,QAAA,gBACpD/G,OAAA;gBAAI8G,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,GAAC,UAChC,EAACyB,KAAK,GAAG,CAAC,EAAC,KAAG,EAAC9D,QAAQ,CAACjB,IAAI,CAACO,IAAI;cAAA;gBAAAgD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC,eACLnH,OAAA;gBAAM8G,SAAS,EAAC,0DAA0D;gBAAAC,QAAA,GACvEvB,IAAI,CAACuD,KAAK,CAACtE,8BAA8B,CAACC,QAAQ,CAAC,CAAC,EAAC,SACxD;cAAA;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eAGNnH,OAAA;cAAK8G,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B/G,OAAA;gBAAK8G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChC/G,OAAA;kBAAK8G,SAAS,EAAC,iGAAiG;kBAAAC,QAAA,EAAC;gBAEjH;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNnH,OAAA,CAACJ,UAAU;kBAACkH,SAAS,EAAC;gBAA4B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACrDnH,OAAA;kBAAK8G,SAAS,EAAC,8EAA8E;kBAAAC,QAAA,gBAC3F/G,OAAA;oBAAM8G,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAAE,EAAAkC,qBAAA,GAAA5I,SAAS,CAACO,gBAAgB,CAAC,cAAAqI,qBAAA,uBAA3BA,qBAAA,CAA6BxB,KAAK,KAAI;kBAAI;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAClFnH,OAAA;oBAAA+G,QAAA,GAAM,aAAW,eAAA/G,OAAA;sBAAA+G,QAAA,EAASrC,QAAQ,CAACjB,IAAI,CAACO;oBAAI;sBAAAgD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1D,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,EAELzC,QAAQ,CAACvE,WAAW,CAACkH,GAAG,CAAC,CAACtD,UAAU,EAAEmF,GAAG,kBACxClJ,OAAA;gBAAe8G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAC1C/G,OAAA;kBAAK8G,SAAS,EAAC,iGAAiG;kBAAAC,QAAA,EAC7GmC,GAAG,GAAG;gBAAC;kBAAAlC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eACNnH,OAAA,CAACJ,UAAU;kBAACkH,SAAS,EAAC;gBAA4B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACrDnH,OAAA;kBAAK8G,SAAS,EAAC,8EAA8E;kBAAAC,QAAA,gBAC3F/G,OAAA;oBAAM8G,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAAEhD,UAAU,CAAC0D,KAAK,IAAI;kBAAI;oBAAAT,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAChEnH,OAAA;oBAAA+G,QAAA,GAAM,MAAI,eAAA/G,OAAA;sBAAA+G,QAAA,EAAShD,UAAU,CAACC;oBAAI;sBAAAgD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChD,CAAC;cAAA,GARE+B,GAAG;gBAAAlC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASR,CACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAGNnH,OAAA;cAAK8G,SAAS,EAAC,gDAAgD;cAAAC,QAAA,gBAC7D/G,OAAA;gBAAK8G,SAAS,EAAC,gCAAgC;gBAAAC,QAAA,EAAC;cAEhD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNnH,OAAA;gBAAK8G,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAClCrC,QAAQ,CAAC9C,UAAU,CAACyF,GAAG,CAAElF,MAAM;kBAAA,IAAAgH,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;kBAAA,oBAC9BtJ,OAAA;oBAAkB8G,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,gBAC1C/G,OAAA;sBACE8G,SAAS,EAAE,sEACTtG,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAC,GAC5B,mBAAmB,GACnB,YAAY,EACf;sBACHgG,KAAK,EAAE;wBAAEC,eAAe,EAAEhI,YAAY,CAAC+B,MAAM,CAAC,IAAI;sBAAO,CAAE;sBAAA4E,QAAA,GAE1D5E,MAAM,eACPnC,OAAA;wBAAM8G,SAAS,EAAC,kDAAkD;wBAAAC,QAAA,GAAAoC,uBAAA,GAC/DrJ,aAAa,CAACqC,MAAM,CAAC,cAAAgH,uBAAA,uBAArBA,uBAAA,CAAuB5G,IAAI,CAAC8F,MAAM,CAAC,CAAC;sBAAC;wBAAArB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAClC,CAAC,EACN,CAAC3G,eAAe,CAAC6B,QAAQ,CAACF,MAAM,CAAC,iBAChCnC,OAAA;wBAAM8G,SAAS,EAAC,cAAc;wBAAAC,QAAA,EAAC;sBAAC;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CACvC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACG,CAAC,eAEPnH,OAAA;sBAAK8G,SAAS,EAAC,kIAAkI;sBAAAC,QAAA,gBAC/I/G,OAAA;wBAAK8G,SAAS,EAAC,kBAAkB;wBAAAC,QAAA,EAAE5E;sBAAM;wBAAA6E,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,eAChDnH,OAAA;wBAAK8G,SAAS,EAAC,oBAAoB;wBAAAC,QAAA,GAAC,QAAM,GAAAqC,uBAAA,GAACtJ,aAAa,CAACqC,MAAM,CAAC,cAAAiH,uBAAA,uBAArBA,uBAAA,CAAuB7G,IAAI;sBAAA;wBAAAyE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,eAC7EnH,OAAA;wBAAK8G,SAAS,EAAC,eAAe;wBAAAC,QAAA,GAAC,SAAO,EAAC,CAAC,EAAAsC,uBAAA,GAAAvJ,aAAa,CAACqC,MAAM,CAAC,cAAAkH,uBAAA,uBAArBA,uBAAA,CAAuBnG,UAAU,IAAG,GAAG,EAAEoF,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;sBAAA;wBAAAtB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eACnGnH,OAAA;wBAAK8G,SAAS,EAAC,MAAM;wBAAAC,QAAA,GAAAuC,uBAAA,GAAExJ,aAAa,CAACqC,MAAM,CAAC,cAAAmH,uBAAA,uBAArBA,uBAAA,CAAuBf;sBAAW;wBAAAvB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,eAChEnH,OAAA;wBAAK8G,SAAS,EAAC;sBAAgF;wBAAAE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnG,CAAC;kBAAA,GAxBEhF,MAAM;oBAAA6E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAyBX,CAAC;gBAAA,CACP;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EAEL,CAACrG,aAAa,iBACbd,OAAA;gBAAK8G,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B/G,OAAA;kBAAM8G,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,EAAC;gBAAiB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACtEnH,OAAA;kBAAK8G,SAAS,EAAC,2BAA2B;kBAAAC,QAAA,EACvCvG,eAAe,CAAC0B,MAAM,CAACmB,CAAC,IAAI,CAACqB,QAAQ,CAACH,OAAO,CAAClC,QAAQ,CAACgB,CAAC,CAAC,CAAC,CAACgE,GAAG,CAAElF,MAAM;oBAAA,IAAAoH,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA;oBAAA,oBACrE1J,OAAA;sBAAkB8G,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,gBAC1C/G,OAAA;wBACE8G,SAAS,EAAC,0DAA0D;wBACpEqB,KAAK,EAAE;0BAAEC,eAAe,EAAEhI,YAAY,CAAC+B,MAAM,CAAC,IAAI;wBAAO,CAAE;wBAAA4E,QAAA,GAE1D5E,MAAM,eACPnC,OAAA;0BAAM8G,SAAS,EAAC,kDAAkD;0BAAAC,QAAA,GAAAwC,uBAAA,GAC/DzJ,aAAa,CAACqC,MAAM,CAAC,cAAAoH,uBAAA,uBAArBA,uBAAA,CAAuBhH,IAAI,CAAC8F,MAAM,CAAC,CAAC;wBAAC;0BAAArB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAClC,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,eAEPnH,OAAA;wBAAK8G,SAAS,EAAC,kIAAkI;wBAAAC,QAAA,gBAC/I/G,OAAA;0BAAK8G,SAAS,EAAC,kBAAkB;0BAAAC,QAAA,EAAE5E;wBAAM;0BAAA6E,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAChDnH,OAAA;0BAAK8G,SAAS,EAAC,oBAAoB;0BAAAC,QAAA,GAAC,QAAM,GAAAyC,uBAAA,GAAC1J,aAAa,CAACqC,MAAM,CAAC,cAAAqH,uBAAA,uBAArBA,uBAAA,CAAuBjH,IAAI;wBAAA;0BAAAyE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC7EnH,OAAA;0BAAK8G,SAAS,EAAC,eAAe;0BAAAC,QAAA,GAAC,SAAO,EAAC,CAAC,EAAA0C,uBAAA,GAAA3J,aAAa,CAACqC,MAAM,CAAC,cAAAsH,uBAAA,uBAArBA,uBAAA,CAAuBvG,UAAU,IAAG,GAAG,EAAEoF,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;wBAAA;0BAAAtB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAK,CAAC,eACnGnH,OAAA;0BAAK8G,SAAS,EAAC,MAAM;0BAAAC,QAAA,GAAA2C,uBAAA,GAAE5J,aAAa,CAACqC,MAAM,CAAC,cAAAuH,uBAAA,uBAArBA,uBAAA,CAAuBnB;wBAAW;0BAAAvB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAChEnH,OAAA;0BAAK8G,SAAS,EAAC;wBAAgF;0BAAAE,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACnG,CAAC;oBAAA,GAjBEhF,MAAM;sBAAA6E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAkBX,CAAC;kBAAA,CACP;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA,GA3GDqB,KAAK;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA4GP,CAAC;QAAA,CACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,eAGDnH,OAAA;MAAK8G,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBACpE/G,OAAA;QAAI8G,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChFnH,OAAA;QAAG8G,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAG1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJnH,OAAA;QAAI8G,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACnE/G,OAAA;UAAA+G,QAAA,EAAI;QAA8C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDnH,OAAA;UAAA+G,QAAA,EAAI;QAA2C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDnH,OAAA;UAAA+G,QAAA,EAAI;QAAyE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClFnH,OAAA;UAAA+G,QAAA,EAAI;QAAiD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DnH,OAAA;UAAA+G,QAAA,EAAI;QAAyD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACLnH,OAAA;QAAG8G,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAE1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5G,EAAA,CAnwBIN,gBAAgB;AAAA0J,EAAA,GAAhB1J,gBAAgB;AAqwBtB,eAAeA,gBAAgB;AAAC,IAAA0J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}