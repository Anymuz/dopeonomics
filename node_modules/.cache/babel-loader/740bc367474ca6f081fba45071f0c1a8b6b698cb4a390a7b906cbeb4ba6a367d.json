{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\OneDrive\\\\Documents\\\\_Technical Projects\\\\Doponomics\\\\dopeonomics\\\\src\\\\ProductionPlanCard.js\",\n  _s = $RefreshSig$();\n// Enhanced Production Plan Card Component\nimport React, { useState, useEffect } from 'react';\nimport { DollarSign, Info, Copy, Trash2, MoreHorizontal, ShoppingCart, Beaker, Check, AlertTriangle, HelpCircle, RefreshCw, ChevronsRight } from 'lucide-react';\n\n// Import the quantity modal\nimport QuantityQualityModal from './QuantityQualityModal';\n\n// Production Plan Card Component with workflow stages\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductionPlanCard = ({\n  plan,\n  isExpanded,\n  onToggleExpand,\n  onUpdatePlan,\n  onMarkAsSold,\n  onRemove,\n  onReproduce,\n  drugTypes,\n  dealers = [],\n  // Added dealers prop\n  setDailySales,\n  setDealerTransactions,\n  effectColors\n}) => {\n  _s();\n  var _drugTypes$plan$drugT6, _drugTypes$plan$drugT7;\n  const [showActionsMenu, setShowActionsMenu] = useState(false);\n  const [showQuantityModal, setShowQuantityModal] = useState(false);\n  const [showInfoTooltip, setShowInfoTooltip] = useState(false);\n\n  // State for PGA usage selection \n  const [usePGA, setUsePGA] = useState(plan.usePGA || false);\n\n  // State for purchased ingredients tracking\n  const [purchasedIngredients, setPurchasedIngredients] = useState({});\n\n  // State for cooking progress\n  const [cookingSteps, setCookingSteps] = useState([]);\n\n  // State for selling controls\n  const [sellingData, setSellingData] = useState({\n    personalQuantity: 0,\n    dealerQuantity: 0,\n    selectedDealer: '',\n    personalPrice: plan.salePrice || 0\n  });\n\n  // Determine the current stage of production\n  const [currentStage, setCurrentStage] = useState('plan'); // 'plan', 'buy', 'cook', 'sell'\n\n  // Load saved stage and progress data when component mounts\n  useEffect(() => {\n    if (plan.usePGA) {\n      setUsePGA(plan.usePGA);\n    }\n    if (plan.productionStage) {\n      setCurrentStage(plan.productionStage);\n    }\n    if (plan.purchasedIngredients) {\n      setPurchasedIngredients(plan.purchasedIngredients);\n    } else {\n      // Initialize empty tracking for all ingredients\n      const initialPurchased = {};\n      plan.totalIngredientNeeds.forEach(ingredient => {\n        initialPurchased[ingredient.name] = 0;\n      });\n      setPurchasedIngredients(initialPurchased);\n    }\n    if (plan.cookingSteps) {\n      setCookingSteps(plan.cookingSteps);\n    } else {\n      // Initialize cooking steps based on the strain's ingredients\n      const initialSteps = [];\n      // The first step is always the base seed/precursor\n      const seedIngredient = plan.totalIngredientNeeds.find(ing => ing.name.includes('Seed') || ing.name.includes('Pseudo') || ing.name.includes('Coca'));\n      if (seedIngredient) {\n        initialSteps.push({\n          id: 'seed',\n          name: seedIngredient.name,\n          completed: false\n        });\n      }\n\n      // Add other ingredients as steps (excluding the seed and packaging)\n      plan.totalIngredientNeeds.forEach(ingredient => {\n        if (!ingredient.name.includes('Seed') && !ingredient.name.includes('Pseudo') && !ingredient.name.includes('Coca') && !ingredient.name.includes('Baggie') && !ingredient.name.includes('Jar')) {\n          initialSteps.push({\n            id: ingredient.name,\n            name: ingredient.name,\n            completed: false\n          });\n        }\n      });\n      setCookingSteps(initialSteps);\n    }\n\n    // Initialize selling data\n    if (plan.sellingData) {\n      setSellingData(plan.sellingData);\n    } else {\n      setSellingData({\n        personalQuantity: 0,\n        dealerQuantity: 0,\n        selectedDealer: dealers.length > 0 ? dealers[0].id : '',\n        personalPrice: plan.salePrice || 0\n      });\n    }\n  }, [plan, dealers]);\n\n  // Handle PGA useage selection\n  const handlePGAChange = checked => {\n    setUsePGA(checked);\n\n    // Update revenue/profit from yield boosts\n    const yieldBoost = checked ? 1.2 : 1;\n    const boostedQuantity = plan.plannedQuantity * yieldBoost;\n    const newExpectedRevenue = boostedQuantity * plan.salePrice;\n    onUpdatePlan(plan.id, {\n      usePGA: checked,\n      expectedRevenue: newExpectedRevenue,\n      expectedProfit: newExpectedRevenue - plan.productionCost\n    });\n  };\n\n  // Format date to a readable string\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Get drug type emoji\n  const getDrugTypeEmoji = drugType => {\n    var _drugTypes$drugType;\n    return ((_drugTypes$drugType = drugTypes[drugType]) === null || _drugTypes$drugType === void 0 ? void 0 : _drugTypes$drugType.emoji) || 'ðŸŒ¿';\n  };\n\n  // Calculate progress percentage for the progress bar\n  const calculateProgress = () => {\n    if (plan.status === 'sold') return 100;\n    switch (currentStage) {\n      case 'plan':\n        return 0;\n      case 'buy':\n        // Calculate percentage of purchased ingredients\n        const totalNeeded = Object.values(plan.totalIngredientNeeds).reduce((sum, ing) => sum + ing.quantity, 0);\n        const totalPurchased = Object.values(purchasedIngredients).reduce((sum, qty) => sum + qty, 0);\n        return Math.min(100, Math.round(totalPurchased / totalNeeded * 25 + 0));\n      // 0-25%\n      case 'cook':\n        // Calculate percentage of completed cooking steps\n        const completedSteps = cookingSteps.filter(step => step.completed).length;\n        return Math.min(100, Math.round(completedSteps / cookingSteps.length * 25 + 25));\n      // 25-50%\n      case 'sell':\n        // Calculate based on sold quantity\n        const totalQuantity = plan.plannedQuantity;\n        const soldQuantity = sellingData.personalQuantity + sellingData.dealerQuantity;\n        return Math.min(100, Math.round(soldQuantity / totalQuantity * 25 + 50));\n      // 50-75%\n      default:\n        return 0;\n    }\n  };\n\n  // Check if all ingredients are purchased\n  const allIngredientsPurchased = () => {\n    return plan.totalIngredientNeeds.every(ingredient => (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity);\n  };\n\n  // Check if all cooking steps are completed\n  const allCookingStepsCompleted = () => {\n    return cookingSteps.every(step => step.completed);\n  };\n\n  // Check if all product is allocated for sale\n  const allProductAllocated = () => {\n    return sellingData.personalQuantity + sellingData.dealerQuantity >= plan.plannedQuantity;\n  };\n\n  // Handle toggle of purchased state for an ingredient\n  const toggleIngredientPurchased = (ingredientName, purchased) => {\n    const updatedPurchased = {\n      ...purchasedIngredients\n    };\n    if (purchased) {\n      // Mark as fully purchased\n      const ingredient = plan.totalIngredientNeeds.find(ing => ing.name === ingredientName);\n      if (ingredient) {\n        updatedPurchased[ingredientName] = ingredient.quantity;\n      }\n    } else {\n      // Mark as not purchased\n      updatedPurchased[ingredientName] = 0;\n    }\n    setPurchasedIngredients(updatedPurchased);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      purchasedIngredients: updatedPurchased,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle updating the purchased quantity for an ingredient\n  const updatePurchasedQuantity = (ingredientName, quantity) => {\n    const updatedPurchased = {\n      ...purchasedIngredients\n    };\n    updatedPurchased[ingredientName] = Math.max(0, parseInt(quantity) || 0);\n    setPurchasedIngredients(updatedPurchased);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      purchasedIngredients: updatedPurchased,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle toggling a cooking step as complete\n  const toggleCookingStep = stepId => {\n    const updatedSteps = cookingSteps.map(step => step.id === stepId ? {\n      ...step,\n      completed: !step.completed\n    } : step);\n    setCookingSteps(updatedSteps);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      cookingSteps: updatedSteps,\n      productionStage: currentStage\n    });\n  };\n\n  // Handle updating selling quantities\n  const updateSellingData = (field, value) => {\n    const updatedData = {\n      ...sellingData,\n      [field]: value\n    };\n\n    // Prevent exceeding total planned quantity\n    const totalAllocated = updatedData.personalQuantity + updatedData.dealerQuantity;\n    if (totalAllocated > plan.plannedQuantity) {\n      if (field === 'personalQuantity') {\n        updatedData.personalQuantity = plan.plannedQuantity - updatedData.dealerQuantity;\n      } else if (field === 'dealerQuantity') {\n        updatedData.dealerQuantity = plan.plannedQuantity - updatedData.personalQuantity;\n      }\n    }\n    setSellingData(updatedData);\n\n    // Save to plan state\n    onUpdatePlan(plan.id, {\n      sellingData: updatedData,\n      productionStage: currentStage\n    });\n  };\n\n  // Move to the next stage\n  const advanceStage = () => {\n    let nextStage;\n    switch (currentStage) {\n      case 'plan':\n        nextStage = 'buy';\n        break;\n      case 'buy':\n        nextStage = 'cook';\n        break;\n      case 'cook':\n        nextStage = 'sell';\n        break;\n      case 'sell':\n        // If already at sell, we're done - mark as sold\n        handleCompleteSale();\n        return;\n      default:\n        nextStage = 'plan';\n    }\n    setCurrentStage(nextStage);\n\n    // Save stage to plan state\n    onUpdatePlan(plan.id, {\n      productionStage: nextStage\n    });\n  };\n\n  // Handle completing the entire sale process\n  const handleCompleteSale = () => {\n    // Process personal sales\n    if (sellingData.personalQuantity > 0) {\n      const personalSale = {\n        id: Date.now(),\n        amount: sellingData.personalQuantity * sellingData.personalPrice,\n        expenses: 0,\n        // No additional expenses\n        profit: sellingData.personalQuantity * sellingData.personalPrice - plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity),\n        type: 'personal',\n        productType: plan.drugType,\n        units: sellingData.personalQuantity,\n        date: new Date().toISOString(),\n        strainName: plan.strainName,\n        strainId: plan.strainId\n      };\n\n      // Add to daily sales\n      if (setDailySales) {\n        setDailySales(prev => [...prev, personalSale]);\n      }\n    }\n\n    // Process dealer sales\n    if (sellingData.dealerQuantity > 0 && sellingData.selectedDealer) {\n      const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\n      if (selectedDealer) {\n        const dealerTransaction = {\n          id: Date.now(),\n          dealerId: selectedDealer.id,\n          dealerName: selectedDealer.name,\n          productType: plan.drugType,\n          inventorySupplied: sellingData.dealerQuantity,\n          cashCollected: sellingData.dealerQuantity * plan.salePrice,\n          profit: sellingData.dealerQuantity * plan.salePrice * (1 - selectedDealer.cut / 100),\n          date: new Date().toISOString(),\n          strainName: plan.strainName,\n          strainId: plan.strainId\n        };\n\n        // Add to dealer transactions\n        if (setDealerTransactions) {\n          setDealerTransactions(prev => [...prev, dealerTransaction]);\n        }\n      }\n    }\n\n    // Mark the production plan as sold\n    onMarkAsSold(plan.id);\n  };\n  const toggleActionsMenu = e => {\n    e.stopPropagation();\n    setShowActionsMenu(!showActionsMenu);\n  };\n  const handleReproduce = () => {\n    setShowQuantityModal(true);\n  };\n  const confirmReproduce = (quantity, quality) => {\n    onReproduce(plan, quantity, quality);\n    setShowQuantityModal(false);\n  };\n\n  // Render stage-specific content\n  const renderStageContent = () => {\n    var _drugTypes$plan$drugT, _drugTypes$plan$drugT2, _drugTypes$plan$drugT3, _drugTypes$plan$drugT4, _drugTypes$plan$drugT5;\n    if (plan.status === 'sold') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-green-50 border-t border-green-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center text-green-700 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: \"Production Completed and Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-green-600\",\n          children: [\"This batch was successfully produced and sold on \", formatDate(plan.dateSold), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReproduce,\n          className: \"mt-3 w-full flex items-center justify-center py-2 bg-green-100 text-green-700 hover:bg-green-200 rounded-md font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-4 h-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), \"Produce This Strain Again\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this);\n    }\n    switch (currentStage) {\n      case 'plan':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              className: \"w-4 h-4 mr-1 text-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), \"Planning Stage\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-blue-700\",\n              children: \"Set your production quantity and adjust the sale price to see how profitability changes.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: \"Production Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  value: plan.plannedQuantity,\n                  onChange: e => {\n                    const newQuantity = Math.max(0, parseInt(e.target.value) || 0);\n                    // Recalculate expectedRevenue based on new quantity\n                    const newExpectedRevenue = newQuantity * plan.salePrice;\n                    onUpdatePlan(plan.id, {\n                      plannedQuantity: newQuantity,\n                      expectedRevenue: newExpectedRevenue,\n                      expectedProfit: newExpectedRevenue - plan.productionCost\n                    });\n                  },\n                  className: \"flex-1 p-2 border rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 p-2 bg-gray-100 rounded-md text-gray-700 whitespace-nowrap\",\n                  children: ((_drugTypes$plan$drugT = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT === void 0 ? void 0 : _drugTypes$plan$drugT.unit) || 'units'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-1\",\n                children: [\"Price per \", ((_drugTypes$plan$drugT2 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT2 === void 0 ? void 0 : _drugTypes$plan$drugT2.unit) || 'unit']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"p-2 border border-r-0 rounded-l-md bg-gray-100 text-gray-700\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"1\",\n                  value: plan.salePrice,\n                  onChange: e => {\n                    const newPrice = Math.max(0, parseInt(e.target.value) || 0);\n                    // Recalculate expectedRevenue based on new price\n                    const newExpectedRevenue = plan.plannedQuantity * newPrice;\n                    onUpdatePlan(plan.id, {\n                      salePrice: newPrice,\n                      expectedRevenue: newExpectedRevenue,\n                      expectedProfit: newExpectedRevenue - plan.productionCost\n                    });\n                  },\n                  className: \"flex-1 p-2 border rounded-r-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Total Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: [\"$\", plan.productionCost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: [\"Cost per \", ((_drugTypes$plan$drugT3 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT3 === void 0 ? void 0 : _drugTypes$plan$drugT3.unit) || 'unit', \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-gray-700\",\n                  children: [\"$\", (plan.productionCost / plan.plannedQuantity).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Expected Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-blue-600\",\n                children: [\"$\", plan.expectedRevenue.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 p-3 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: \"Expected Profit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-green-600\",\n                children: [\"$\", plan.expectedProfit.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: [\"Profit per \", ((_drugTypes$plan$drugT4 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT4 === void 0 ? void 0 : _drugTypes$plan$drugT4.unit) || 'unit', \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium text-green-600\",\n                  children: [\"$\", (plan.expectedProfit / plan.plannedQuantity).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-700\",\n                children: \"Profit margin:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-green-600\",\n                children: [Math.round(plan.expectedProfit / plan.expectedRevenue * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 relative w-full h-2 bg-gray-200 rounded-full overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute top-0 left-0 h-full bg-green-500 rounded-full\",\n                style: {\n                  width: `${Math.min(100, Math.round(plan.expectedProfit / plan.expectedRevenue * 100))}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            className: \"w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronsRight, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), \"Proceed to Ingredients\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this);\n      case 'buy':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(ShoppingCart, {\n              className: \"w-4 h-4 mr-1 text-orange-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), \"Ingredients Shopping List\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-orange-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-orange-700\",\n              children: \"Check off each ingredient as you purchase them. When you have all ingredients, you can proceed to cooking.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: plan.totalIngredientNeeds.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2 p-2 bg-gray-50 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `ingredient-${idx}`,\n                checked: (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity,\n                onChange: e => toggleIngredientPurchased(ingredient.name, e.target.checked),\n                className: \"mr-2 h-4 w-4 text-blue-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `ingredient-${idx}`,\n                className: \"flex-grow text-sm font-medium\",\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: ingredient.quantity,\n                  value: purchasedIngredients[ingredient.name] || 0,\n                  onChange: e => updatePurchasedQuantity(ingredient.name, e.target.value),\n                  className: \"w-16 p-1 text-sm border rounded mr-2 text-center\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-600\",\n                  children: [\"/ \", ingredient.quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            disabled: !allIngredientsPurchased(),\n            className: `w-full py-2 rounded-md flex items-center justify-center ${allIngredientsPurchased() ? 'bg-orange-600 text-white hover:bg-orange-700' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(ChevronsRight, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), allIngredientsPurchased() ? 'Proceed to Cooking' : 'All Ingredients Required']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this);\n      case 'cook':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Beaker, {\n              className: \"w-4 h-4 mr-1 text-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this), \"Cooking Recipe\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-purple-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-purple-700\",\n              children: \"Follow the mixing sequence exactly as shown. Check off each step as you complete it.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: cookingSteps.map((step, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center mb-2 p-2 rounded ${step.completed ? 'bg-purple-50 border border-purple-200' : 'bg-gray-50'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center text-xs font-medium mr-2\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `step-${idx}`,\n                className: \"flex-grow text-sm font-medium\",\n                children: step.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `step-${idx}`,\n                checked: step.completed,\n                onChange: () => toggleCookingStep(step.id),\n                className: \"ml-auto h-5 w-5 text-purple-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            disabled: !allCookingStepsCompleted(),\n            className: `w-full py-2 rounded-md flex items-center justify-center ${allCookingStepsCompleted() ? 'bg-purple-600 text-white hover:bg-purple-700' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(ChevronsRight, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), allCookingStepsCompleted() ? 'Product Ready for Sale' : 'Complete All Cooking Steps']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this);\n      case 'sell':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-800 mb-3 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-4 h-4 mr-1 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this), \"Product Distribution\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 p-3 rounded-lg mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-green-700\",\n              children: [\"Allocate your product between personal sales and dealer distribution. Total allocated: \", sellingData.personalQuantity + sellingData.dealerQuantity, \" of \", plan.plannedQuantity, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-gray-700 mb-2\",\n                children: \"Personal Sales\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm text-gray-600 mb-1\",\n                  children: \"Quantity to Sell Personally\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  max: plan.plannedQuantity - sellingData.dealerQuantity,\n                  value: sellingData.personalQuantity,\n                  onChange: e => updateSellingData('personalQuantity', Math.max(0, parseInt(e.target.value) || 0)),\n                  className: \"w-full p-2 border rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm text-gray-600 mb-1\",\n                  children: [\"Price per \", ((_drugTypes$plan$drugT5 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT5 === void 0 ? void 0 : _drugTypes$plan$drugT5.unit) || 'unit']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  step: \"1\",\n                  value: sellingData.personalPrice,\n                  onChange: e => updateSellingData('personalPrice', Math.max(0, parseInt(e.target.value) || 0)),\n                  className: \"w-full p-2 border rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Total Revenue:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-blue-600\",\n                    children: [\"$\", (sellingData.personalQuantity * sellingData.personalPrice).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Estimated Profit:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-green-600\",\n                    children: [\"$\", (sellingData.personalQuantity * sellingData.personalPrice - plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity)).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-medium text-gray-700 mb-2\",\n                children: \"Dealer Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 17\n              }, this), dealers && dealers.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm text-gray-600 mb-1\",\n                    children: \"Select Dealer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: sellingData.selectedDealer,\n                    onChange: e => updateSellingData('selectedDealer', e.target.value),\n                    className: \"w-full p-2 border rounded-md\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select a dealer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 25\n                    }, this), dealers.filter(d => d.active).map(dealer => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: dealer.id,\n                      children: [dealer.name, \" - Cut: \", dealer.cut, \"%\"]\n                    }, dealer.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm text-gray-600 mb-1\",\n                    children: \"Quantity to Distribute\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    max: plan.plannedQuantity - sellingData.personalQuantity,\n                    value: sellingData.dealerQuantity,\n                    onChange: e => updateSellingData('dealerQuantity', Math.max(0, parseInt(e.target.value) || 0)),\n                    className: \"w-full p-2 border rounded-md\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 21\n                }, this), sellingData.selectedDealer && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-700\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Dealer Revenue:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 738,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-blue-600\",\n                      children: [\"$\", (sellingData.dealerQuantity * plan.salePrice).toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 25\n                  }, this), (() => {\n                    const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\n                    const dealerCut = selectedDealer ? selectedDealer.cut : 0;\n                    const yourProfit = sellingData.dealerQuantity * plan.salePrice * (1 - dealerCut / 100);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex justify-between\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Your Profit (after \", dealerCut, \"% cut):\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium text-green-600\",\n                        children: [\"$\", yourProfit.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 752,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 750,\n                      columnNumber: 29\n                    }, this);\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-yellow-50 p-3 rounded text-sm text-yellow-700\",\n                children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                  className: \"inline-block mr-1 w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 21\n                }, this), \"No active dealers available. Visit the Crew tab to activate dealers.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: advanceStage,\n            disabled: !allProductAllocated(),\n            className: `w-full py-2 rounded-md flex items-center justify-center ${allProductAllocated() ? 'bg-green-600 text-white hover:bg-green-700' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n              className: \"w-4 h-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this), allProductAllocated() ? 'Complete Sale' : 'Allocate All Product']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Render stage badge\n  const renderStageBadge = () => {\n    if (plan.status === 'sold') {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\",\n        children: \"Sold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this);\n    }\n    switch (currentStage) {\n      case 'plan':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800 font-medium\",\n          children: \"Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this);\n      case 'buy':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800 font-medium\",\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this);\n      case 'cook':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 font-medium\",\n          children: \"Cooking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this);\n      case 'sell':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\",\n          children: \"Selling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 font-medium\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg border border-gray-200 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 flex items-center justify-between bg-gray-50 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xl\",\n          children: getDrugTypeEmoji(plan.drugType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium text-gray-900\",\n            children: plan.strainName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this), plan.effects && plan.effects.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-1 mt-1\",\n            children: plan.effects.map((effect, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-2 py-0.5 text-white rounded-full text-xs\",\n              style: {\n                backgroundColor: effectColors && effectColors[effect] ? effectColors[effect] : '#333'\n              },\n              children: effect\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-500 mt-1\",\n            children: \"No effects data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-1\",\n            children: [\"Created: \", formatDate(plan.dateCreated)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [renderStageBadge(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleActionsMenu,\n            className: \"p-1.5 text-gray-600 hover:bg-gray-100 rounded\",\n            title: \"More actions\",\n            children: /*#__PURE__*/_jsxDEV(MoreHorizontal, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this), showActionsMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onToggleExpand();\n                  setShowActionsMenu(false);\n                },\n                className: \"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  className: \"inline h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 21\n                }, this), isExpanded ? \"Hide Details\" : \"View Details\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  handleReproduce();\n                  setShowActionsMenu(false);\n                },\n                className: \"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(Copy, {\n                  className: \"inline h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 21\n                }, this), \"Produce Again\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  onRemove(plan.id);\n                  setShowActionsMenu(false);\n                },\n                className: \"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\",\n                children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"inline h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 21\n                }, this), \"Remove\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 h-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-full ${plan.status === 'sold' ? 'bg-green-500' : currentStage === 'plan' ? 'bg-blue-500' : currentStage === 'buy' ? 'bg-orange-500' : currentStage === 'cook' ? 'bg-purple-500' : 'bg-green-500'}`,\n        style: {\n          width: `${calculateProgress()}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 7\n    }, this), showInfoTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 bg-blue-50 border-b border-blue-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n          className: \"w-4 h-4 text-blue-500 mt-0.5 mr-2 shrink-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-blue-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Production Flow:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 35\n            }, this), \" Follow these stages to complete production:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"list-decimal ml-4 space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Plan:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 21\n              }, this), \" Review production details\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Buy Ingredients:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 940,\n                columnNumber: 21\n              }, this), \" Acquire all needed supplies\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Cook:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 21\n              }, this), \" Follow the recipe sequence exactly\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sell:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 21\n              }, this), \" Distribute product personally or through dealers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInfoTooltip(false),\n            className: \"mt-1 text-blue-700 hover:text-blue-800 font-medium\",\n            children: \"Got it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 9\n    }, this), !showInfoTooltip && !plan.status === 'sold' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-4 py-1 bg-gray-50 border-b border-gray-200 flex justify-between text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentStage === 'plan' ? 'Planning Stage' : currentStage === 'buy' ? 'Buying Ingredients' : currentStage === 'cook' ? 'Cooking Process' : 'Distribution Stage'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInfoTooltip(true),\n        className: \"text-blue-500 hover:text-blue-700 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n          className: \"w-3 h-3 mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"How it works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium\",\n            children: [plan.plannedQuantity, \" \", ((_drugTypes$plan$drugT6 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT6 === void 0 ? void 0 : _drugTypes$plan$drugT6.unit) || 'units']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-medium\",\n            children: [\"$\", plan.salePrice, \" per \", ((_drugTypes$plan$drugT7 = drugTypes[plan.drugType]) === null || _drugTypes$plan$drugT7 === void 0 ? void 0 : _drugTypes$plan$drugT7.unit) || 'unit']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }, this), renderStageContent(), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium text-gray-900 mb-3\",\n        children: \"Required Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Ingredient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"divide-y divide-gray-200 bg-white\",\n            children: [plan.totalIngredientNeeds.map((ingredient, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-900\",\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: ingredient.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: [\"$\", ingredient.totalCost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\",\n                children: [\"Packaging (\", plan.packagingNeeded.type, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: plan.packagingNeeded.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-700\",\n                children: [\"$\", plan.packagingNeeded.cost.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(QuantityQualityModal, {\n      isOpen: showQuantityModal,\n      onClose: () => setShowQuantityModal(false),\n      onConfirm: confirmReproduce,\n      initialQuantity: plan.plannedQuantity,\n      drugType: plan.drugType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 835,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductionPlanCard, \"kDagqcdZoP9AB3V5uSeQM0dPEdM=\");\n_c = ProductionPlanCard;\nexport default ProductionPlanCard;\nvar _c;\n$RefreshReg$(_c, \"ProductionPlanCard\");","map":{"version":3,"names":["React","useState","useEffect","DollarSign","Info","Copy","Trash2","MoreHorizontal","ShoppingCart","Beaker","Check","AlertTriangle","HelpCircle","RefreshCw","ChevronsRight","QuantityQualityModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductionPlanCard","plan","isExpanded","onToggleExpand","onUpdatePlan","onMarkAsSold","onRemove","onReproduce","drugTypes","dealers","setDailySales","setDealerTransactions","effectColors","_s","_drugTypes$plan$drugT6","_drugTypes$plan$drugT7","showActionsMenu","setShowActionsMenu","showQuantityModal","setShowQuantityModal","showInfoTooltip","setShowInfoTooltip","usePGA","setUsePGA","purchasedIngredients","setPurchasedIngredients","cookingSteps","setCookingSteps","sellingData","setSellingData","personalQuantity","dealerQuantity","selectedDealer","personalPrice","salePrice","currentStage","setCurrentStage","productionStage","initialPurchased","totalIngredientNeeds","forEach","ingredient","name","initialSteps","seedIngredient","find","ing","includes","push","id","completed","length","handlePGAChange","checked","yieldBoost","boostedQuantity","plannedQuantity","newExpectedRevenue","expectedRevenue","expectedProfit","productionCost","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getDrugTypeEmoji","drugType","_drugTypes$drugType","emoji","calculateProgress","status","totalNeeded","Object","values","reduce","sum","quantity","totalPurchased","qty","Math","min","round","completedSteps","filter","step","totalQuantity","soldQuantity","allIngredientsPurchased","every","allCookingStepsCompleted","allProductAllocated","toggleIngredientPurchased","ingredientName","purchased","updatedPurchased","updatePurchasedQuantity","max","parseInt","toggleCookingStep","stepId","updatedSteps","map","updateSellingData","field","value","updatedData","totalAllocated","advanceStage","nextStage","handleCompleteSale","personalSale","now","amount","expenses","profit","type","productType","units","toISOString","strainName","strainId","prev","d","dealerTransaction","dealerId","dealerName","inventorySupplied","cashCollected","cut","toggleActionsMenu","e","stopPropagation","handleReproduce","confirmReproduce","quality","renderStageContent","_drugTypes$plan$drugT","_drugTypes$plan$drugT2","_drugTypes$plan$drugT3","_drugTypes$plan$drugT4","_drugTypes$plan$drugT5","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dateSold","onClick","onChange","newQuantity","target","unit","newPrice","toFixed","style","width","idx","htmlFor","disabled","active","dealer","dealerCut","yourProfit","renderStageBadge","effects","effect","backgroundColor","dateCreated","title","totalCost","packagingNeeded","cost","isOpen","onClose","onConfirm","initialQuantity","_c","$RefreshReg$"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/ProductionPlanCard.js"],"sourcesContent":["// Enhanced Production Plan Card Component\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  DollarSign,\r\n  Info,\r\n  Copy,\r\n  Trash2,\r\n  MoreHorizontal,\r\n  ShoppingCart,\r\n  Beaker,\r\n  Check,\r\n  AlertTriangle,\r\n  HelpCircle,\r\n  RefreshCw,\r\n  ChevronsRight\r\n} from 'lucide-react';\r\n\r\n// Import the quantity modal\r\nimport QuantityQualityModal from './QuantityQualityModal';\r\n\r\n// Production Plan Card Component with workflow stages\r\nconst ProductionPlanCard = ({ \r\n  plan, \r\n  isExpanded, \r\n  onToggleExpand, \r\n  onUpdatePlan, \r\n  onMarkAsSold, \r\n  onRemove,\r\n  onReproduce,\r\n  drugTypes,\r\n  dealers = [], // Added dealers prop\r\n  setDailySales,\r\n  setDealerTransactions,\r\n  effectColors\r\n}) => {\r\n  const [showActionsMenu, setShowActionsMenu] = useState(false);\r\n  const [showQuantityModal, setShowQuantityModal] = useState(false);\r\n  const [showInfoTooltip, setShowInfoTooltip] = useState(false);\r\n\r\n  // State for PGA usage selection \r\n  const [usePGA, setUsePGA] = useState(plan.usePGA || false);   \r\n\r\n  // State for purchased ingredients tracking\r\n  const [purchasedIngredients, setPurchasedIngredients] = useState({});\r\n  \r\n  // State for cooking progress\r\n  const [cookingSteps, setCookingSteps] = useState([]);\r\n\r\n  // State for selling controls\r\n  const [sellingData, setSellingData] = useState({\r\n    personalQuantity: 0,\r\n    dealerQuantity: 0,\r\n    selectedDealer: '',\r\n    personalPrice: plan.salePrice || 0\r\n  });\r\n\r\n  // Determine the current stage of production\r\n  const [currentStage, setCurrentStage] = useState('plan'); // 'plan', 'buy', 'cook', 'sell'\r\n\r\n  // Load saved stage and progress data when component mounts\r\n  useEffect(() => {\r\n    if (plan.usePGA) {\r\n      setUsePGA(plan.usePGA);\r\n    }\r\n\r\n    if (plan.productionStage) {\r\n      setCurrentStage(plan.productionStage);\r\n    }\r\n    \r\n    if (plan.purchasedIngredients) {\r\n      setPurchasedIngredients(plan.purchasedIngredients);\r\n    } else {\r\n      // Initialize empty tracking for all ingredients\r\n      const initialPurchased = {};\r\n      plan.totalIngredientNeeds.forEach(ingredient => {\r\n        initialPurchased[ingredient.name] = 0;\r\n      });\r\n      setPurchasedIngredients(initialPurchased);\r\n    }\r\n\r\n    if (plan.cookingSteps) {\r\n      setCookingSteps(plan.cookingSteps);\r\n    } else {\r\n      // Initialize cooking steps based on the strain's ingredients\r\n      const initialSteps = [];\r\n      // The first step is always the base seed/precursor\r\n      const seedIngredient = plan.totalIngredientNeeds.find(ing => \r\n        ing.name.includes('Seed') || ing.name.includes('Pseudo') || ing.name.includes('Coca')\r\n      );\r\n      \r\n      if (seedIngredient) {\r\n        initialSteps.push({\r\n          id: 'seed',\r\n          name: seedIngredient.name,\r\n          completed: false\r\n        });\r\n      }\r\n\r\n      // Add other ingredients as steps (excluding the seed and packaging)\r\n      plan.totalIngredientNeeds.forEach(ingredient => {\r\n        if (!ingredient.name.includes('Seed') && \r\n            !ingredient.name.includes('Pseudo') && \r\n            !ingredient.name.includes('Coca') &&\r\n            !ingredient.name.includes('Baggie') && \r\n            !ingredient.name.includes('Jar')) {\r\n          initialSteps.push({\r\n            id: ingredient.name,\r\n            name: ingredient.name,\r\n            completed: false\r\n          });\r\n        }\r\n      });\r\n      \r\n      setCookingSteps(initialSteps);\r\n    }\r\n\r\n    // Initialize selling data\r\n    if (plan.sellingData) {\r\n      setSellingData(plan.sellingData);\r\n    } else {\r\n      setSellingData({\r\n        personalQuantity: 0,\r\n        dealerQuantity: 0,\r\n        selectedDealer: dealers.length > 0 ? dealers[0].id : '',\r\n        personalPrice: plan.salePrice || 0\r\n      });\r\n    }\r\n  }, [plan, dealers]);\r\n\r\n  // Handle PGA useage selection\r\n  const handlePGAChange = (checked) => {\r\n    setUsePGA(checked);\r\n\r\n    // Update revenue/profit from yield boosts\r\n    const yieldBoost = checked ? 1.2 : 1;\r\n    const boostedQuantity = plan.plannedQuantity * yieldBoost;\r\n    const newExpectedRevenue = boostedQuantity * plan.salePrice;\r\n\r\n    onUpdatePlan(plan.id, {\r\n      usePGA: checked,\r\n      expectedRevenue: newExpectedRevenue,\r\n      expectedProfit: newExpectedRevenue - plan.productionCost\r\n    });\r\n  };\r\n\r\n  // Format date to a readable string\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  // Get drug type emoji\r\n  const getDrugTypeEmoji = (drugType) => {\r\n    return drugTypes[drugType]?.emoji || 'ðŸŒ¿';\r\n  };\r\n  \r\n  // Calculate progress percentage for the progress bar\r\n  const calculateProgress = () => {\r\n    if (plan.status === 'sold') return 100;\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return 0;\r\n      case 'buy':\r\n        // Calculate percentage of purchased ingredients\r\n        const totalNeeded = Object.values(plan.totalIngredientNeeds).reduce((sum, ing) => sum + ing.quantity, 0);\r\n        const totalPurchased = Object.values(purchasedIngredients).reduce((sum, qty) => sum + qty, 0);\r\n        return Math.min(100, Math.round((totalPurchased / totalNeeded) * 25 + 0)); // 0-25%\r\n      case 'cook':\r\n        // Calculate percentage of completed cooking steps\r\n        const completedSteps = cookingSteps.filter(step => step.completed).length;\r\n        return Math.min(100, Math.round((completedSteps / cookingSteps.length) * 25 + 25)); // 25-50%\r\n      case 'sell':\r\n        // Calculate based on sold quantity\r\n        const totalQuantity = plan.plannedQuantity;\r\n        const soldQuantity = sellingData.personalQuantity + sellingData.dealerQuantity;\r\n        return Math.min(100, Math.round((soldQuantity / totalQuantity) * 25 + 50)); // 50-75%\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  // Check if all ingredients are purchased\r\n  const allIngredientsPurchased = () => {\r\n    return plan.totalIngredientNeeds.every(ingredient => \r\n      (purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity\r\n    );\r\n  };\r\n\r\n  // Check if all cooking steps are completed\r\n  const allCookingStepsCompleted = () => {\r\n    return cookingSteps.every(step => step.completed);\r\n  };\r\n\r\n  // Check if all product is allocated for sale\r\n  const allProductAllocated = () => {\r\n    return (sellingData.personalQuantity + sellingData.dealerQuantity) >= plan.plannedQuantity;\r\n  };\r\n\r\n  // Handle toggle of purchased state for an ingredient\r\n  const toggleIngredientPurchased = (ingredientName, purchased) => {\r\n    const updatedPurchased = { ...purchasedIngredients };\r\n    \r\n    if (purchased) {\r\n      // Mark as fully purchased\r\n      const ingredient = plan.totalIngredientNeeds.find(ing => ing.name === ingredientName);\r\n      if (ingredient) {\r\n        updatedPurchased[ingredientName] = ingredient.quantity;\r\n      }\r\n    } else {\r\n      // Mark as not purchased\r\n      updatedPurchased[ingredientName] = 0;\r\n    }\r\n    \r\n    setPurchasedIngredients(updatedPurchased);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      purchasedIngredients: updatedPurchased,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle updating the purchased quantity for an ingredient\r\n  const updatePurchasedQuantity = (ingredientName, quantity) => {\r\n    const updatedPurchased = { ...purchasedIngredients };\r\n    updatedPurchased[ingredientName] = Math.max(0, parseInt(quantity) || 0);\r\n    \r\n    setPurchasedIngredients(updatedPurchased);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      purchasedIngredients: updatedPurchased,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle toggling a cooking step as complete\r\n  const toggleCookingStep = (stepId) => {\r\n    const updatedSteps = cookingSteps.map(step => \r\n      step.id === stepId ? { ...step, completed: !step.completed } : step\r\n    );\r\n    \r\n    setCookingSteps(updatedSteps);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      cookingSteps: updatedSteps,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Handle updating selling quantities\r\n  const updateSellingData = (field, value) => {\r\n    const updatedData = { ...sellingData, [field]: value };\r\n    \r\n    // Prevent exceeding total planned quantity\r\n    const totalAllocated = updatedData.personalQuantity + updatedData.dealerQuantity;\r\n    if (totalAllocated > plan.plannedQuantity) {\r\n      if (field === 'personalQuantity') {\r\n        updatedData.personalQuantity = plan.plannedQuantity - updatedData.dealerQuantity;\r\n      } else if (field === 'dealerQuantity') {\r\n        updatedData.dealerQuantity = plan.plannedQuantity - updatedData.personalQuantity;\r\n      }\r\n    }\r\n    \r\n    setSellingData(updatedData);\r\n    \r\n    // Save to plan state\r\n    onUpdatePlan(plan.id, {\r\n      sellingData: updatedData,\r\n      productionStage: currentStage\r\n    });\r\n  };\r\n\r\n  // Move to the next stage\r\n  const advanceStage = () => {\r\n    let nextStage;\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        nextStage = 'buy';\r\n        break;\r\n      case 'buy':\r\n        nextStage = 'cook';\r\n        break;\r\n      case 'cook':\r\n        nextStage = 'sell';\r\n        break;\r\n      case 'sell':\r\n        // If already at sell, we're done - mark as sold\r\n        handleCompleteSale();\r\n        return;\r\n      default:\r\n        nextStage = 'plan';\r\n    }\r\n    \r\n    setCurrentStage(nextStage);\r\n    \r\n    // Save stage to plan state\r\n    onUpdatePlan(plan.id, {\r\n      productionStage: nextStage\r\n    });\r\n  };\r\n\r\n  // Handle completing the entire sale process\r\n  const handleCompleteSale = () => {\r\n    // Process personal sales\r\n    if (sellingData.personalQuantity > 0) {\r\n      const personalSale = {\r\n        id: Date.now(),\r\n        amount: sellingData.personalQuantity * sellingData.personalPrice,\r\n        expenses: 0, // No additional expenses\r\n        profit: sellingData.personalQuantity * sellingData.personalPrice - \r\n                (plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity)),\r\n        type: 'personal',\r\n        productType: plan.drugType,\r\n        units: sellingData.personalQuantity,\r\n        date: new Date().toISOString(),\r\n        strainName: plan.strainName,\r\n        strainId: plan.strainId\r\n      };\r\n      \r\n      // Add to daily sales\r\n      if (setDailySales) {\r\n        setDailySales(prev => [...prev, personalSale]);\r\n      }\r\n    }\r\n    \r\n    // Process dealer sales\r\n    if (sellingData.dealerQuantity > 0 && sellingData.selectedDealer) {\r\n      const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\r\n      \r\n      if (selectedDealer) {\r\n        const dealerTransaction = {\r\n          id: Date.now(),\r\n          dealerId: selectedDealer.id,\r\n          dealerName: selectedDealer.name,\r\n          productType: plan.drugType,\r\n          inventorySupplied: sellingData.dealerQuantity,\r\n          cashCollected: sellingData.dealerQuantity * plan.salePrice,\r\n          profit: sellingData.dealerQuantity * plan.salePrice * (1 - selectedDealer.cut / 100),\r\n          date: new Date().toISOString(),\r\n          strainName: plan.strainName,\r\n          strainId: plan.strainId\r\n        };\r\n        \r\n        // Add to dealer transactions\r\n        if (setDealerTransactions) {\r\n          setDealerTransactions(prev => [...prev, dealerTransaction]);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Mark the production plan as sold\r\n    onMarkAsSold(plan.id);\r\n  };\r\n\r\n  const toggleActionsMenu = (e) => {\r\n    e.stopPropagation();\r\n    setShowActionsMenu(!showActionsMenu);\r\n  };\r\n\r\n  const handleReproduce = () => {\r\n    setShowQuantityModal(true);\r\n  };\r\n\r\n  const confirmReproduce = (quantity, quality) => {\r\n    onReproduce(plan, quantity, quality);\r\n    setShowQuantityModal(false);\r\n  };\r\n\r\n  // Render stage-specific content\r\n  const renderStageContent = () => {\r\n    if (plan.status === 'sold') {\r\n      return (\r\n        <div className=\"p-4 bg-green-50 border-t border-green-200\">\r\n          <div className=\"flex items-center text-green-700 mb-2\">\r\n            <Check className=\"w-5 h-5 mr-2\" />\r\n            <span className=\"font-medium\">Production Completed and Sold</span>\r\n          </div>\r\n          <p className=\"text-sm text-green-600\">\r\n            This batch was successfully produced and sold on {formatDate(plan.dateSold)}.\r\n          </p>\r\n          <button\r\n            onClick={handleReproduce}\r\n            className=\"mt-3 w-full flex items-center justify-center py-2 bg-green-100 text-green-700 hover:bg-green-200 rounded-md font-medium\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Produce This Strain Again\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <ShoppingCart className=\"w-4 h-4 mr-1 text-blue-500\" />\r\n              Planning Stage\r\n            </h3>\r\n            \r\n            <div className=\"bg-blue-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-blue-700\">\r\n                Set your production quantity and adjust the sale price to see how profitability changes.\r\n              </p>\r\n            </div>\r\n            \r\n            {/* Quantity and Price Controls */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Production Quantity\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    value={plan.plannedQuantity}\r\n                    onChange={(e) => {\r\n                      const newQuantity = Math.max(0, parseInt(e.target.value) || 0);\r\n                      // Recalculate expectedRevenue based on new quantity\r\n                      const newExpectedRevenue = newQuantity * plan.salePrice;\r\n                      onUpdatePlan(plan.id, { \r\n                        plannedQuantity: newQuantity,\r\n                        expectedRevenue: newExpectedRevenue,\r\n                        expectedProfit: newExpectedRevenue - plan.productionCost\r\n                      });\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-md\"\r\n                  />\r\n                  <span className=\"ml-2 p-2 bg-gray-100 rounded-md text-gray-700 whitespace-nowrap\">\r\n                    {drugTypes[plan.drugType]?.unit || 'units'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Price per {drugTypes[plan.drugType]?.unit || 'unit'}\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <span className=\"p-2 border border-r-0 rounded-l-md bg-gray-100 text-gray-700\">$</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"1\"\r\n                    value={plan.salePrice}\r\n                    onChange={(e) => {\r\n                      const newPrice = Math.max(0, parseInt(e.target.value) || 0);\r\n                      // Recalculate expectedRevenue based on new price\r\n                      const newExpectedRevenue = plan.plannedQuantity * newPrice;\r\n                      onUpdatePlan(plan.id, { \r\n                        salePrice: newPrice,\r\n                        expectedRevenue: newExpectedRevenue,\r\n                        expectedProfit: newExpectedRevenue - plan.productionCost\r\n                      });\r\n                    }}\r\n                    className=\"flex-1 p-2 border rounded-r-md\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Financial Summary */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\">\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Total Cost</div>\r\n                <div className=\"text-lg font-semibold\">${plan.productionCost.toFixed(2)}</div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  Cost per {drugTypes[plan.drugType]?.unit || 'unit'}: \r\n                  <span className=\"font-medium text-gray-700\">\r\n                    ${(plan.productionCost / plan.plannedQuantity).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Expected Revenue</div>\r\n                <div className=\"text-lg font-semibold text-blue-600\">${plan.expectedRevenue.toFixed(2)}</div>\r\n              </div>\r\n              <div className=\"bg-gray-50 p-3 rounded\">\r\n                <div className=\"text-sm font-medium text-gray-600\">Expected Profit</div>\r\n                <div className=\"text-lg font-semibold text-green-600\">${plan.expectedProfit.toFixed(2)}</div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  Profit per {drugTypes[plan.drugType]?.unit || 'unit'}: \r\n                  <span className=\"font-medium text-green-600\">\r\n                    ${(plan.expectedProfit / plan.plannedQuantity).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Profit Margin Display */}\r\n            <div className=\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n              <div className=\"flex justify-between items-center text-sm\">\r\n                <span className=\"text-gray-700\">Profit margin:</span>\r\n                <span className=\"font-medium text-green-600\">\r\n                  {Math.round((plan.expectedProfit / plan.expectedRevenue) * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-2 relative w-full h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                <div \r\n                  className=\"absolute top-0 left-0 h-full bg-green-500 rounded-full\"\r\n                  style={{ width: `${Math.min(100, Math.round((plan.expectedProfit / plan.expectedRevenue) * 100))}%` }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              className=\"w-full py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center justify-center\"\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              Proceed to Ingredients\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'buy':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <ShoppingCart className=\"w-4 h-4 mr-1 text-orange-500\" />\r\n              Ingredients Shopping List\r\n            </h3>\r\n            \r\n            <div className=\"bg-orange-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-orange-700\">\r\n                Check off each ingredient as you purchase them. When you have all ingredients, you can proceed to cooking.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              {plan.totalIngredientNeeds.map((ingredient, idx) => (\r\n                <div key={idx} className=\"flex items-center mb-2 p-2 bg-gray-50 rounded\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`ingredient-${idx}`}\r\n                    checked={(purchasedIngredients[ingredient.name] || 0) >= ingredient.quantity}\r\n                    onChange={(e) => toggleIngredientPurchased(ingredient.name, e.target.checked)}\r\n                    className=\"mr-2 h-4 w-4 text-blue-600\"\r\n                  />\r\n                  <label htmlFor={`ingredient-${idx}`} className=\"flex-grow text-sm font-medium\">\r\n                    {ingredient.name}\r\n                  </label>\r\n                  \r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"0\"\r\n                      max={ingredient.quantity}\r\n                      value={purchasedIngredients[ingredient.name] || 0}\r\n                      onChange={(e) => updatePurchasedQuantity(ingredient.name, e.target.value)}\r\n                      className=\"w-16 p-1 text-sm border rounded mr-2 text-center\"\r\n                    />\r\n                    <span className=\"text-sm text-gray-600\">/ {ingredient.quantity}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allIngredientsPurchased()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allIngredientsPurchased()\r\n                  ? 'bg-orange-600 text-white hover:bg-orange-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              {allIngredientsPurchased() ? 'Proceed to Cooking' : 'All Ingredients Required'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'cook':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <Beaker className=\"w-4 h-4 mr-1 text-purple-500\" />\r\n              Cooking Recipe\r\n            </h3>\r\n            \r\n            <div className=\"bg-purple-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-purple-700\">\r\n                Follow the mixing sequence exactly as shown. Check off each step as you complete it.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              {cookingSteps.map((step, idx) => (\r\n                <div \r\n                  key={idx} \r\n                  className={`flex items-center mb-2 p-2 rounded ${\r\n                    step.completed ? 'bg-purple-50 border border-purple-200' : 'bg-gray-50'\r\n                  }`}\r\n                >\r\n                  <div className=\"w-6 h-6 rounded-full bg-purple-100 text-purple-800 flex items-center justify-center text-xs font-medium mr-2\">\r\n                    {idx + 1}\r\n                  </div>\r\n                  \r\n                  <label htmlFor={`step-${idx}`} className=\"flex-grow text-sm font-medium\">\r\n                    {step.name}\r\n                  </label>\r\n                  \r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`step-${idx}`}\r\n                    checked={step.completed}\r\n                    onChange={() => toggleCookingStep(step.id)}\r\n                    className=\"ml-auto h-5 w-5 text-purple-600\"\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allCookingStepsCompleted()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allCookingStepsCompleted()\r\n                  ? 'bg-purple-600 text-white hover:bg-purple-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4 mr-1\" />\r\n              {allCookingStepsCompleted() ? 'Product Ready for Sale' : 'Complete All Cooking Steps'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      case 'sell':\r\n        return (\r\n          <div className=\"p-4 border-t border-gray-200\">\r\n            <h3 className=\"font-medium text-gray-800 mb-3 flex items-center\">\r\n              <DollarSign className=\"w-4 h-4 mr-1 text-green-500\" />\r\n              Product Distribution\r\n            </h3>\r\n            \r\n            <div className=\"bg-green-50 p-3 rounded-lg mb-4\">\r\n              <p className=\"text-sm text-green-700\">\r\n                Allocate your product between personal sales and dealer distribution. \r\n                Total allocated: {sellingData.personalQuantity + sellingData.dealerQuantity} of {plan.plannedQuantity}.\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n              {/* Personal Sales Section */}\r\n              <div className=\"border border-gray-200 rounded-lg p-3\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Personal Sales</h4>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm text-gray-600 mb-1\">Quantity to Sell Personally</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max={plan.plannedQuantity - sellingData.dealerQuantity}\r\n                    value={sellingData.personalQuantity}\r\n                    onChange={(e) => updateSellingData('personalQuantity', Math.max(0, parseInt(e.target.value) || 0))}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <label className=\"block text-sm text-gray-600 mb-1\">Price per {drugTypes[plan.drugType]?.unit || 'unit'}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"1\"\r\n                    value={sellingData.personalPrice}\r\n                    onChange={(e) => updateSellingData('personalPrice', Math.max(0, parseInt(e.target.value) || 0))}\r\n                    className=\"w-full p-2 border rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"text-sm text-gray-700\">\r\n                  <div className=\"flex justify-between mb-1\">\r\n                    <span>Total Revenue:</span>\r\n                    <span className=\"font-medium text-blue-600\">\r\n                      ${(sellingData.personalQuantity * sellingData.personalPrice).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Estimated Profit:</span>\r\n                    <span className=\"font-medium text-green-600\">\r\n                      ${((sellingData.personalQuantity * sellingData.personalPrice) - \r\n                         (plan.productionCost * (sellingData.personalQuantity / plan.plannedQuantity))).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Dealer Assignment Section */}\r\n              <div className=\"border border-gray-200 rounded-lg p-3\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Dealer Assignment</h4>\r\n                \r\n                {dealers && dealers.length > 0 ? (\r\n                  <>\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"block text-sm text-gray-600 mb-1\">Select Dealer</label>\r\n                      <select\r\n                        value={sellingData.selectedDealer}\r\n                        onChange={(e) => updateSellingData('selectedDealer', e.target.value)}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                      >\r\n                        <option value=\"\">Select a dealer</option>\r\n                        {dealers.filter(d => d.active).map(dealer => (\r\n                          <option key={dealer.id} value={dealer.id}>\r\n                            {dealer.name} - Cut: {dealer.cut}%\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-3\">\r\n                      <label className=\"block text-sm text-gray-600 mb-1\">Quantity to Distribute</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max={plan.plannedQuantity - sellingData.personalQuantity}\r\n                        value={sellingData.dealerQuantity}\r\n                        onChange={(e) => updateSellingData('dealerQuantity', Math.max(0, parseInt(e.target.value) || 0))}\r\n                        className=\"w-full p-2 border rounded-md\"\r\n                      />\r\n                    </div>\r\n                    \r\n                    {sellingData.selectedDealer && (\r\n                      <div className=\"text-sm text-gray-700\">\r\n                        <div className=\"flex justify-between mb-1\">\r\n                          <span>Dealer Revenue:</span>\r\n                          <span className=\"font-medium text-blue-600\">\r\n                            ${(sellingData.dealerQuantity * plan.salePrice).toFixed(2)}\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        {(() => {\r\n                          const selectedDealer = dealers.find(d => d.id === parseInt(sellingData.selectedDealer));\r\n                          const dealerCut = selectedDealer ? selectedDealer.cut : 0;\r\n                          const yourProfit = (sellingData.dealerQuantity * plan.salePrice) * (1 - dealerCut / 100);\r\n                          \r\n                          return (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Your Profit (after {dealerCut}% cut):</span>\r\n                              <span className=\"font-medium text-green-600\">\r\n                                ${yourProfit.toFixed(2)}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <div className=\"bg-yellow-50 p-3 rounded text-sm text-yellow-700\">\r\n                    <AlertTriangle className=\"inline-block mr-1 w-4 h-4\" />\r\n                    No active dealers available. Visit the Crew tab to activate dealers.\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <button \r\n              onClick={advanceStage}\r\n              disabled={!allProductAllocated()}\r\n              className={`w-full py-2 rounded-md flex items-center justify-center ${\r\n                allProductAllocated()\r\n                  ? 'bg-green-600 text-white hover:bg-green-700'\r\n                  : 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <DollarSign className=\"w-4 h-4 mr-1\" />\r\n              {allProductAllocated() ? 'Complete Sale' : 'Allocate All Product'}\r\n            </button>\r\n          </div>\r\n        );\r\n        \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Render stage badge\r\n  const renderStageBadge = () => {\r\n    if (plan.status === 'sold') {\r\n      return (\r\n        <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\">\r\n          Sold\r\n        </span>\r\n      );\r\n    }\r\n    \r\n    switch (currentStage) {\r\n      case 'plan':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800 font-medium\">\r\n            Planning\r\n          </span>\r\n        );\r\n      case 'buy':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800 font-medium\">\r\n            Ingredients\r\n          </span>\r\n        );\r\n      case 'cook':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800 font-medium\">\r\n            Cooking\r\n          </span>\r\n        );\r\n      case 'sell':\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800 font-medium\">\r\n            Selling\r\n          </span>\r\n        );\r\n      default:\r\n        return (\r\n          <span className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 font-medium\">\r\n            In Progress\r\n          </span>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\r\n      {/* Header */}\r\n      <div className=\"p-4 flex items-center justify-between bg-gray-50 border-b border-gray-200\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <span className=\"text-xl\">{getDrugTypeEmoji(plan.drugType)}</span>\r\n          <div>\r\n            <h3 className=\"font-medium text-gray-900\">{plan.strainName}</h3>\r\n            {plan.effects && plan.effects.length > 0 ? (\r\n              <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                {plan.effects.map((effect, idx) => (\r\n                  <span\r\n                    key={idx}\r\n                    className=\"px-2 py-0.5 text-white rounded-full text-xs\"\r\n                    style={{ backgroundColor: effectColors && effectColors[effect] ? effectColors[effect] : '#333' }}\r\n                  >\r\n                    {effect}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-xs text-gray-500 mt-1\">No effects data available</p>\r\n            )}\r\n            <p className=\"text-sm text-gray-500 mt-1\">\r\n              Created: {formatDate(plan.dateCreated)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2\">\r\n          {renderStageBadge()}\r\n          \r\n          {/* More Actions Menu Toggle */}\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={toggleActionsMenu}\r\n              className=\"p-1.5 text-gray-600 hover:bg-gray-100 rounded\"\r\n              title=\"More actions\"\r\n            >\r\n              <MoreHorizontal className=\"h-5 w-5\" />\r\n            </button>\r\n            \r\n            {/* Dropdown Menu */}\r\n            {showActionsMenu && (\r\n              <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\r\n                <div className=\"py-1\">\r\n                  <button\r\n                    onClick={() => {\r\n                      onToggleExpand();\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    <Info className=\"inline h-4 w-4 mr-2\" />\r\n                    {isExpanded ? \"Hide Details\" : \"View Details\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handleReproduce();\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    <Copy className=\"inline h-4 w-4 mr-2\" />\r\n                    Produce Again\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      onRemove(plan.id);\r\n                      setShowActionsMenu(false);\r\n                    }}\r\n                    className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\r\n                  >\r\n                    <Trash2 className=\"inline h-4 w-4 mr-2\" />\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"bg-gray-100 h-2\">\r\n        <div \r\n          className={`h-full ${\r\n            plan.status === 'sold' ? 'bg-green-500' :\r\n            currentStage === 'plan' ? 'bg-blue-500' :\r\n            currentStage === 'buy' ? 'bg-orange-500' :\r\n            currentStage === 'cook' ? 'bg-purple-500' :\r\n            'bg-green-500'\r\n          }`}\r\n          style={{ width: `${calculateProgress()}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      {/* First-time User Tooltip (shown only when info icon is clicked) */}\r\n      {showInfoTooltip && (\r\n        <div className=\"p-2 bg-blue-50 border-b border-blue-200\">\r\n          <div className=\"flex items-start\">\r\n            <HelpCircle className=\"w-4 h-4 text-blue-500 mt-0.5 mr-2 shrink-0\" />\r\n            <div className=\"text-xs text-blue-700\">\r\n              <p className=\"mb-1\"><strong>Production Flow:</strong> Follow these stages to complete production:</p>\r\n              <ol className=\"list-decimal ml-4 space-y-1\">\r\n                <li><strong>Plan:</strong> Review production details</li>\r\n                <li><strong>Buy Ingredients:</strong> Acquire all needed supplies</li>\r\n                <li><strong>Cook:</strong> Follow the recipe sequence exactly</li>\r\n                <li><strong>Sell:</strong> Distribute product personally or through dealers</li>\r\n              </ol>\r\n              <button \r\n                onClick={() => setShowInfoTooltip(false)}\r\n                className=\"mt-1 text-blue-700 hover:text-blue-800 font-medium\"\r\n              >\r\n                Got it\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Production Stage Info Button */}\r\n      {!showInfoTooltip && !plan.status === 'sold' && (\r\n        <div className=\"px-4 py-1 bg-gray-50 border-b border-gray-200 flex justify-between text-xs text-gray-500\">\r\n          <span>\r\n            {currentStage === 'plan' ? 'Planning Stage' : \r\n             currentStage === 'buy' ? 'Buying Ingredients' : \r\n             currentStage === 'cook' ? 'Cooking Process' : \r\n             'Distribution Stage'}\r\n          </span>\r\n          <button \r\n            onClick={() => setShowInfoTooltip(true)}\r\n            className=\"text-blue-500 hover:text-blue-700 flex items-center\"\r\n          >\r\n            <HelpCircle className=\"w-3 h-3 mr-1\" />\r\n            <span>How it works</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quick Info Section */}\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <div className=\"text-sm text-gray-500\">Quantity</div>\r\n            <div className=\"text-lg font-medium\">{plan.plannedQuantity} {drugTypes[plan.drugType]?.unit || 'units'}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-sm text-gray-500\">Price</div>\r\n            <div className=\"text-lg font-medium\">${plan.salePrice} per {drugTypes[plan.drugType]?.unit || 'unit'}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stage-specific Content */}\r\n      {renderStageContent()}\r\n\r\n      {/* Expanded Details */}\r\n      {isExpanded && (\r\n        <div className=\"p-4 bg-gray-50\">\r\n          <h4 className=\"font-medium text-gray-900 mb-3\">Required Ingredients</h4>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Ingredient\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Quantity\r\n                  </th>\r\n                  <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Cost\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200 bg-white\">\r\n                {plan.totalIngredientNeeds.map((ingredient, idx) => (\r\n                  <tr key={idx}>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\r\n                      {ingredient.name}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                      {ingredient.quantity}\r\n                    </td>\r\n                    <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                      ${ingredient.totalCost.toFixed(2)}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr className=\"bg-gray-50\">\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                    Packaging ({plan.packagingNeeded.type})\r\n                  </td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                    {plan.packagingNeeded.quantity}\r\n                  </td>\r\n                  <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-700\">\r\n                    ${plan.packagingNeeded.cost.toFixed(2)}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Quantity Modal */}\r\n      <QuantityQualityModal\r\n        isOpen={showQuantityModal}\r\n        onClose={() => setShowQuantityModal(false)}\r\n        onConfirm={confirmReproduce}\r\n        initialQuantity={plan.plannedQuantity}\r\n        drugType={plan.drugType}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanCard;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,MAAM,EACNC,cAAc,EACdC,YAAY,EACZC,MAAM,EACNC,KAAK,EACLC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,aAAa,QACR,cAAc;;AAErB;AACA,OAAOC,oBAAoB,MAAM,wBAAwB;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,kBAAkB,GAAGA,CAAC;EAC1BC,IAAI;EACJC,UAAU;EACVC,cAAc;EACdC,YAAY;EACZC,YAAY;EACZC,QAAQ;EACRC,WAAW;EACXC,SAAS;EACTC,OAAO,GAAG,EAAE;EAAE;EACdC,aAAa;EACbC,qBAAqB;EACrBC;AACF,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,sBAAA,EAAAC,sBAAA;EACJ,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAACoB,IAAI,CAACqB,MAAM,IAAI,KAAK,CAAC;;EAE1D;EACA,MAAM,CAACE,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpE;EACA,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC;IAC7CiD,gBAAgB,EAAE,CAAC;IACnBC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAEhC,IAAI,CAACiC,SAAS,IAAI;EACnC,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvD,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE1D;EACAC,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,CAACqB,MAAM,EAAE;MACfC,SAAS,CAACtB,IAAI,CAACqB,MAAM,CAAC;IACxB;IAEA,IAAIrB,IAAI,CAACoC,eAAe,EAAE;MACxBD,eAAe,CAACnC,IAAI,CAACoC,eAAe,CAAC;IACvC;IAEA,IAAIpC,IAAI,CAACuB,oBAAoB,EAAE;MAC7BC,uBAAuB,CAACxB,IAAI,CAACuB,oBAAoB,CAAC;IACpD,CAAC,MAAM;MACL;MACA,MAAMc,gBAAgB,GAAG,CAAC,CAAC;MAC3BrC,IAAI,CAACsC,oBAAoB,CAACC,OAAO,CAACC,UAAU,IAAI;QAC9CH,gBAAgB,CAACG,UAAU,CAACC,IAAI,CAAC,GAAG,CAAC;MACvC,CAAC,CAAC;MACFjB,uBAAuB,CAACa,gBAAgB,CAAC;IAC3C;IAEA,IAAIrC,IAAI,CAACyB,YAAY,EAAE;MACrBC,eAAe,CAAC1B,IAAI,CAACyB,YAAY,CAAC;IACpC,CAAC,MAAM;MACL;MACA,MAAMiB,YAAY,GAAG,EAAE;MACvB;MACA,MAAMC,cAAc,GAAG3C,IAAI,CAACsC,oBAAoB,CAACM,IAAI,CAACC,GAAG,IACvDA,GAAG,CAACJ,IAAI,CAACK,QAAQ,CAAC,MAAM,CAAC,IAAID,GAAG,CAACJ,IAAI,CAACK,QAAQ,CAAC,QAAQ,CAAC,IAAID,GAAG,CAACJ,IAAI,CAACK,QAAQ,CAAC,MAAM,CACtF,CAAC;MAED,IAAIH,cAAc,EAAE;QAClBD,YAAY,CAACK,IAAI,CAAC;UAChBC,EAAE,EAAE,MAAM;UACVP,IAAI,EAAEE,cAAc,CAACF,IAAI;UACzBQ,SAAS,EAAE;QACb,CAAC,CAAC;MACJ;;MAEA;MACAjD,IAAI,CAACsC,oBAAoB,CAACC,OAAO,CAACC,UAAU,IAAI;QAC9C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACK,QAAQ,CAAC,MAAM,CAAC,IACjC,CAACN,UAAU,CAACC,IAAI,CAACK,QAAQ,CAAC,QAAQ,CAAC,IACnC,CAACN,UAAU,CAACC,IAAI,CAACK,QAAQ,CAAC,MAAM,CAAC,IACjC,CAACN,UAAU,CAACC,IAAI,CAACK,QAAQ,CAAC,QAAQ,CAAC,IACnC,CAACN,UAAU,CAACC,IAAI,CAACK,QAAQ,CAAC,KAAK,CAAC,EAAE;UACpCJ,YAAY,CAACK,IAAI,CAAC;YAChBC,EAAE,EAAER,UAAU,CAACC,IAAI;YACnBA,IAAI,EAAED,UAAU,CAACC,IAAI;YACrBQ,SAAS,EAAE;UACb,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;MAEFvB,eAAe,CAACgB,YAAY,CAAC;IAC/B;;IAEA;IACA,IAAI1C,IAAI,CAAC2B,WAAW,EAAE;MACpBC,cAAc,CAAC5B,IAAI,CAAC2B,WAAW,CAAC;IAClC,CAAC,MAAM;MACLC,cAAc,CAAC;QACbC,gBAAgB,EAAE,CAAC;QACnBC,cAAc,EAAE,CAAC;QACjBC,cAAc,EAAEvB,OAAO,CAAC0C,MAAM,GAAG,CAAC,GAAG1C,OAAO,CAAC,CAAC,CAAC,CAACwC,EAAE,GAAG,EAAE;QACvDhB,aAAa,EAAEhC,IAAI,CAACiC,SAAS,IAAI;MACnC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACjC,IAAI,EAAEQ,OAAO,CAAC,CAAC;;EAEnB;EACA,MAAM2C,eAAe,GAAIC,OAAO,IAAK;IACnC9B,SAAS,CAAC8B,OAAO,CAAC;;IAElB;IACA,MAAMC,UAAU,GAAGD,OAAO,GAAG,GAAG,GAAG,CAAC;IACpC,MAAME,eAAe,GAAGtD,IAAI,CAACuD,eAAe,GAAGF,UAAU;IACzD,MAAMG,kBAAkB,GAAGF,eAAe,GAAGtD,IAAI,CAACiC,SAAS;IAE3D9B,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;MACpB3B,MAAM,EAAE+B,OAAO;MACfK,eAAe,EAAED,kBAAkB;MACnCE,cAAc,EAAEF,kBAAkB,GAAGxD,IAAI,CAAC2D;IAC5C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK;IAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IAAA,IAAAC,mBAAA;IACrC,OAAO,EAAAA,mBAAA,GAAA/D,SAAS,CAAC8D,QAAQ,CAAC,cAAAC,mBAAA,uBAAnBA,mBAAA,CAAqBC,KAAK,KAAI,IAAI;EAC3C,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIxE,IAAI,CAACyE,MAAM,KAAK,MAAM,EAAE,OAAO,GAAG;IAEtC,QAAQvC,YAAY;MAClB,KAAK,MAAM;QACT,OAAO,CAAC;MACV,KAAK,KAAK;QACR;QACA,MAAMwC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC5E,IAAI,CAACsC,oBAAoB,CAAC,CAACuC,MAAM,CAAC,CAACC,GAAG,EAAEjC,GAAG,KAAKiC,GAAG,GAAGjC,GAAG,CAACkC,QAAQ,EAAE,CAAC,CAAC;QACxG,MAAMC,cAAc,GAAGL,MAAM,CAACC,MAAM,CAACrD,oBAAoB,CAAC,CAACsD,MAAM,CAAC,CAACC,GAAG,EAAEG,GAAG,KAAKH,GAAG,GAAGG,GAAG,EAAE,CAAC,CAAC;QAC7F,OAAOC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEJ,cAAc,GAAGN,WAAW,GAAI,EAAE,GAAG,CAAC,CAAC,CAAC;MAAE;MAC7E,KAAK,MAAM;QACT;QACA,MAAMW,cAAc,GAAG5D,YAAY,CAAC6D,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACtC,SAAS,CAAC,CAACC,MAAM;QACzE,OAAOgC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEC,cAAc,GAAG5D,YAAY,CAACyB,MAAM,GAAI,EAAE,GAAG,EAAE,CAAC,CAAC;MAAE;MACtF,KAAK,MAAM;QACT;QACA,MAAMsC,aAAa,GAAGxF,IAAI,CAACuD,eAAe;QAC1C,MAAMkC,YAAY,GAAG9D,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACG,cAAc;QAC9E,OAAOoD,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEK,YAAY,GAAGD,aAAa,GAAI,EAAE,GAAG,EAAE,CAAC,CAAC;MAAE;MAC9E;QACE,OAAO,CAAC;IACZ;EACF,CAAC;;EAED;EACA,MAAME,uBAAuB,GAAGA,CAAA,KAAM;IACpC,OAAO1F,IAAI,CAACsC,oBAAoB,CAACqD,KAAK,CAACnD,UAAU,IAC/C,CAACjB,oBAAoB,CAACiB,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,KAAKD,UAAU,CAACuC,QAC7D,CAAC;EACH,CAAC;;EAED;EACA,MAAMa,wBAAwB,GAAGA,CAAA,KAAM;IACrC,OAAOnE,YAAY,CAACkE,KAAK,CAACJ,IAAI,IAAIA,IAAI,CAACtC,SAAS,CAAC;EACnD,CAAC;;EAED;EACA,MAAM4C,mBAAmB,GAAGA,CAAA,KAAM;IAChC,OAAQlE,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACG,cAAc,IAAK9B,IAAI,CAACuD,eAAe;EAC5F,CAAC;;EAED;EACA,MAAMuC,yBAAyB,GAAGA,CAACC,cAAc,EAAEC,SAAS,KAAK;IAC/D,MAAMC,gBAAgB,GAAG;MAAE,GAAG1E;IAAqB,CAAC;IAEpD,IAAIyE,SAAS,EAAE;MACb;MACA,MAAMxD,UAAU,GAAGxC,IAAI,CAACsC,oBAAoB,CAACM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACJ,IAAI,KAAKsD,cAAc,CAAC;MACrF,IAAIvD,UAAU,EAAE;QACdyD,gBAAgB,CAACF,cAAc,CAAC,GAAGvD,UAAU,CAACuC,QAAQ;MACxD;IACF,CAAC,MAAM;MACL;MACAkB,gBAAgB,CAACF,cAAc,CAAC,GAAG,CAAC;IACtC;IAEAvE,uBAAuB,CAACyE,gBAAgB,CAAC;;IAEzC;IACA9F,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;MACpBzB,oBAAoB,EAAE0E,gBAAgB;MACtC7D,eAAe,EAAEF;IACnB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMgE,uBAAuB,GAAGA,CAACH,cAAc,EAAEhB,QAAQ,KAAK;IAC5D,MAAMkB,gBAAgB,GAAG;MAAE,GAAG1E;IAAqB,CAAC;IACpD0E,gBAAgB,CAACF,cAAc,CAAC,GAAGb,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACrB,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEvEvD,uBAAuB,CAACyE,gBAAgB,CAAC;;IAEzC;IACA9F,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;MACpBzB,oBAAoB,EAAE0E,gBAAgB;MACtC7D,eAAe,EAAEF;IACnB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMmE,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,YAAY,GAAG9E,YAAY,CAAC+E,GAAG,CAACjB,IAAI,IACxCA,IAAI,CAACvC,EAAE,KAAKsD,MAAM,GAAG;MAAE,GAAGf,IAAI;MAAEtC,SAAS,EAAE,CAACsC,IAAI,CAACtC;IAAU,CAAC,GAAGsC,IACjE,CAAC;IAED7D,eAAe,CAAC6E,YAAY,CAAC;;IAE7B;IACApG,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;MACpBvB,YAAY,EAAE8E,YAAY;MAC1BnE,eAAe,EAAEF;IACnB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMuE,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,MAAMC,WAAW,GAAG;MAAE,GAAGjF,WAAW;MAAE,CAAC+E,KAAK,GAAGC;IAAM,CAAC;;IAEtD;IACA,MAAME,cAAc,GAAGD,WAAW,CAAC/E,gBAAgB,GAAG+E,WAAW,CAAC9E,cAAc;IAChF,IAAI+E,cAAc,GAAG7G,IAAI,CAACuD,eAAe,EAAE;MACzC,IAAImD,KAAK,KAAK,kBAAkB,EAAE;QAChCE,WAAW,CAAC/E,gBAAgB,GAAG7B,IAAI,CAACuD,eAAe,GAAGqD,WAAW,CAAC9E,cAAc;MAClF,CAAC,MAAM,IAAI4E,KAAK,KAAK,gBAAgB,EAAE;QACrCE,WAAW,CAAC9E,cAAc,GAAG9B,IAAI,CAACuD,eAAe,GAAGqD,WAAW,CAAC/E,gBAAgB;MAClF;IACF;IAEAD,cAAc,CAACgF,WAAW,CAAC;;IAE3B;IACAzG,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;MACpBrB,WAAW,EAAEiF,WAAW;MACxBxE,eAAe,EAAEF;IACnB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM4E,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,SAAS;IAEb,QAAQ7E,YAAY;MAClB,KAAK,MAAM;QACT6E,SAAS,GAAG,KAAK;QACjB;MACF,KAAK,KAAK;QACRA,SAAS,GAAG,MAAM;QAClB;MACF,KAAK,MAAM;QACTA,SAAS,GAAG,MAAM;QAClB;MACF,KAAK,MAAM;QACT;QACAC,kBAAkB,CAAC,CAAC;QACpB;MACF;QACED,SAAS,GAAG,MAAM;IACtB;IAEA5E,eAAe,CAAC4E,SAAS,CAAC;;IAE1B;IACA5G,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;MACpBZ,eAAe,EAAE2E;IACnB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,IAAIrF,WAAW,CAACE,gBAAgB,GAAG,CAAC,EAAE;MACpC,MAAMoF,YAAY,GAAG;QACnBjE,EAAE,EAAEe,IAAI,CAACmD,GAAG,CAAC,CAAC;QACdC,MAAM,EAAExF,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACK,aAAa;QAChEoF,QAAQ,EAAE,CAAC;QAAE;QACbC,MAAM,EAAE1F,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACK,aAAa,GACvDhC,IAAI,CAAC2D,cAAc,IAAIhC,WAAW,CAACE,gBAAgB,GAAG7B,IAAI,CAACuD,eAAe,CAAE;QACrF+D,IAAI,EAAE,UAAU;QAChBC,WAAW,EAAEvH,IAAI,CAACqE,QAAQ;QAC1BmD,KAAK,EAAE7F,WAAW,CAACE,gBAAgB;QACnCiC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC0D,WAAW,CAAC,CAAC;QAC9BC,UAAU,EAAE1H,IAAI,CAAC0H,UAAU;QAC3BC,QAAQ,EAAE3H,IAAI,CAAC2H;MACjB,CAAC;;MAED;MACA,IAAIlH,aAAa,EAAE;QACjBA,aAAa,CAACmH,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEX,YAAY,CAAC,CAAC;MAChD;IACF;;IAEA;IACA,IAAItF,WAAW,CAACG,cAAc,GAAG,CAAC,IAAIH,WAAW,CAACI,cAAc,EAAE;MAChE,MAAMA,cAAc,GAAGvB,OAAO,CAACoC,IAAI,CAACiF,CAAC,IAAIA,CAAC,CAAC7E,EAAE,KAAKoD,QAAQ,CAACzE,WAAW,CAACI,cAAc,CAAC,CAAC;MAEvF,IAAIA,cAAc,EAAE;QAClB,MAAM+F,iBAAiB,GAAG;UACxB9E,EAAE,EAAEe,IAAI,CAACmD,GAAG,CAAC,CAAC;UACda,QAAQ,EAAEhG,cAAc,CAACiB,EAAE;UAC3BgF,UAAU,EAAEjG,cAAc,CAACU,IAAI;UAC/B8E,WAAW,EAAEvH,IAAI,CAACqE,QAAQ;UAC1B4D,iBAAiB,EAAEtG,WAAW,CAACG,cAAc;UAC7CoG,aAAa,EAAEvG,WAAW,CAACG,cAAc,GAAG9B,IAAI,CAACiC,SAAS;UAC1DoF,MAAM,EAAE1F,WAAW,CAACG,cAAc,GAAG9B,IAAI,CAACiC,SAAS,IAAI,CAAC,GAAGF,cAAc,CAACoG,GAAG,GAAG,GAAG,CAAC;UACpFrE,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC0D,WAAW,CAAC,CAAC;UAC9BC,UAAU,EAAE1H,IAAI,CAAC0H,UAAU;UAC3BC,QAAQ,EAAE3H,IAAI,CAAC2H;QACjB,CAAC;;QAED;QACA,IAAIjH,qBAAqB,EAAE;UACzBA,qBAAqB,CAACkH,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEE,iBAAiB,CAAC,CAAC;QAC7D;MACF;IACF;;IAEA;IACA1H,YAAY,CAACJ,IAAI,CAACgD,EAAE,CAAC;EACvB,CAAC;EAED,MAAMoF,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBtH,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAED,MAAMwH,eAAe,GAAGA,CAAA,KAAM;IAC5BrH,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMsH,gBAAgB,GAAGA,CAACzD,QAAQ,EAAE0D,OAAO,KAAK;IAC9CnI,WAAW,CAACN,IAAI,EAAE+E,QAAQ,EAAE0D,OAAO,CAAC;IACpCvH,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMwH,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IAC/B,IAAI/I,IAAI,CAACyE,MAAM,KAAK,MAAM,EAAE;MAC1B,oBACE7E,OAAA;QAAKoJ,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBACxDrJ,OAAA;UAAKoJ,SAAS,EAAC,uCAAuC;UAAAC,QAAA,gBACpDrJ,OAAA,CAACP,KAAK;YAAC2J,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClCzJ,OAAA;YAAMoJ,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAA6B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACNzJ,OAAA;UAAGoJ,SAAS,EAAC,wBAAwB;UAAAC,QAAA,GAAC,mDACa,EAACrF,UAAU,CAAC5D,IAAI,CAACsJ,QAAQ,CAAC,EAAC,GAC9E;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJzJ,OAAA;UACE2J,OAAO,EAAEhB,eAAgB;UACzBS,SAAS,EAAC,yHAAyH;UAAAC,QAAA,gBAEnIrJ,OAAA,CAACJ,SAAS;YAACwJ,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,6BAExC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAEV;IAEA,QAAQnH,YAAY;MAClB,KAAK,MAAM;QACT,oBACEtC,OAAA;UAAKoJ,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CrJ,OAAA;YAAIoJ,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC9DrJ,OAAA,CAACT,YAAY;cAAC6J,SAAS,EAAC;YAA4B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,kBAEzD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAELzJ,OAAA;YAAKoJ,SAAS,EAAC,gCAAgC;YAAAC,QAAA,eAC7CrJ,OAAA;cAAGoJ,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAErC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAGNzJ,OAAA;YAAKoJ,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBACzDrJ,OAAA;cAAAqJ,QAAA,gBACErJ,OAAA;gBAAOoJ,SAAS,EAAC,8CAA8C;gBAAAC,QAAA,EAAC;cAEhE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRzJ,OAAA;gBAAKoJ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnBrJ,OAAA;kBACE0H,IAAI,EAAC,QAAQ;kBACbnC,GAAG,EAAC,GAAG;kBACPwB,KAAK,EAAE3G,IAAI,CAACuD,eAAgB;kBAC5BiG,QAAQ,EAAGnB,CAAC,IAAK;oBACf,MAAMoB,WAAW,GAAGvE,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACiC,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC9D;oBACA,MAAMnD,kBAAkB,GAAGiG,WAAW,GAAGzJ,IAAI,CAACiC,SAAS;oBACvD9B,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;sBACpBO,eAAe,EAAEkG,WAAW;sBAC5BhG,eAAe,EAAED,kBAAkB;sBACnCE,cAAc,EAAEF,kBAAkB,GAAGxD,IAAI,CAAC2D;oBAC5C,CAAC,CAAC;kBACJ,CAAE;kBACFqF,SAAS,EAAC;gBAA8B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC,eACFzJ,OAAA;kBAAMoJ,SAAS,EAAC,iEAAiE;kBAAAC,QAAA,EAC9E,EAAAN,qBAAA,GAAApI,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAAsE,qBAAA,uBAAxBA,qBAAA,CAA0BgB,IAAI,KAAI;gBAAO;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENzJ,OAAA;cAAAqJ,QAAA,gBACErJ,OAAA;gBAAOoJ,SAAS,EAAC,8CAA8C;gBAAAC,QAAA,GAAC,YACpD,EAAC,EAAAL,sBAAA,GAAArI,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAAuE,sBAAA,uBAAxBA,sBAAA,CAA0Be,IAAI,KAAI,MAAM;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eACRzJ,OAAA;gBAAKoJ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnBrJ,OAAA;kBAAMoJ,SAAS,EAAC,8DAA8D;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACvFzJ,OAAA;kBACE0H,IAAI,EAAC,QAAQ;kBACbnC,GAAG,EAAC,GAAG;kBACPI,IAAI,EAAC,GAAG;kBACRoB,KAAK,EAAE3G,IAAI,CAACiC,SAAU;kBACtBuH,QAAQ,EAAGnB,CAAC,IAAK;oBACf,MAAMuB,QAAQ,GAAG1E,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACiC,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC3D;oBACA,MAAMnD,kBAAkB,GAAGxD,IAAI,CAACuD,eAAe,GAAGqG,QAAQ;oBAC1DzJ,YAAY,CAACH,IAAI,CAACgD,EAAE,EAAE;sBACpBf,SAAS,EAAE2H,QAAQ;sBACnBnG,eAAe,EAAED,kBAAkB;sBACnCE,cAAc,EAAEF,kBAAkB,GAAGxD,IAAI,CAAC2D;oBAC5C,CAAC,CAAC;kBACJ,CAAE;kBACFqF,SAAS,EAAC;gBAAgC;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNzJ,OAAA;YAAKoJ,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBACzDrJ,OAAA;cAAKoJ,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACrCrJ,OAAA;gBAAKoJ,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnEzJ,OAAA;gBAAKoJ,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,GAAC,GAAC,EAACjJ,IAAI,CAAC2D,cAAc,CAACkG,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC9EzJ,OAAA;gBAAKoJ,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,GAAC,WACjC,EAAC,EAAAJ,sBAAA,GAAAtI,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAAwE,sBAAA,uBAAxBA,sBAAA,CAA0Bc,IAAI,KAAI,MAAM,EAAC,GACnD,eAAA/J,OAAA;kBAAMoJ,SAAS,EAAC,2BAA2B;kBAAAC,QAAA,GAAC,GACzC,EAAC,CAACjJ,IAAI,CAAC2D,cAAc,GAAG3D,IAAI,CAACuD,eAAe,EAAEsG,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNzJ,OAAA;cAAKoJ,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACrCrJ,OAAA;gBAAKoJ,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzEzJ,OAAA;gBAAKoJ,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,GAAC,GAAC,EAACjJ,IAAI,CAACyD,eAAe,CAACoG,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1F,CAAC,eACNzJ,OAAA;cAAKoJ,SAAS,EAAC,wBAAwB;cAAAC,QAAA,gBACrCrJ,OAAA;gBAAKoJ,SAAS,EAAC,mCAAmC;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxEzJ,OAAA;gBAAKoJ,SAAS,EAAC,sCAAsC;gBAAAC,QAAA,GAAC,GAAC,EAACjJ,IAAI,CAAC0D,cAAc,CAACmG,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7FzJ,OAAA;gBAAKoJ,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,GAAC,aAC/B,EAAC,EAAAH,sBAAA,GAAAvI,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAAyE,sBAAA,uBAAxBA,sBAAA,CAA0Ba,IAAI,KAAI,MAAM,EAAC,GACrD,eAAA/J,OAAA;kBAAMoJ,SAAS,EAAC,4BAA4B;kBAAAC,QAAA,GAAC,GAC1C,EAAC,CAACjJ,IAAI,CAAC0D,cAAc,GAAG1D,IAAI,CAACuD,eAAe,EAAEsG,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNzJ,OAAA;YAAKoJ,SAAS,EAAC,uDAAuD;YAAAC,QAAA,gBACpErJ,OAAA;cAAKoJ,SAAS,EAAC,2CAA2C;cAAAC,QAAA,gBACxDrJ,OAAA;gBAAMoJ,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrDzJ,OAAA;gBAAMoJ,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,GACzC/D,IAAI,CAACE,KAAK,CAAEpF,IAAI,CAAC0D,cAAc,GAAG1D,IAAI,CAACyD,eAAe,GAAI,GAAG,CAAC,EAAC,GAClE;cAAA;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNzJ,OAAA;cAAKoJ,SAAS,EAAC,mEAAmE;cAAAC,QAAA,eAChFrJ,OAAA;gBACEoJ,SAAS,EAAC,wDAAwD;gBAClEc,KAAK,EAAE;kBAAEC,KAAK,EAAE,GAAG7E,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,KAAK,CAAEpF,IAAI,CAAC0D,cAAc,GAAG1D,IAAI,CAACyD,eAAe,GAAI,GAAG,CAAC,CAAC;gBAAI;cAAE;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzJ,OAAA;YACE2J,OAAO,EAAEzC,YAAa;YACtBkC,SAAS,EAAC,kGAAkG;YAAAC,QAAA,gBAE5GrJ,OAAA,CAACH,aAAa;cAACuJ,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,0BAE5C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAGV,KAAK,KAAK;QACR,oBACEzJ,OAAA;UAAKoJ,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CrJ,OAAA;YAAIoJ,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC9DrJ,OAAA,CAACT,YAAY;cAAC6J,SAAS,EAAC;YAA8B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,6BAE3D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAELzJ,OAAA;YAAKoJ,SAAS,EAAC,kCAAkC;YAAAC,QAAA,eAC/CrJ,OAAA;cAAGoJ,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EAAC;YAEvC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENzJ,OAAA;YAAKoJ,SAAS,EAAC,MAAM;YAAAC,QAAA,EAClBjJ,IAAI,CAACsC,oBAAoB,CAACkE,GAAG,CAAC,CAAChE,UAAU,EAAEwH,GAAG,kBAC7CpK,OAAA;cAAeoJ,SAAS,EAAC,+CAA+C;cAAAC,QAAA,gBACtErJ,OAAA;gBACE0H,IAAI,EAAC,UAAU;gBACftE,EAAE,EAAE,cAAcgH,GAAG,EAAG;gBACxB5G,OAAO,EAAE,CAAC7B,oBAAoB,CAACiB,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,KAAKD,UAAU,CAACuC,QAAS;gBAC7EyE,QAAQ,EAAGnB,CAAC,IAAKvC,yBAAyB,CAACtD,UAAU,CAACC,IAAI,EAAE4F,CAAC,CAACqB,MAAM,CAACtG,OAAO,CAAE;gBAC9E4F,SAAS,EAAC;cAA4B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC,eACFzJ,OAAA;gBAAOqK,OAAO,EAAE,cAAcD,GAAG,EAAG;gBAAChB,SAAS,EAAC,+BAA+B;gBAAAC,QAAA,EAC3EzG,UAAU,CAACC;cAAI;gBAAAyG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC,eAERzJ,OAAA;gBAAKoJ,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChCrJ,OAAA;kBACE0H,IAAI,EAAC,QAAQ;kBACbnC,GAAG,EAAC,GAAG;kBACPgB,GAAG,EAAE3D,UAAU,CAACuC,QAAS;kBACzB4B,KAAK,EAAEpF,oBAAoB,CAACiB,UAAU,CAACC,IAAI,CAAC,IAAI,CAAE;kBAClD+G,QAAQ,EAAGnB,CAAC,IAAKnC,uBAAuB,CAAC1D,UAAU,CAACC,IAAI,EAAE4F,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAE;kBAC1EqC,SAAS,EAAC;gBAAkD;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7D,CAAC,eACFzJ,OAAA;kBAAMoJ,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,GAAC,IAAE,EAACzG,UAAU,CAACuC,QAAQ;gBAAA;kBAAAmE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnE,CAAC;YAAA,GAtBEW,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuBR,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzJ,OAAA;YACE2J,OAAO,EAAEzC,YAAa;YACtBoD,QAAQ,EAAE,CAACxE,uBAAuB,CAAC,CAAE;YACrCsD,SAAS,EAAE,2DACTtD,uBAAuB,CAAC,CAAC,GACrB,8CAA8C,GAC9C,8CAA8C,EACjD;YAAAuD,QAAA,gBAEHrJ,OAAA,CAACH,aAAa;cAACuJ,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACzC3D,uBAAuB,CAAC,CAAC,GAAG,oBAAoB,GAAG,0BAA0B;UAAA;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAGV,KAAK,MAAM;QACT,oBACEzJ,OAAA;UAAKoJ,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CrJ,OAAA;YAAIoJ,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC9DrJ,OAAA,CAACR,MAAM;cAAC4J,SAAS,EAAC;YAA8B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,kBAErD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAELzJ,OAAA;YAAKoJ,SAAS,EAAC,kCAAkC;YAAAC,QAAA,eAC/CrJ,OAAA;cAAGoJ,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EAAC;YAEvC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENzJ,OAAA;YAAKoJ,SAAS,EAAC,MAAM;YAAAC,QAAA,EAClBxH,YAAY,CAAC+E,GAAG,CAAC,CAACjB,IAAI,EAAEyE,GAAG,kBAC1BpK,OAAA;cAEEoJ,SAAS,EAAE,sCACTzD,IAAI,CAACtC,SAAS,GAAG,uCAAuC,GAAG,YAAY,EACtE;cAAAgG,QAAA,gBAEHrJ,OAAA;gBAAKoJ,SAAS,EAAC,8GAA8G;gBAAAC,QAAA,EAC1He,GAAG,GAAG;cAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eAENzJ,OAAA;gBAAOqK,OAAO,EAAE,QAAQD,GAAG,EAAG;gBAAChB,SAAS,EAAC,+BAA+B;gBAAAC,QAAA,EACrE1D,IAAI,CAAC9C;cAAI;gBAAAyG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eAERzJ,OAAA;gBACE0H,IAAI,EAAC,UAAU;gBACftE,EAAE,EAAE,QAAQgH,GAAG,EAAG;gBAClB5G,OAAO,EAAEmC,IAAI,CAACtC,SAAU;gBACxBuG,QAAQ,EAAEA,CAAA,KAAMnD,iBAAiB,CAACd,IAAI,CAACvC,EAAE,CAAE;gBAC3CgG,SAAS,EAAC;cAAiC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC;YAAA,GAnBGW,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoBL,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENzJ,OAAA;YACE2J,OAAO,EAAEzC,YAAa;YACtBoD,QAAQ,EAAE,CAACtE,wBAAwB,CAAC,CAAE;YACtCoD,SAAS,EAAE,2DACTpD,wBAAwB,CAAC,CAAC,GACtB,8CAA8C,GAC9C,8CAA8C,EACjD;YAAAqD,QAAA,gBAEHrJ,OAAA,CAACH,aAAa;cAACuJ,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACzCzD,wBAAwB,CAAC,CAAC,GAAG,wBAAwB,GAAG,4BAA4B;UAAA;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAGV,KAAK,MAAM;QACT,oBACEzJ,OAAA;UAAKoJ,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CrJ,OAAA;YAAIoJ,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC9DrJ,OAAA,CAACd,UAAU;cAACkK,SAAS,EAAC;YAA6B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,wBAExD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAELzJ,OAAA;YAAKoJ,SAAS,EAAC,iCAAiC;YAAAC,QAAA,eAC9CrJ,OAAA;cAAGoJ,SAAS,EAAC,wBAAwB;cAAAC,QAAA,GAAC,yFAEnB,EAACtH,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACG,cAAc,EAAC,MAAI,EAAC9B,IAAI,CAACuD,eAAe,EAAC,GACxG;YAAA;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENzJ,OAAA;YAAKoJ,SAAS,EAAC,4CAA4C;YAAAC,QAAA,gBAEzDrJ,OAAA;cAAKoJ,SAAS,EAAC,uCAAuC;cAAAC,QAAA,gBACpDrJ,OAAA;gBAAIoJ,SAAS,EAAC,gCAAgC;gBAAAC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAElEzJ,OAAA;gBAAKoJ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnBrJ,OAAA;kBAAOoJ,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,EAAC;gBAA2B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACvFzJ,OAAA;kBACE0H,IAAI,EAAC,QAAQ;kBACbnC,GAAG,EAAC,GAAG;kBACPgB,GAAG,EAAEnG,IAAI,CAACuD,eAAe,GAAG5B,WAAW,CAACG,cAAe;kBACvD6E,KAAK,EAAEhF,WAAW,CAACE,gBAAiB;kBACpC2H,QAAQ,EAAGnB,CAAC,IAAK5B,iBAAiB,CAAC,kBAAkB,EAAEvB,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACiC,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE;kBACnGqC,SAAS,EAAC;gBAA8B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENzJ,OAAA;gBAAKoJ,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBACnBrJ,OAAA;kBAAOoJ,SAAS,EAAC,kCAAkC;kBAAAC,QAAA,GAAC,YAAU,EAAC,EAAAF,sBAAA,GAAAxI,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAA0E,sBAAA,uBAAxBA,sBAAA,CAA0BY,IAAI,KAAI,MAAM;gBAAA;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAChHzJ,OAAA;kBACE0H,IAAI,EAAC,QAAQ;kBACbnC,GAAG,EAAC,GAAG;kBACPI,IAAI,EAAC,GAAG;kBACRoB,KAAK,EAAEhF,WAAW,CAACK,aAAc;kBACjCwH,QAAQ,EAAGnB,CAAC,IAAK5B,iBAAiB,CAAC,eAAe,EAAEvB,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACiC,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE;kBAChGqC,SAAS,EAAC;gBAA8B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENzJ,OAAA;gBAAKoJ,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,gBACpCrJ,OAAA;kBAAKoJ,SAAS,EAAC,2BAA2B;kBAAAC,QAAA,gBACxCrJ,OAAA;oBAAAqJ,QAAA,EAAM;kBAAc;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC3BzJ,OAAA;oBAAMoJ,SAAS,EAAC,2BAA2B;oBAAAC,QAAA,GAAC,GACzC,EAAC,CAACtH,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACK,aAAa,EAAE6H,OAAO,CAAC,CAAC,CAAC;kBAAA;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNzJ,OAAA;kBAAKoJ,SAAS,EAAC,sBAAsB;kBAAAC,QAAA,gBACnCrJ,OAAA;oBAAAqJ,QAAA,EAAM;kBAAiB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC9BzJ,OAAA;oBAAMoJ,SAAS,EAAC,4BAA4B;oBAAAC,QAAA,GAAC,GAC1C,EAAC,CAAEtH,WAAW,CAACE,gBAAgB,GAAGF,WAAW,CAACK,aAAa,GACxDhC,IAAI,CAAC2D,cAAc,IAAIhC,WAAW,CAACE,gBAAgB,GAAG7B,IAAI,CAACuD,eAAe,CAAE,EAAEsG,OAAO,CAAC,CAAC,CAAC;kBAAA;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxF,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAGNzJ,OAAA;cAAKoJ,SAAS,EAAC,uCAAuC;cAAAC,QAAA,gBACpDrJ,OAAA;gBAAIoJ,SAAS,EAAC,gCAAgC;gBAAAC,QAAA,EAAC;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAEpE7I,OAAO,IAAIA,OAAO,CAAC0C,MAAM,GAAG,CAAC,gBAC5BtD,OAAA,CAAAE,SAAA;gBAAAmJ,QAAA,gBACErJ,OAAA;kBAAKoJ,SAAS,EAAC,MAAM;kBAAAC,QAAA,gBACnBrJ,OAAA;oBAAOoJ,SAAS,EAAC,kCAAkC;oBAAAC,QAAA,EAAC;kBAAa;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACzEzJ,OAAA;oBACE+G,KAAK,EAAEhF,WAAW,CAACI,cAAe;oBAClCyH,QAAQ,EAAGnB,CAAC,IAAK5B,iBAAiB,CAAC,gBAAgB,EAAE4B,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAE;oBACrEqC,SAAS,EAAC,8BAA8B;oBAAAC,QAAA,gBAExCrJ,OAAA;sBAAQ+G,KAAK,EAAC,EAAE;sBAAAsC,QAAA,EAAC;oBAAe;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,EACxC7I,OAAO,CAAC8E,MAAM,CAACuC,CAAC,IAAIA,CAAC,CAACsC,MAAM,CAAC,CAAC3D,GAAG,CAAC4D,MAAM,iBACvCxK,OAAA;sBAAwB+G,KAAK,EAAEyD,MAAM,CAACpH,EAAG;sBAAAiG,QAAA,GACtCmB,MAAM,CAAC3H,IAAI,EAAC,UAAQ,EAAC2H,MAAM,CAACjC,GAAG,EAAC,GACnC;oBAAA,GAFaiC,MAAM,CAACpH,EAAE;sBAAAkG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAEd,CACT,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,eAENzJ,OAAA;kBAAKoJ,SAAS,EAAC,MAAM;kBAAAC,QAAA,gBACnBrJ,OAAA;oBAAOoJ,SAAS,EAAC,kCAAkC;oBAAAC,QAAA,EAAC;kBAAsB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAClFzJ,OAAA;oBACE0H,IAAI,EAAC,QAAQ;oBACbnC,GAAG,EAAC,GAAG;oBACPgB,GAAG,EAAEnG,IAAI,CAACuD,eAAe,GAAG5B,WAAW,CAACE,gBAAiB;oBACzD8E,KAAK,EAAEhF,WAAW,CAACG,cAAe;oBAClC0H,QAAQ,EAAGnB,CAAC,IAAK5B,iBAAiB,CAAC,gBAAgB,EAAEvB,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACiC,CAAC,CAACqB,MAAM,CAAC/C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE;oBACjGqC,SAAS,EAAC;kBAA8B;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,EAEL1H,WAAW,CAACI,cAAc,iBACzBnC,OAAA;kBAAKoJ,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,gBACpCrJ,OAAA;oBAAKoJ,SAAS,EAAC,2BAA2B;oBAAAC,QAAA,gBACxCrJ,OAAA;sBAAAqJ,QAAA,EAAM;oBAAe;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC5BzJ,OAAA;sBAAMoJ,SAAS,EAAC,2BAA2B;sBAAAC,QAAA,GAAC,GACzC,EAAC,CAACtH,WAAW,CAACG,cAAc,GAAG9B,IAAI,CAACiC,SAAS,EAAE4H,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtD,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,EAEL,CAAC,MAAM;oBACN,MAAMtH,cAAc,GAAGvB,OAAO,CAACoC,IAAI,CAACiF,CAAC,IAAIA,CAAC,CAAC7E,EAAE,KAAKoD,QAAQ,CAACzE,WAAW,CAACI,cAAc,CAAC,CAAC;oBACvF,MAAMsI,SAAS,GAAGtI,cAAc,GAAGA,cAAc,CAACoG,GAAG,GAAG,CAAC;oBACzD,MAAMmC,UAAU,GAAI3I,WAAW,CAACG,cAAc,GAAG9B,IAAI,CAACiC,SAAS,IAAK,CAAC,GAAGoI,SAAS,GAAG,GAAG,CAAC;oBAExF,oBACEzK,OAAA;sBAAKoJ,SAAS,EAAC,sBAAsB;sBAAAC,QAAA,gBACnCrJ,OAAA;wBAAAqJ,QAAA,GAAM,qBAAmB,EAACoB,SAAS,EAAC,SAAO;sBAAA;wBAAAnB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,eAClDzJ,OAAA;wBAAMoJ,SAAS,EAAC,4BAA4B;wBAAAC,QAAA,GAAC,GAC1C,EAACqB,UAAU,CAACT,OAAO,CAAC,CAAC,CAAC;sBAAA;wBAAAX,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACnB,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC;kBAEV,CAAC,EAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CACN;cAAA,eACD,CAAC,gBAEHzJ,OAAA;gBAAKoJ,SAAS,EAAC,kDAAkD;gBAAAC,QAAA,gBAC/DrJ,OAAA,CAACN,aAAa;kBAAC0J,SAAS,EAAC;gBAA2B;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,wEAEzD;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzJ,OAAA;YACE2J,OAAO,EAAEzC,YAAa;YACtBoD,QAAQ,EAAE,CAACrE,mBAAmB,CAAC,CAAE;YACjCmD,SAAS,EAAE,2DACTnD,mBAAmB,CAAC,CAAC,GACjB,4CAA4C,GAC5C,8CAA8C,EACjD;YAAAoD,QAAA,gBAEHrJ,OAAA,CAACd,UAAU;cAACkK,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACtCxD,mBAAmB,CAAC,CAAC,GAAG,eAAe,GAAG,sBAAsB;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAGV;QACE,OAAO,IAAI;IACf;EACF,CAAC;;EAED;EACA,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIvK,IAAI,CAACyE,MAAM,KAAK,MAAM,EAAE;MAC1B,oBACE7E,OAAA;QAAMoJ,SAAS,EAAC,wEAAwE;QAAAC,QAAA,EAAC;MAEzF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAEX;IAEA,QAAQnH,YAAY;MAClB,KAAK,MAAM;QACT,oBACEtC,OAAA;UAAMoJ,SAAS,EAAC,sEAAsE;UAAAC,QAAA,EAAC;QAEvF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAEX,KAAK,KAAK;QACR,oBACEzJ,OAAA;UAAMoJ,SAAS,EAAC,0EAA0E;UAAAC,QAAA,EAAC;QAE3F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAEX,KAAK,MAAM;QACT,oBACEzJ,OAAA;UAAMoJ,SAAS,EAAC,0EAA0E;UAAAC,QAAA,EAAC;QAE3F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAEX,KAAK,MAAM;QACT,oBACEzJ,OAAA;UAAMoJ,SAAS,EAAC,wEAAwE;UAAAC,QAAA,EAAC;QAEzF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAEX;QACE,oBACEzJ,OAAA;UAAMoJ,SAAS,EAAC,sEAAsE;UAAAC,QAAA,EAAC;QAEvF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;IAEb;EACF,CAAC;EAED,oBACEzJ,OAAA;IAAKoJ,SAAS,EAAC,4DAA4D;IAAAC,QAAA,gBAEzErJ,OAAA;MAAKoJ,SAAS,EAAC,2EAA2E;MAAAC,QAAA,gBACxFrJ,OAAA;QAAKoJ,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBAC1CrJ,OAAA;UAAMoJ,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAE7E,gBAAgB,CAACpE,IAAI,CAACqE,QAAQ;QAAC;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClEzJ,OAAA;UAAAqJ,QAAA,gBACErJ,OAAA;YAAIoJ,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EAAEjJ,IAAI,CAAC0H;UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC/DrJ,IAAI,CAACwK,OAAO,IAAIxK,IAAI,CAACwK,OAAO,CAACtH,MAAM,GAAG,CAAC,gBACtCtD,OAAA;YAAKoJ,SAAS,EAAC,2BAA2B;YAAAC,QAAA,EACvCjJ,IAAI,CAACwK,OAAO,CAAChE,GAAG,CAAC,CAACiE,MAAM,EAAET,GAAG,kBAC5BpK,OAAA;cAEEoJ,SAAS,EAAC,6CAA6C;cACvDc,KAAK,EAAE;gBAAEY,eAAe,EAAE/J,YAAY,IAAIA,YAAY,CAAC8J,MAAM,CAAC,GAAG9J,YAAY,CAAC8J,MAAM,CAAC,GAAG;cAAO,CAAE;cAAAxB,QAAA,EAEhGwB;YAAM,GAJFT,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKJ,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,gBAENzJ,OAAA;YAAGoJ,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACvE,eACDzJ,OAAA;YAAGoJ,SAAS,EAAC,4BAA4B;YAAAC,QAAA,GAAC,WAC/B,EAACrF,UAAU,CAAC5D,IAAI,CAAC2K,WAAW,CAAC;UAAA;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzJ,OAAA;QAAKoJ,SAAS,EAAC,6BAA6B;QAAAC,QAAA,GACzCsB,gBAAgB,CAAC,CAAC,eAGnB3K,OAAA;UAAKoJ,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBrJ,OAAA;YACE2J,OAAO,EAAEnB,iBAAkB;YAC3BY,SAAS,EAAC,+CAA+C;YACzD4B,KAAK,EAAC,cAAc;YAAA3B,QAAA,eAEpBrJ,OAAA,CAACV,cAAc;cAAC8J,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,EAGRtI,eAAe,iBACdnB,OAAA;YAAKoJ,SAAS,EAAC,sFAAsF;YAAAC,QAAA,eACnGrJ,OAAA;cAAKoJ,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBrJ,OAAA;gBACE2J,OAAO,EAAEA,CAAA,KAAM;kBACbrJ,cAAc,CAAC,CAAC;kBAChBc,kBAAkB,CAAC,KAAK,CAAC;gBAC3B,CAAE;gBACFgI,SAAS,EAAC,oEAAoE;gBAAAC,QAAA,gBAE9ErJ,OAAA,CAACb,IAAI;kBAACiK,SAAS,EAAC;gBAAqB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,EACvCpJ,UAAU,GAAG,cAAc,GAAG,cAAc;cAAA;gBAAAiJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC,eACTzJ,OAAA;gBACE2J,OAAO,EAAEA,CAAA,KAAM;kBACbhB,eAAe,CAAC,CAAC;kBACjBvH,kBAAkB,CAAC,KAAK,CAAC;gBAC3B,CAAE;gBACFgI,SAAS,EAAC,oEAAoE;gBAAAC,QAAA,gBAE9ErJ,OAAA,CAACZ,IAAI;kBAACgK,SAAS,EAAC;gBAAqB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,iBAE1C;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTzJ,OAAA;gBACE2J,OAAO,EAAEA,CAAA,KAAM;kBACblJ,QAAQ,CAACL,IAAI,CAACgD,EAAE,CAAC;kBACjBhC,kBAAkB,CAAC,KAAK,CAAC;gBAC3B,CAAE;gBACFgI,SAAS,EAAC,iEAAiE;gBAAAC,QAAA,gBAE3ErJ,OAAA,CAACX,MAAM;kBAAC+J,SAAS,EAAC;gBAAqB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,UAE5C;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNzJ,OAAA;MAAKoJ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BrJ,OAAA;QACEoJ,SAAS,EAAE,UACThJ,IAAI,CAACyE,MAAM,KAAK,MAAM,GAAG,cAAc,GACvCvC,YAAY,KAAK,MAAM,GAAG,aAAa,GACvCA,YAAY,KAAK,KAAK,GAAG,eAAe,GACxCA,YAAY,KAAK,MAAM,GAAG,eAAe,GACzC,cAAc,EACb;QACH4H,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGvF,iBAAiB,CAAC,CAAC;QAAI;MAAE;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAGLlI,eAAe,iBACdvB,OAAA;MAAKoJ,SAAS,EAAC,yCAAyC;MAAAC,QAAA,eACtDrJ,OAAA;QAAKoJ,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BrJ,OAAA,CAACL,UAAU;UAACyJ,SAAS,EAAC;QAA4C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrEzJ,OAAA;UAAKoJ,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBACpCrJ,OAAA;YAAGoJ,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAACrJ,OAAA;cAAAqJ,QAAA,EAAQ;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gDAA4C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACrGzJ,OAAA;YAAIoJ,SAAS,EAAC,6BAA6B;YAAAC,QAAA,gBACzCrJ,OAAA;cAAAqJ,QAAA,gBAAIrJ,OAAA;gBAAAqJ,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,8BAA0B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzDzJ,OAAA;cAAAqJ,QAAA,gBAAIrJ,OAAA;gBAAAqJ,QAAA,EAAQ;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,gCAA4B;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtEzJ,OAAA;cAAAqJ,QAAA,gBAAIrJ,OAAA;gBAAAqJ,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,uCAAmC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClEzJ,OAAA;cAAAqJ,QAAA,gBAAIrJ,OAAA;gBAAAqJ,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,qDAAiD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,eACLzJ,OAAA;YACE2J,OAAO,EAAEA,CAAA,KAAMnI,kBAAkB,CAAC,KAAK,CAAE;YACzC4H,SAAS,EAAC,oDAAoD;YAAAC,QAAA,EAC/D;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAAClI,eAAe,IAAI,CAACnB,IAAI,CAACyE,MAAM,KAAK,MAAM,iBAC1C7E,OAAA;MAAKoJ,SAAS,EAAC,0FAA0F;MAAAC,QAAA,gBACvGrJ,OAAA;QAAAqJ,QAAA,EACG/G,YAAY,KAAK,MAAM,GAAG,gBAAgB,GAC1CA,YAAY,KAAK,KAAK,GAAG,oBAAoB,GAC7CA,YAAY,KAAK,MAAM,GAAG,iBAAiB,GAC3C;MAAoB;QAAAgH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACPzJ,OAAA;QACE2J,OAAO,EAAEA,CAAA,KAAMnI,kBAAkB,CAAC,IAAI,CAAE;QACxC4H,SAAS,EAAC,qDAAqD;QAAAC,QAAA,gBAE/DrJ,OAAA,CAACL,UAAU;UAACyJ,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCzJ,OAAA;UAAAqJ,QAAA,EAAM;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAGDzJ,OAAA;MAAKoJ,SAAS,EAAC,8BAA8B;MAAAC,QAAA,eAC3CrJ,OAAA;QAAKoJ,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCrJ,OAAA;UAAAqJ,QAAA,gBACErJ,OAAA;YAAKoJ,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrDzJ,OAAA;YAAKoJ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,GAAEjJ,IAAI,CAACuD,eAAe,EAAC,GAAC,EAAC,EAAA1C,sBAAA,GAAAN,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAAxD,sBAAA,uBAAxBA,sBAAA,CAA0B8I,IAAI,KAAI,OAAO;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1G,CAAC,eACNzJ,OAAA;UAAAqJ,QAAA,gBACErJ,OAAA;YAAKoJ,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClDzJ,OAAA;YAAKoJ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,GAAC,GAAC,EAACjJ,IAAI,CAACiC,SAAS,EAAC,OAAK,EAAC,EAAAnB,sBAAA,GAAAP,SAAS,CAACP,IAAI,CAACqE,QAAQ,CAAC,cAAAvD,sBAAA,uBAAxBA,sBAAA,CAA0B6I,IAAI,KAAI,MAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLX,kBAAkB,CAAC,CAAC,EAGpBzI,UAAU,iBACTL,OAAA;MAAKoJ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BrJ,OAAA;QAAIoJ,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxEzJ,OAAA;QAAKoJ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BrJ,OAAA;UAAOoJ,SAAS,EAAC,qCAAqC;UAAAC,QAAA,gBACpDrJ,OAAA;YAAAqJ,QAAA,eACErJ,OAAA;cAAAqJ,QAAA,gBACErJ,OAAA;gBAAIoJ,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzJ,OAAA;gBAAIoJ,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzJ,OAAA;gBAAIoJ,SAAS,EAAC,gFAAgF;gBAAAC,QAAA,EAAC;cAE/F;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRzJ,OAAA;YAAOoJ,SAAS,EAAC,mCAAmC;YAAAC,QAAA,GACjDjJ,IAAI,CAACsC,oBAAoB,CAACkE,GAAG,CAAC,CAAChE,UAAU,EAAEwH,GAAG,kBAC7CpK,OAAA;cAAAqJ,QAAA,gBACErJ,OAAA;gBAAIoJ,SAAS,EAAC,mDAAmD;gBAAAC,QAAA,EAC9DzG,UAAU,CAACC;cAAI;gBAAAyG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC,eACLzJ,OAAA;gBAAIoJ,SAAS,EAAC,mDAAmD;gBAAAC,QAAA,EAC9DzG,UAAU,CAACuC;cAAQ;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACLzJ,OAAA;gBAAIoJ,SAAS,EAAC,mDAAmD;gBAAAC,QAAA,GAAC,GAC/D,EAACzG,UAAU,CAACqI,SAAS,CAAChB,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC;YAAA,GATEW,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUR,CACL,CAAC,eACFzJ,OAAA;cAAIoJ,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACxBrJ,OAAA;gBAAIoJ,SAAS,EAAC,+DAA+D;gBAAAC,QAAA,GAAC,aACjE,EAACjJ,IAAI,CAAC8K,eAAe,CAACxD,IAAI,EAAC,GACxC;cAAA;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACLzJ,OAAA;gBAAIoJ,SAAS,EAAC,mDAAmD;gBAAAC,QAAA,EAC9DjJ,IAAI,CAAC8K,eAAe,CAAC/F;cAAQ;gBAAAmE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACLzJ,OAAA;gBAAIoJ,SAAS,EAAC,mDAAmD;gBAAAC,QAAA,GAAC,GAC/D,EAACjJ,IAAI,CAAC8K,eAAe,CAACC,IAAI,CAAClB,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDzJ,OAAA,CAACF,oBAAoB;MACnBsL,MAAM,EAAE/J,iBAAkB;MAC1BgK,OAAO,EAAEA,CAAA,KAAM/J,oBAAoB,CAAC,KAAK,CAAE;MAC3CgK,SAAS,EAAE1C,gBAAiB;MAC5B2C,eAAe,EAAEnL,IAAI,CAACuD,eAAgB;MACtCc,QAAQ,EAAErE,IAAI,CAACqE;IAAS;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzI,EAAA,CArgCIb,kBAAkB;AAAAqL,EAAA,GAAlBrL,kBAAkB;AAugCxB,eAAeA,kBAAkB;AAAC,IAAAqL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}