{"ast":null,"code":"// AutoSave.js\n// Component that provides automatic saving of game state without UI elements\nimport{useEffect,useCallback}from'react';const AUTO_SAVE_INTERVAL=30000;// Auto-save every 30 seconds\nconst AutoSave=_ref=>{let{gameState,onManualSave,autoSaveInterval=AUTO_SAVE_INTERVAL}=_ref;// Function to handle automatic saving (silent)\nconst autoSaveGame=useCallback(()=>{// Call the manual save function passed from parent\nonManualSave();},[onManualSave]);// Set up auto-save interval\nuseEffect(()=>{const intervalId=setInterval(()=>{autoSaveGame();},autoSaveInterval);// Save on component mount (silent)\nautoSaveGame();// Clean up interval on unmount\nreturn()=>clearInterval(intervalId);},[autoSaveInterval,autoSaveGame,gameState]);// Save when window is about to unload (close/refresh)\nuseEffect(()=>{const handleBeforeUnload=()=>{onManualSave();};window.addEventListener('beforeunload',handleBeforeUnload);return()=>{window.removeEventListener('beforeunload',handleBeforeUnload);};},[onManualSave,gameState]);// Return null since we don't need UI elements anymore\nreturn null;};export default AutoSave;","map":{"version":3,"names":["useEffect","useCallback","AUTO_SAVE_INTERVAL","AutoSave","_ref","gameState","onManualSave","autoSaveInterval","autoSaveGame","intervalId","setInterval","clearInterval","handleBeforeUnload","window","addEventListener","removeEventListener"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/AutoSave.js"],"sourcesContent":["// AutoSave.js\r\n// Component that provides automatic saving of game state without UI elements\r\nimport { useEffect, useCallback } from 'react';\r\n\r\nconst AUTO_SAVE_INTERVAL = 30000; // Auto-save every 30 seconds\r\n\r\nconst AutoSave = ({ \r\n  gameState, \r\n  onManualSave,\r\n  autoSaveInterval = AUTO_SAVE_INTERVAL \r\n}) => {\r\n  // Function to handle automatic saving (silent)\r\n  const autoSaveGame = useCallback(() => {\r\n    // Call the manual save function passed from parent\r\n    onManualSave();\r\n  }, [onManualSave]);\r\n\r\n  // Set up auto-save interval\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      autoSaveGame();\r\n    }, autoSaveInterval);\r\n\r\n    // Save on component mount (silent)\r\n    autoSaveGame();\r\n\r\n    // Clean up interval on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, [autoSaveInterval, autoSaveGame, gameState]);\r\n\r\n  // Save when window is about to unload (close/refresh)\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      onManualSave();\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [onManualSave, gameState]);\r\n\r\n  // Return null since we don't need UI elements anymore\r\n  return null;\r\n};\r\n\r\nexport default AutoSave;"],"mappings":"AAAA;AACA;AACA,OAASA,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAE9C,KAAM,CAAAC,kBAAkB,CAAG,KAAK,CAAE;AAElC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAIX,IAJY,CAChBC,SAAS,CACTC,YAAY,CACZC,gBAAgB,CAAGL,kBACrB,CAAC,CAAAE,IAAA,CACC;AACA,KAAM,CAAAI,YAAY,CAAGP,WAAW,CAAC,IAAM,CACrC;AACAK,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAElB;AACAN,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,UAAU,CAAGC,WAAW,CAAC,IAAM,CACnCF,YAAY,CAAC,CAAC,CAChB,CAAC,CAAED,gBAAgB,CAAC,CAEpB;AACAC,YAAY,CAAC,CAAC,CAEd;AACA,MAAO,IAAMG,aAAa,CAACF,UAAU,CAAC,CACxC,CAAC,CAAE,CAACF,gBAAgB,CAAEC,YAAY,CAAEH,SAAS,CAAC,CAAC,CAE/C;AACAL,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,kBAAkB,CAAGA,CAAA,GAAM,CAC/BN,YAAY,CAAC,CAAC,CAChB,CAAC,CAEDO,MAAM,CAACC,gBAAgB,CAAC,cAAc,CAAEF,kBAAkB,CAAC,CAE3D,MAAO,IAAM,CACXC,MAAM,CAACE,mBAAmB,CAAC,cAAc,CAAEH,kBAAkB,CAAC,CAChE,CAAC,CACH,CAAC,CAAE,CAACN,YAAY,CAAED,SAAS,CAAC,CAAC,CAE7B;AACA,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}