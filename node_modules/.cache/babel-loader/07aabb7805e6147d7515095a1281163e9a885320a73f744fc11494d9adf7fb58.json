{"ast":null,"code":"import React,{useState}from'react';import{PlusCircle,CornerDownRight,Check,RotateCcw,Trash2,XCircle,AlertTriangle}from'lucide-react';// Sequential Ingredients Selector - allows adding one ingredient at a time and shows effects after each step\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const SequentialIngredientsSelector=_ref=>{let{ingredients,currentMix,currentEffects,mixingHistory,effectColors,additiveEffects,addIngredient,removeLastIngredient,resetMix,finalizeMix,selectedDrugType,simulateAddIngredient// Optional function to preview effects\n}=_ref;const[showSelectIngredient,setShowSelectIngredient]=useState(false);const[hoveredIngredient,setHoveredIngredient]=useState(null);const[hoveredEffects,setHoveredEffects]=useState(null);// Helper function to determine if an ingredient is relevant for the selected drug type\nconst isIngredientRelevantForDrugType=ingredient=>{// Common ingredients that work with all drug types (first 8 ingredients)\nconst commonIngredients=['Cuke','Banana','Paracetamol','Donut','Viagra','Mouth Wash','Flu Medicine','Gasoline','Energy Drink','Motor Oil','Mega Bean','Chili','Battery','Iodine','Addy','Horse Semen'];if(commonIngredients.includes(ingredient.name)){return true;}// Drug-specific ingredients\nconst methSpecificIngredients=['Glass Shards','Blue Food Coloring'];const cocaineSpecificIngredients=['Baking Soda','Caffeine Powder'];if(selectedDrugType==='meth'&&methSpecificIngredients.includes(ingredient.name)){return true;}if(selectedDrugType==='cocaine'&&cocaineSpecificIngredients.includes(ingredient.name)){return true;}// For weed, show most ingredients except the very specific ones for meth/cocaine\nif(selectedDrugType==='weed'){return!methSpecificIngredients.includes(ingredient.name)&&!cocaineSpecificIngredients.includes(ingredient.name);}return true;};// Filter ingredients based on drug type\nconst filteredIngredients=ingredients.filter(isIngredientRelevantForDrugType);// Handle ingredient hover to show preview of effects\nconst handleIngredientHover=ingredient=>{setHoveredIngredient(ingredient);if(simulateAddIngredient&&currentEffects){const simulation=simulateAddIngredient(currentEffects,ingredient);setHoveredEffects(simulation.newEffects);}};const handleIngredientLeave=()=>{setHoveredIngredient(null);setHoveredEffects(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium text-gray-700 mb-2\",children:\"Mix Creation Process\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-800\",children:\"Current Mix Status\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded-full\",children:[\"Step \",currentMix.length]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-700 mb-1\",children:\"Current Effects:\"}),currentEffects.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:currentEffects.map((effect,idx)=>/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-white rounded-full text-xs\",style:{backgroundColor:effectColors[effect]||'#333'},children:effect},idx))}):/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 italic\",children:\"No effects yet. Start by adding an ingredient.\"})]}),hoveredEffects&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 bg-blue-50 p-2 rounded-md border border-blue-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-700 mb-1 flex items-center\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-4 h-4 mr-1\"}),\"Preview: If you add \",hoveredIngredient.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:hoveredEffects.map((effect,idx)=>/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 text-white rounded-full text-xs\",style:{backgroundColor:effectColors[effect]||'#333'},children:effect},idx))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-700 mb-1\",children:\"Effect Slots:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-1\",children:[Array(8).fill(0).map((_,idx)=>/*#__PURE__*/_jsx(\"div\",{className:`w-3 h-3 rounded-full ${idx<currentEffects.length?'bg-green-500':'bg-gray-300'}`,title:idx<currentEffects.length?`Slot ${idx+1}: ${currentEffects[idx]}`:'Empty slot'},idx)),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-xs text-gray-500\",children:[currentEffects.length,\"/8 slots used\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowSelectIngredient(true),className:\"px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center text-sm\",children:[/*#__PURE__*/_jsx(PlusCircle,{className:\"w-4 h-4 mr-1\"}),\"Add Ingredient\"]}),currentMix.length>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:removeLastIngredient,className:\"px-3 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700 flex items-center text-sm\",children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"w-4 h-4 mr-1\"}),\"Undo Last Step\"]}),currentMix.length>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:resetMix,className:\"px-3 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center text-sm\",children:[/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4 mr-1\"}),\"Reset Mix\"]}),currentMix.length>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:finalizeMix,className:\"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center text-sm\",children:[/*#__PURE__*/_jsx(Check,{className:\"w-4 h-4 mr-1\"}),\"Finalize Mix\"]})]})]}),mixingHistory&&mixingHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg border border-gray-200 mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-800 mb-3\",children:\"Mixing History\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:mixingHistory.map((step,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-l-2 border-blue-400 pl-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium text-gray-700\",children:[\"Step \",step.step,\": \",step.ingredient]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:step.changes.map((change,changeIdx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(CornerDownRight,{className:\"w-3 h-3 mr-1 text-blue-400\"}),change]},changeIdx))}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1 flex flex-wrap gap-1\",children:step.effectsAfter.map((effect,effectIdx)=>/*#__PURE__*/_jsx(\"span\",{className:\"px-1.5 py-0.5 text-white rounded-full text-xs\",style:{backgroundColor:effectColors[effect]||'#333'},children:effect},effectIdx))})]},idx))})]}),showSelectIngredient&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[80vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:[\"Select an Ingredient for Step \",currentMix.length+1]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSelectIngredient(false),className:\"text-gray-400 hover:text-gray-500\",children:/*#__PURE__*/_jsx(XCircle,{className:\"w-5 h-5\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3\",children:filteredIngredients.map(ingredient=>{const defaultEffect=ingredient.defaultEffect;return/*#__PURE__*/_jsxs(\"button\",{className:\"p-3 rounded-lg text-left transition-all duration-200\\r bg-gray-50 hover:bg-green-50 border border-gray-200 hover:border-green-500\",onClick:()=>{addIngredient(ingredient);setShowSelectIngredient(false);},onMouseEnter:()=>handleIngredientHover(ingredient),onMouseLeave:handleIngredientLeave,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl mr-2\",children:ingredient.emoji||'ðŸ§ª'}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:ingredient.name})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-md font-medium text-gray-700\",children:[\"$\",ingredient.cost]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-start\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-0.5 text-white rounded-full text-xs\",style:{backgroundColor:effectColors[defaultEffect]||'#333'},children:defaultEffect})}),ingredient.interactions&&ingredient.interactions.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-xs text-gray-500\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"bg-blue-50 text-blue-700 px-1 py-0.5 rounded\",children:[ingredient.interactions.length,\" interactions\"]})})]},ingredient.name);})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 flex justify-end\",children:/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300\",onClick:()=>setShowSelectIngredient(false),children:\"Cancel\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-100 text-sm text-blue-800\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"How mixing works:\"}),\" Each ingredient can transform existing effects and add its own effect. The order you add ingredients matters!\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1\",children:\"Each strain can have a maximum of 8 effects. If there's no room for an ingredient's effect, it won't be added.\"})]})]});};export default SequentialIngredientsSelector;","map":{"version":3,"names":["React","useState","PlusCircle","CornerDownRight","Check","RotateCcw","Trash2","XCircle","AlertTriangle","jsx","_jsx","jsxs","_jsxs","SequentialIngredientsSelector","_ref","ingredients","currentMix","currentEffects","mixingHistory","effectColors","additiveEffects","addIngredient","removeLastIngredient","resetMix","finalizeMix","selectedDrugType","simulateAddIngredient","showSelectIngredient","setShowSelectIngredient","hoveredIngredient","setHoveredIngredient","hoveredEffects","setHoveredEffects","isIngredientRelevantForDrugType","ingredient","commonIngredients","includes","name","methSpecificIngredients","cocaineSpecificIngredients","filteredIngredients","filter","handleIngredientHover","simulation","newEffects","handleIngredientLeave","className","children","length","map","effect","idx","style","backgroundColor","Array","fill","_","title","onClick","step","changes","change","changeIdx","effectsAfter","effectIdx","defaultEffect","onMouseEnter","onMouseLeave","emoji","cost","interactions"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/SequentialIngredientsSelector.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PlusCircle, CornerDownRight, Check, RotateCcw, Trash2, XCircle, AlertTriangle } from 'lucide-react';\r\n\r\n// Sequential Ingredients Selector - allows adding one ingredient at a time and shows effects after each step\r\nexport const SequentialIngredientsSelector = ({ \r\n  ingredients, \r\n  currentMix, \r\n  currentEffects,\r\n  mixingHistory,\r\n  effectColors, \r\n  additiveEffects,\r\n  addIngredient,\r\n  removeLastIngredient,\r\n  resetMix,\r\n  finalizeMix,\r\n  selectedDrugType,\r\n  simulateAddIngredient // Optional function to preview effects\r\n}) => {\r\n  const [showSelectIngredient, setShowSelectIngredient] = useState(false);\r\n  const [hoveredIngredient, setHoveredIngredient] = useState(null);\r\n  const [hoveredEffects, setHoveredEffects] = useState(null);\r\n  \r\n  // Helper function to determine if an ingredient is relevant for the selected drug type\r\n  const isIngredientRelevantForDrugType = (ingredient) => {\r\n    // Common ingredients that work with all drug types (first 8 ingredients)\r\n    const commonIngredients = [\r\n      'Cuke', 'Banana', 'Paracetamol', 'Donut', 'Viagra', 'Mouth Wash', 'Flu Medicine', 'Gasoline',\r\n      'Energy Drink', 'Motor Oil', 'Mega Bean', 'Chili', 'Battery', 'Iodine', 'Addy', 'Horse Semen'\r\n    ];\r\n    \r\n    if (commonIngredients.includes(ingredient.name)) {\r\n      return true;\r\n    }\r\n    \r\n    // Drug-specific ingredients\r\n    const methSpecificIngredients = ['Glass Shards', 'Blue Food Coloring'];\r\n    const cocaineSpecificIngredients = ['Baking Soda', 'Caffeine Powder'];\r\n    \r\n    if (selectedDrugType === 'meth' && methSpecificIngredients.includes(ingredient.name)) {\r\n      return true;\r\n    }\r\n    \r\n    if (selectedDrugType === 'cocaine' && cocaineSpecificIngredients.includes(ingredient.name)) {\r\n      return true;\r\n    }\r\n    \r\n    // For weed, show most ingredients except the very specific ones for meth/cocaine\r\n    if (selectedDrugType === 'weed') {\r\n      return !methSpecificIngredients.includes(ingredient.name) && \r\n             !cocaineSpecificIngredients.includes(ingredient.name);\r\n    }\r\n    \r\n    return true;\r\n  };\r\n  \r\n  // Filter ingredients based on drug type\r\n  const filteredIngredients = ingredients.filter(isIngredientRelevantForDrugType);\r\n  \r\n  // Handle ingredient hover to show preview of effects\r\n  const handleIngredientHover = (ingredient) => {\r\n    setHoveredIngredient(ingredient);\r\n    \r\n    if (simulateAddIngredient && currentEffects) {\r\n      const simulation = simulateAddIngredient(currentEffects, ingredient);\r\n      setHoveredEffects(simulation.newEffects);\r\n    }\r\n  };\r\n  \r\n  const handleIngredientLeave = () => {\r\n    setHoveredIngredient(null);\r\n    setHoveredEffects(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h3 className=\"text-md font-medium text-gray-700 mb-2\">Mix Creation Process</h3>\r\n      \r\n      {/* Current Mix Status */}\r\n      <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-200 mb-4\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <h4 className=\"font-medium text-gray-800\">Current Mix Status</h4>\r\n          <div>\r\n            <span className=\"text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">\r\n              Step {currentMix.length}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Current Effects Display */}\r\n        <div className=\"mb-3\">\r\n          <div className=\"text-sm text-gray-700 mb-1\">Current Effects:</div>\r\n          {currentEffects.length > 0 ? (\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {currentEffects.map((effect, idx) => (\r\n                <span\r\n                  key={idx}\r\n                  className=\"px-2 py-1 text-white rounded-full text-xs\"\r\n                  style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                >\r\n                  {effect}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-sm text-gray-500 italic\">No effects yet. Start by adding an ingredient.</div>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Hovered Effects Preview (if available) */}\r\n        {hoveredEffects && (\r\n          <div className=\"mb-3 bg-blue-50 p-2 rounded-md border border-blue-100\">\r\n            <div className=\"text-sm text-blue-700 mb-1 flex items-center\">\r\n              <AlertTriangle className=\"w-4 h-4 mr-1\" />\r\n              Preview: If you add {hoveredIngredient.name}\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {hoveredEffects.map((effect, idx) => (\r\n                <span\r\n                  key={idx}\r\n                  className=\"px-2 py-1 text-white rounded-full text-xs\"\r\n                  style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                >\r\n                  {effect}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Available Effect Slots */}\r\n        <div className=\"mb-3\">\r\n          <div className=\"text-sm text-gray-700 mb-1\">Effect Slots:</div>\r\n          <div className=\"flex items-center gap-1\">\r\n            {Array(8).fill(0).map((_, idx) => (\r\n              <div \r\n                key={idx} \r\n                className={`w-3 h-3 rounded-full ${idx < currentEffects.length ? 'bg-green-500' : 'bg-gray-300'}`}\r\n                title={idx < currentEffects.length ? `Slot ${idx+1}: ${currentEffects[idx]}` : 'Empty slot'}\r\n              />\r\n            ))}\r\n            <span className=\"ml-2 text-xs text-gray-500\">\r\n              {currentEffects.length}/8 slots used\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Action Buttons */}\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <button\r\n            onClick={() => setShowSelectIngredient(true)}\r\n            className=\"px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center text-sm\"\r\n          >\r\n            <PlusCircle className=\"w-4 h-4 mr-1\" />\r\n            Add Ingredient\r\n          </button>\r\n          \r\n          {currentMix.length > 0 && (\r\n            <button\r\n              onClick={removeLastIngredient}\r\n              className=\"px-3 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700 flex items-center text-sm\"\r\n            >\r\n              <RotateCcw className=\"w-4 h-4 mr-1\" />\r\n              Undo Last Step\r\n            </button>\r\n          )}\r\n          \r\n          {currentMix.length > 0 && (\r\n            <button\r\n              onClick={resetMix}\r\n              className=\"px-3 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center text-sm\"\r\n            >\r\n              <Trash2 className=\"w-4 h-4 mr-1\" />\r\n              Reset Mix\r\n            </button>\r\n          )}\r\n          \r\n          {currentMix.length > 0 && (\r\n            <button\r\n              onClick={finalizeMix}\r\n              className=\"px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center text-sm\"\r\n            >\r\n              <Check className=\"w-4 h-4 mr-1\" />\r\n              Finalize Mix\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Mixing History */}\r\n      {mixingHistory && mixingHistory.length > 0 && (\r\n        <div className=\"bg-white p-4 rounded-lg border border-gray-200 mb-4\">\r\n          <h4 className=\"font-medium text-gray-800 mb-3\">Mixing History</h4>\r\n          <div className=\"space-y-3\">\r\n            {mixingHistory.map((step, idx) => (\r\n              <div key={idx} className=\"border-l-2 border-blue-400 pl-3\">\r\n                <div className=\"text-sm font-medium text-gray-700\">\r\n                  Step {step.step}: {step.ingredient}\r\n                </div>\r\n                <div className=\"text-xs text-gray-500 mt-1\">\r\n                  {step.changes.map((change, changeIdx) => (\r\n                    <div key={changeIdx} className=\"flex items-center\">\r\n                      <CornerDownRight className=\"w-3 h-3 mr-1 text-blue-400\" />\r\n                      {change}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-1 flex flex-wrap gap-1\">\r\n                  {step.effectsAfter.map((effect, effectIdx) => (\r\n                    <span\r\n                      key={effectIdx}\r\n                      className=\"px-1.5 py-0.5 text-white rounded-full text-xs\"\r\n                      style={{ backgroundColor: effectColors[effect] || '#333' }}\r\n                    >\r\n                      {effect}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Ingredient Selection Dialog */}\r\n      {showSelectIngredient && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg p-6 max-w-3xl w-full max-h-[80vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">\r\n                Select an Ingredient for Step {currentMix.length + 1}\r\n              </h3>\r\n              <button \r\n                onClick={() => setShowSelectIngredient(false)} \r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <XCircle className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3\">\r\n              {filteredIngredients.map((ingredient) => {\r\n                const defaultEffect = ingredient.defaultEffect;\r\n                \r\n                return (\r\n                  <button\r\n                    key={ingredient.name}\r\n                    className=\"p-3 rounded-lg text-left transition-all duration-200\r\n                      bg-gray-50 hover:bg-green-50 border border-gray-200 hover:border-green-500\"\r\n                    onClick={() => {\r\n                      addIngredient(ingredient);\r\n                      setShowSelectIngredient(false);\r\n                    }}\r\n                    onMouseEnter={() => handleIngredientHover(ingredient)}\r\n                    onMouseLeave={handleIngredientLeave}\r\n                  >\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"text-2xl mr-2\">{ingredient.emoji || 'ðŸ§ª'}</span>\r\n                        <span className=\"font-medium\">{ingredient.name}</span>\r\n                      </div>\r\n                      <span className=\"text-md font-medium text-gray-700\">${ingredient.cost}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-start\">\r\n                      <span\r\n                        className=\"px-2 py-0.5 text-white rounded-full text-xs\"\r\n                        style={{ backgroundColor: effectColors[defaultEffect] || '#333' }}\r\n                      >\r\n                        {defaultEffect}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    {ingredient.interactions && ingredient.interactions.length > 0 && (\r\n                      <div className=\"mt-2 text-xs text-gray-500\">\r\n                        <span className=\"bg-blue-50 text-blue-700 px-1 py-0.5 rounded\">\r\n                          {ingredient.interactions.length} interactions\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n            <div className=\"mt-4 flex justify-end\">\r\n              <button\r\n                className=\"px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300\"\r\n                onClick={() => setShowSelectIngredient(false)}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Info Box */}\r\n      <div className=\"mt-4 p-3 bg-blue-50 rounded-lg border border-blue-100 text-sm text-blue-800\">\r\n        <p><strong>How mixing works:</strong> Each ingredient can transform existing effects and add its own effect. The order you add ingredients matters!</p>\r\n        <p className=\"mt-1\">Each strain can have a maximum of 8 effects. If there's no room for an ingredient's effect, it won't be added.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SequentialIngredientsSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}