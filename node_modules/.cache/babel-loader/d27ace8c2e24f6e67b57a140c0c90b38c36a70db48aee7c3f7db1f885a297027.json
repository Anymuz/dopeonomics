{"ast":null,"code":"// Revised straindata.js with accurate interactions\n// Based on the game mechanics and properly implementing transformations\n\nexport const seedTypes = [\n// Weed seeds\n{\n  name: 'OG Kush Seed',\n  cost: 30,\n  effect: 'Calming',\n  drugType: 'weed'\n}, {\n  name: 'Sour Diesel Seed',\n  cost: 35,\n  effect: 'Refreshing',\n  drugType: 'weed'\n}, {\n  name: 'Green Crack Seed',\n  cost: 40,\n  effect: 'Energizing',\n  drugType: 'weed'\n}, {\n  name: 'Granddaddy Purple Seed',\n  cost: 45,\n  effect: 'Sedating',\n  drugType: 'weed'\n},\n// Meth \"seeds\"\n{\n  name: 'Low-Quality Pseudo',\n  cost: 140,\n  effect: 'Energizing',\n  drugType: 'meth'\n}, {\n  name: 'Standard Pseudo',\n  cost: 160,\n  effect: 'Electrifying',\n  drugType: 'meth'\n}, {\n  name: 'High-Quality Pseudo',\n  cost: 190,\n  effect: 'Bright-Eyed',\n  drugType: 'meth'\n},\n// Cocaine \"seeds\"\n{\n  name: 'Standard Coca Leaves',\n  cost: 210,\n  effect: 'Euphoric',\n  drugType: 'cocaine'\n}, {\n  name: 'Premium Coca Leaves',\n  cost: 210,\n  effect: 'Focused',\n  drugType: 'cocaine'\n}, {\n  name: 'Heavenly Coca Leaves',\n  cost: 210,\n  effect: 'Thought-Provoking',\n  drugType: 'cocaine'\n}];\nexport const ingredients = [{\n  name: 'Cuke',\n  cost: 2,\n  emoji: 'ü•§',\n  defaultEffect: 'Energizing',\n  interactions: [{\n    if: 'Toxic',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Slippery',\n    replaceWith: 'Munchies'\n  }, {\n    if: 'Sneaky',\n    replaceWith: 'Paranoia'\n  }, {\n    if: 'Foggy',\n    replaceWith: 'Cyclopean'\n  }, {\n    if: 'Gingeritis',\n    replaceWith: 'Thought-Provoking'\n  }, {\n    if: 'Munchies',\n    replaceWith: 'Athletic'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Laxative'\n  }]\n}, {\n  name: 'Banana',\n  cost: 2,\n  emoji: 'üçå',\n  defaultEffect: 'Gingeritis',\n  interactions: [{\n    if: 'Energizing',\n    replaceWith: 'Thought-Provoking'\n  }, {\n    if: 'Calming',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Toxic',\n    replaceWith: 'Smelly'\n  }, {\n    if: 'Long-Faced',\n    replaceWith: 'Refreshing'\n  }, {\n    if: 'Cyclopean',\n    replaceWith: 'Thought-Provoking'\n  }, {\n    if: 'Disorienting',\n    replaceWith: 'Focused'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Seizure-Inducing'\n  }, {\n    if: 'Paranoia',\n    replaceWith: 'Jennerising'\n  }, {\n    if: 'Smelly',\n    replaceWith: 'Anti-Gravity'\n  }]\n}, {\n  name: 'Paracetamol',\n  cost: 3,\n  emoji: '‚ö™',\n  defaultEffect: 'Sneaky',\n  interactions: [{\n    if: 'Energizing',\n    replaceWith: 'Paranoia'\n  }, {\n    if: 'Calming',\n    replaceWith: 'Slippery'\n  }, {\n    if: 'Toxic',\n    replaceWith: 'Tropic Thunder'\n  }, {\n    if: 'Spicy',\n    replaceWith: 'Bright-Eyed'\n  }, {\n    if: 'Glowing',\n    replaceWith: 'Toxic'\n  }, {\n    if: 'Foggy',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Munchies',\n    replaceWith: 'Anti-Gravity'\n  }, {\n    if: 'Paranoia',\n    replaceWith: 'Balding'\n  }, {\n    if: 'Electrifying',\n    replaceWith: 'Athletic'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Gingeritis'\n  }]\n}, {\n  name: 'Donut',\n  cost: 3,\n  emoji: 'üç©',\n  defaultEffect: 'Calorie-Dense',\n  interactions: [{\n    if: 'Calorie-Dense',\n    replaceWith: 'Explosive'\n  }, {\n    if: 'Balding',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Anti-Gravity',\n    replaceWith: 'Slippery'\n  }, {\n    if: 'Jennerising',\n    replaceWith: 'Gingeritis'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Shrinking',\n    replaceWith: 'Energizing'\n  }]\n}, {\n  name: 'Viagra',\n  cost: 4,\n  emoji: 'üçÜ',\n  defaultEffect: 'Tropic Thunder',\n  interactions: [{\n    if: 'Athletic',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Bright-Eyed'\n  }, {\n    if: 'Laxative',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Disorienting',\n    replaceWith: 'Toxic'\n  }]\n}, {\n  name: 'Mouth Wash',\n  cost: 4,\n  emoji: 'üíß',\n  defaultEffect: 'Balding',\n  interactions: [{\n    if: 'Calming',\n    replaceWith: 'Anti-Gravity'\n  }, {\n    if: 'Calorie-Dense',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Explosive',\n    replaceWith: 'Sedating'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Jennerising'\n  }]\n}, {\n  name: 'Flu Medicine',\n  cost: 5,\n  emoji: 'üçá',\n  defaultEffect: 'Sedating',\n  interactions: [{\n    if: 'Calming',\n    replaceWith: 'Bright-Eyed'\n  }, {\n    if: 'Athletic',\n    replaceWith: 'Munchies'\n  }, {\n    if: 'Thought-Provoking',\n    replaceWith: 'Gingeritis'\n  }, {\n    if: 'Cyclopean',\n    replaceWith: 'Foggy'\n  }, {\n    if: 'Munchies',\n    replaceWith: 'Slippery'\n  }, {\n    if: 'Laxative',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Toxic'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Electrifying',\n    replaceWith: 'Refreshing'\n  }, {\n    if: 'Shrinking',\n    replaceWith: 'Paranoia'\n  }]\n}, {\n  name: 'Gasoline',\n  cost: 5,\n  emoji: '‚õΩ',\n  defaultEffect: 'Toxic',\n  interactions: [{\n    if: 'Gingeritis',\n    replaceWith: 'Smelly'\n  }, {\n    if: 'Jennerising',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Sneaky',\n    replaceWith: 'Tropic Thunder'\n  }, {\n    if: 'Munchies',\n    replaceWith: 'Sedating'\n  }, {\n    if: 'Energizing',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Energizing'\n  }, {\n    if: 'Laxative',\n    replaceWith: 'Foggy'\n  }, {\n    if: 'Disorienting',\n    replaceWith: 'Glowing'\n  }, {\n    if: 'Paranoia',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Electrifying',\n    replaceWith: 'Disorienting'\n  }, {\n    if: 'Shrinking',\n    replaceWith: 'Focused'\n  }]\n}, {\n  name: 'Energy Drink',\n  cost: 6,\n  emoji: 'üêÇ',\n  defaultEffect: 'Athletic',\n  interactions: [{\n    if: 'Sedating',\n    replaceWith: 'Munchies'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Energizing'\n  }, {\n    if: 'Spicy',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Tropic Thunder',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Glowing',\n    replaceWith: 'Disorienting'\n  }, {\n    if: 'Foggy',\n    replaceWith: 'Laxative'\n  }, {\n    if: 'Disorienting',\n    replaceWith: 'Electrifying'\n  }, {\n    if: 'Schizophrenia',\n    replaceWith: 'Balding'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Shrinking'\n  }]\n}, {\n  name: 'Motor Oil',\n  cost: 6,\n  emoji: 'üõ¢Ô∏è',\n  defaultEffect: 'Slippery',\n  interactions: [{\n    if: 'Energizing',\n    replaceWith: 'Munchies'\n  }, {\n    if: 'Foggy',\n    replaceWith: 'Toxic'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Sedating'\n  }, {\n    if: 'Paranoia',\n    replaceWith: 'Anti-Gravity'\n  }, {\n    if: 'Munchies',\n    replaceWith: 'Schizophrenia'\n  }]\n}, {\n  name: 'Mega Bean',\n  cost: 7,\n  emoji: 'ü´õ',\n  defaultEffect: 'Foggy',\n  interactions: [{\n    if: 'Energizing',\n    replaceWith: 'Cyclopean'\n  }, {\n    if: 'Calming',\n    replaceWith: 'Glowing'\n  }, {\n    if: 'Athletic',\n    replaceWith: 'Laxative'\n  }, {\n    if: 'Sneaky',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Jennerising',\n    replaceWith: 'Paranoia'\n  }, {\n    if: 'Slippery',\n    replaceWith: 'Toxic'\n  }, {\n    if: 'Thought-Provoking',\n    replaceWith: 'Energizing'\n  }, {\n    if: 'Seizure-Inducing',\n    replaceWith: 'Focused'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Disorienting'\n  }, {\n    if: 'Shrinking',\n    replaceWith: 'Electrifying'\n  }]\n}, {\n  name: 'Chili',\n  cost: 7,\n  emoji: 'üå∂Ô∏è',\n  defaultEffect: 'Spicy',\n  interactions: [{\n    if: 'Athletic',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Anti-Gravity',\n    replaceWith: 'Tropic Thunder'\n  }, {\n    if: 'Sneaky',\n    replaceWith: 'Bright-Eyed'\n  }, {\n    if: 'Munchies',\n    replaceWith: 'Toxic'\n  }, {\n    if: 'Laxative',\n    replaceWith: 'Long-Faced'\n  }, {\n    if: 'Shrinking',\n    replaceWith: 'Refreshing'\n  }]\n}, {\n  name: 'Battery',\n  cost: 8,\n  emoji: 'üîã',\n  defaultEffect: 'Bright-Eyed',\n  interactions: [{\n    if: 'Munchies',\n    replaceWith: 'Tropic Thunder'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Zombifying'\n  }, {\n    if: 'Electrifying',\n    replaceWith: 'Euphoric'\n  }, {\n    if: 'Laxative',\n    replaceWith: 'Calorie-Dense'\n  }, {\n    if: 'Cyclopean',\n    replaceWith: 'Glowing'\n  }, {\n    if: 'Shrinking',\n    replaceWith: 'Munchies'\n  }]\n}, {\n  name: 'Iodine',\n  cost: 8,\n  emoji: 'üü†',\n  defaultEffect: 'Jennerising',\n  interactions: [{\n    if: 'Calming',\n    replaceWith: 'Balding'\n  }, {\n    if: 'Toxic',\n    replaceWith: 'Sneaky'\n  }, {\n    if: 'Foggy',\n    replaceWith: 'Paranoia'\n  }, {\n    if: 'Calorie-Dense',\n    replaceWith: 'Gingeritis'\n  }, {\n    if: 'Euphoric',\n    replaceWith: 'Seizure-Inducing'\n  }, {\n    if: 'Refreshing',\n    replaceWith: 'Thought-Provoking'\n  }]\n}, {\n  name: 'Addy',\n  cost: 9,\n  emoji: 'üíä',\n  defaultEffect: 'Thought-Provoking',\n  interactions: [{\n    if: 'Sedating',\n    replaceWith: 'Gingeritis'\n  }, {\n    if: 'Long-Faced',\n    replaceWith: 'Electrifying'\n  }, {\n    if: 'Glowing',\n    replaceWith: 'Refreshing'\n  }, {\n    if: 'Foggy',\n    replaceWith: 'Energizing'\n  }, {\n    if: 'Explosive',\n    replaceWith: 'Euphoric'\n  }]\n}, {\n  name: 'Horse Semen',\n  cost: 9,\n  emoji: 'üê¥',\n  defaultEffect: 'Long-Faced',\n  interactions: [{\n    if: 'Anti-Gravity',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Gingeritis',\n    replaceWith: 'Refreshing'\n  }, {\n    if: 'Thought-Provoking',\n    replaceWith: 'Electrifying'\n  }]\n},\n// Meth-specific ingredients\n{\n  name: 'Glass Shards',\n  cost: 10,\n  emoji: 'üîç',\n  defaultEffect: 'Explosive',\n  interactions: [{\n    if: 'Energizing',\n    replaceWith: 'Electrifying'\n  }, {\n    if: 'Bright-Eyed',\n    replaceWith: 'Explosive'\n  }]\n}, {\n  name: 'Blue Food Coloring',\n  cost: 12,\n  emoji: 'üîµ',\n  defaultEffect: 'Glowing',\n  interactions: [{\n    if: 'Energizing',\n    replaceWith: 'Calming'\n  }, {\n    if: 'Electrifying',\n    replaceWith: 'Glowing'\n  }]\n},\n// Cocaine-specific ingredients\n{\n  name: 'Baking Soda',\n  cost: 8,\n  emoji: 'üßÇ',\n  defaultEffect: 'Euphoric',\n  interactions: [{\n    if: 'Euphoric',\n    replaceWith: 'Energizing'\n  }, {\n    if: 'Focused',\n    replaceWith: 'Athletic'\n  }]\n}, {\n  name: 'Caffeine Powder',\n  cost: 15,\n  emoji: '‚òï',\n  defaultEffect: 'Energizing',\n  interactions: [{\n    if: 'Euphoric',\n    replaceWith: 'Bright-Eyed'\n  }, {\n    if: 'Thought-Provoking',\n    replaceWith: 'Energizing'\n  }]\n}];\n\n// For backwards compatibility with existing code\nexport const additiveEffects = ingredients.reduce((acc, ingredient) => {\n  acc[ingredient.name] = ingredient.defaultEffect;\n  return acc;\n}, {});\nexport const effectColors = {\n  'Anti-Gravity': '#143371',\n  'Athletic': '#4d85a8',\n  'Balding': '#735620',\n  'Bright-Eyed': '#8bc7d2',\n  'Calming': '#bda588',\n  'Calorie-Dense': '#a3569f',\n  'Cyclopean': '#9c784a',\n  'Disorienting': '#964733',\n  'Electrifying': '#3680a3',\n  'Energizing': '#65a94b',\n  'Euphoric': '#898043',\n  'Explosive': '#932d29',\n  'Focused': '#41868f',\n  'Foggy': '#686a6b',\n  'Gingeritis': '#9c551c',\n  'Glowing': '#538e3a',\n  'Jennerising': '#925292',\n  'Laxative': '#4c281a',\n  'Lethal': '#6c1f1a',\n  'Long-Faced': '#8b7839',\n  'Munchies': '#8b7839',\n  'Paranoia': '#733e3d',\n  'Refreshing': '#608955',\n  'Schizophrenia': '#302d7d',\n  'Sedating': '#302c63',\n  'Seizure-Inducing': '#817804',\n  'Shrinking': '#689280',\n  'Slippery': '#5d8195',\n  'Smelly': '#4f7822',\n  'Sneaky': '#474849',\n  'Spicy': '#984231',\n  'Thought-Provoking': '#a86b88',\n  'Toxic': '#3d6523',\n  'Tropic Thunder': '#8c592b',\n  'Zombifying': '#558248'\n};\n\n// Drug type information\nexport const drugTypes = {\n  'weed': {\n    name: 'Weed',\n    emoji: 'üåø',\n    basePrice: 35,\n    description: 'Classic cannabis. Each seed produces 12 buds.',\n    yieldAmount: 12,\n    unit: 'buds'\n  },\n  'meth': {\n    name: 'Meth',\n    emoji: 'üíé',\n    basePrice: 70,\n    description: 'Crystal methamphetamine. Each batch produces 10 crystals.',\n    yieldAmount: 10,\n    unit: 'crystals'\n  },\n  'cocaine': {\n    name: 'Cocaine',\n    emoji: '‚ùÑÔ∏è',\n    basePrice: 90,\n    description: 'Refined cocaine powder. Each batch produces 10 grams.',\n    yieldAmount: 10,\n    unit: 'grams'\n  }\n};\nexport const effectDetails = {\n  'Anti-Gravity': {\n    multiplier: 0.54,\n    type: 'Ability',\n    description: 'Causes user to jump higher.'\n  },\n  'Athletic': {\n    multiplier: 0.32,\n    type: 'Ability',\n    description: 'Causes user to run faster.'\n  },\n  'Balding': {\n    multiplier: 0.30,\n    type: 'Cosmetic',\n    description: 'Causes user to be bald.'\n  },\n  'Bright-Eyed': {\n    multiplier: 0.40,\n    type: 'Ability',\n    description: 'Causes user\\'s eyes to shine flashlight beams.'\n  },\n  'Calming': {\n    multiplier: 0.10,\n    type: 'Cosmetic',\n    description: 'Causes user to have chromatic aberration around screen.'\n  },\n  'Calorie-Dense': {\n    multiplier: 0.28,\n    type: 'Cosmetic',\n    description: 'Causes user to appear fat.'\n  },\n  'Cyclopean': {\n    multiplier: 0.56,\n    type: 'Cosmetic',\n    description: 'Causes user to only have one eye.'\n  },\n  'Disorienting': {\n    multiplier: 0.00,\n    type: 'Ability',\n    description: 'Causes camera controls for up and down and movement controls for left and right to be inverted.'\n  },\n  'Electrifying': {\n    multiplier: 0.50,\n    type: 'Cosmetic',\n    description: 'Causes lightning effect on user.'\n  },\n  'Energizing': {\n    multiplier: 0.22,\n    type: 'Ability',\n    description: 'Causes user to run faster.'\n  },\n  'Euphoric': {\n    multiplier: 0.18,\n    type: 'Cosmetic',\n    description: 'Causes visual effects and improved mood.'\n  },\n  'Explosive': {\n    multiplier: 0.00,\n    type: 'Ability',\n    description: 'Causes user to explode after ticking countdown, killing the user and damaging NPCs in the vicinity.'\n  },\n  'Focused': {\n    multiplier: 0.16,\n    type: 'Cosmetic',\n    description: 'Causes user to have chromatic aberration around screen.'\n  },\n  'Foggy': {\n    multiplier: 0.36,\n    type: 'Cosmetic',\n    description: 'Causes a fog cloud effect around user. Also causes user to perceive the world as extremely foggy, significantly limiting visibility.'\n  },\n  'Gingeritis': {\n    multiplier: 0.20,\n    type: 'Cosmetic',\n    description: 'Causes user to have red hair.'\n  },\n  'Glowing': {\n    multiplier: 0.48,\n    type: 'Cosmetic',\n    description: 'Causes user to have a radioactive glow.'\n  },\n  'Jennerising': {\n    multiplier: 0.42,\n    type: 'Cosmetic',\n    description: 'Causes user to appear female.'\n  },\n  'Laxative': {\n    multiplier: 0.00,\n    type: 'Cosmetic',\n    description: 'Causes user to constantly soil themselves.'\n  },\n  'Long-Faced': {\n    multiplier: 0.52,\n    type: 'Cosmetic',\n    description: 'Causes user\\'s neck and face to grow.'\n  },\n  'Munchies': {\n    multiplier: 0.12,\n    type: 'Ability',\n    description: 'Causes user to feel hungry.'\n  },\n  'Paranoia': {\n    multiplier: 0.00,\n    type: 'Ability',\n    description: 'Causes user to experience paranoia effects.'\n  },\n  'Refreshing': {\n    multiplier: 0.14,\n    type: 'Ability',\n    description: 'Causes rejuvenating effects.'\n  },\n  'Schizophrenia': {\n    multiplier: 0.00,\n    type: 'Ability',\n    description: 'Causes user to hear voices and see things.'\n  },\n  'Sedating': {\n    multiplier: 0.26,\n    type: 'Cosmetic',\n    description: 'Causes user to have a vignette around screen and mouse smoothing.'\n  },\n  'Seizure-Inducing': {\n    multiplier: 0.00,\n    type: 'Cosmetic',\n    description: 'Causes user to have a seizure and shake on the ground.'\n  },\n  'Shrinking': {\n    multiplier: 0.60,\n    type: 'Cosmetic',\n    description: 'Causes user to shrink.'\n  },\n  'Slippery': {\n    multiplier: 0.34,\n    type: 'Ability',\n    description: 'Causes user to have sluggish, slippery movement.'\n  },\n  'Smelly': {\n    multiplier: 0.00,\n    type: 'Cosmetic',\n    description: 'Causes user to have a stinky cloud around them.'\n  },\n  'Sneaky': {\n    multiplier: 0.24,\n    type: 'Ability',\n    description: 'Improves stealth capabilities.'\n  },\n  'Spicy': {\n    multiplier: 0.38,\n    type: 'Cosmetic',\n    description: 'Causes user\\'s head to light on fire.'\n  },\n  'Thought-Provoking': {\n    multiplier: 0.44,\n    type: 'Cosmetic',\n    description: 'Causes user\\'s head to grow in size.'\n  },\n  'Toxic': {\n    multiplier: 0.00,\n    type: 'Cosmetic',\n    description: 'Causes user to vomit.'\n  },\n  'Tropic Thunder': {\n    multiplier: 0.46,\n    type: 'Cosmetic',\n    description: 'Causes user to have black skin.'\n  },\n  'Zombifying': {\n    multiplier: 0.58,\n    type: 'Cosmetic',\n    description: 'Causes user to have green skin and have a zombie-like voice.'\n  }\n};\nexport const calculateEffectMultiplier = currentEffects => {\n  // Add a safety check to ensure currentEffects is an array\n  if (!currentEffects || !Array.isArray(currentEffects) || currentEffects.length === 0) {\n    return 0;\n  }\n\n  // Sum up the multipliers for all effects\n  return currentEffects.reduce((total, effect) => {\n    var _effectDetails$effect;\n    return total + (((_effectDetails$effect = effectDetails[effect]) === null || _effectDetails$effect === void 0 ? void 0 : _effectDetails$effect.multiplier) || 0);\n  }, 0);\n};\n\n// Updated sequential mixing function with proper interaction application\nexport const calculateStrainEffects = (seedEffect, ingredientsSequence) => {\n  if (!seedEffect || !ingredientsSequence || ingredientsSequence.length === 0) {\n    return {\n      finalEffects: seedEffect ? [seedEffect] : [],\n      mixingHistory: seedEffect ? [{\n        step: 0,\n        ingredient: \"Base Seed\",\n        effectsBefore: [],\n        effectsAfter: [seedEffect],\n        changes: [`Added ${seedEffect}`]\n      }] : []\n    };\n  }\n\n  // Start with the seed effect\n  let currentEffects = [seedEffect];\n\n  // Store the history of effect changes for UI display\n  const mixingHistory = [{\n    step: 0,\n    ingredient: \"Base Seed\",\n    effectsBefore: [],\n    effectsAfter: [...currentEffects],\n    changes: [`Added ${seedEffect}`]\n  }];\n\n  // Process each ingredient one by one in sequence\n  ingredientsSequence.forEach((ingredient, index) => {\n    const effectsBefore = [...currentEffects];\n\n    // 1. Apply interactions (transformations) based on this ingredient\n    if (ingredient.interactions && ingredient.interactions.length > 0) {\n      // Create a new array for the effects after transformations\n      let transformedEffects = [...currentEffects];\n\n      // For each interaction rule, check if the effect exists and transform it\n      // ONLY if the replacement effect is not already present\n      ingredient.interactions.forEach(interaction => {\n        const effectIndex = transformedEffects.findIndex(effect => effect === interaction.if);\n\n        // Only apply transformation if:\n        // 1. The target effect exists AND\n        // 2. The replacement effect is NOT already in the effects list\n        if (effectIndex !== -1 && !transformedEffects.includes(interaction.replaceWith)) {\n          transformedEffects[effectIndex] = interaction.replaceWith;\n        }\n      });\n      currentEffects = transformedEffects;\n    }\n\n    // Track what effects changed due to interactions\n    const transformations = [];\n    for (let i = 0; i < Math.min(effectsBefore.length, currentEffects.length); i++) {\n      if (currentEffects[i] !== effectsBefore[i]) {\n        transformations.push(`${effectsBefore[i]} ‚Üí ${currentEffects[i]}`);\n      }\n    }\n\n    // 2. Add the ingredient's default effect if not already present and under the 8 effects limit\n    const defaultEffect = ingredient.defaultEffect;\n    if (defaultEffect && currentEffects.length < 8 && !currentEffects.includes(defaultEffect)) {\n      currentEffects.push(defaultEffect);\n      transformations.push(`Added ${defaultEffect}`);\n    }\n\n    // Limit to maximum 8 effects\n    if (currentEffects.length > 8) {\n      const removed = currentEffects.slice(8);\n      currentEffects = currentEffects.slice(0, 8);\n      transformations.push(`Removed effects due to 8-effect limit: ${removed.join(', ')}`);\n    }\n\n    // Record this step in the mixing history\n    mixingHistory.push({\n      step: index + 1,\n      ingredient: ingredient.name,\n      effectsBefore: effectsBefore,\n      effectsAfter: [...currentEffects],\n      changes: transformations.length > 0 ? transformations : [\"No change\"]\n    });\n  });\n\n  // Return both the final effects and the history for UI display\n  return {\n    finalEffects: currentEffects,\n    mixingHistory: mixingHistory\n  };\n};\n\n// Helper function to check what would happen if we add a specific ingredient next\nexport const simulateAddIngredient = (currentEffects, ingredient) => {\n  if (!currentEffects || !ingredient) return {\n    newEffects: [...currentEffects]\n  };\n\n  // Clone current effects\n  let newEffects = [...currentEffects];\n  const transformations = [];\n\n  // Apply interactions\n  if (ingredient.interactions && ingredient.interactions.length > 0) {\n    ingredient.interactions.forEach(interaction => {\n      const effectIndex = newEffects.findIndex(effect => effect === interaction.if);\n\n      // Only apply transformation if:\n      // 1. The target effect exists AND \n      // 2. The replacement effect is NOT already in the effects list\n      if (effectIndex !== -1 && !newEffects.includes(interaction.replaceWith)) {\n        const oldEffect = newEffects[effectIndex];\n        newEffects[effectIndex] = interaction.replaceWith;\n        transformations.push({\n          from: oldEffect,\n          to: interaction.replaceWith\n        });\n      }\n    });\n  }\n\n  // Add default effect if possible\n  let addedDefaultEffect = false;\n  if (ingredient.defaultEffect && newEffects.length < 8 && !newEffects.includes(ingredient.defaultEffect)) {\n    newEffects.push(ingredient.defaultEffect);\n    addedDefaultEffect = true;\n  }\n  return {\n    newEffects,\n    transformations,\n    addedDefaultEffect,\n    defaultEffect: ingredient.defaultEffect\n  };\n};","map":{"version":3,"names":["seedTypes","name","cost","effect","drugType","ingredients","emoji","defaultEffect","interactions","if","replaceWith","additiveEffects","reduce","acc","ingredient","effectColors","drugTypes","basePrice","description","yieldAmount","unit","effectDetails","multiplier","type","calculateEffectMultiplier","currentEffects","Array","isArray","length","total","_effectDetails$effect","calculateStrainEffects","seedEffect","ingredientsSequence","finalEffects","mixingHistory","step","effectsBefore","effectsAfter","changes","forEach","index","transformedEffects","interaction","effectIndex","findIndex","includes","transformations","i","Math","min","push","removed","slice","join","simulateAddIngredient","newEffects","oldEffect","from","to","addedDefaultEffect"],"sources":["C:/Users/joshu/OneDrive/Documents/_Technical Projects/Doponomics/dopeonomics/src/straindata.js"],"sourcesContent":["// Revised straindata.js with accurate interactions\r\n// Based on the game mechanics and properly implementing transformations\r\n\r\nexport const seedTypes = [\r\n  // Weed seeds\r\n  { name: 'OG Kush Seed', cost: 30, effect: 'Calming', drugType: 'weed' },\r\n  { name: 'Sour Diesel Seed', cost: 35, effect: 'Refreshing', drugType: 'weed' },\r\n  { name: 'Green Crack Seed', cost: 40, effect: 'Energizing', drugType: 'weed' },\r\n  { name: 'Granddaddy Purple Seed', cost: 45, effect: 'Sedating', drugType: 'weed' },\r\n  \r\n  // Meth \"seeds\"\r\n  { name: 'Low-Quality Pseudo', cost: 140, effect: 'Energizing', drugType: 'meth' },\r\n  { name: 'Standard Pseudo', cost: 160, effect: 'Electrifying', drugType: 'meth' },\r\n  { name: 'High-Quality Pseudo', cost: 190, effect: 'Bright-Eyed', drugType: 'meth' },\r\n  \r\n  // Cocaine \"seeds\"\r\n  { name: 'Standard Coca Leaves', cost: 210, effect: 'Euphoric', drugType: 'cocaine' },\r\n  { name: 'Premium Coca Leaves', cost: 210, effect: 'Focused', drugType: 'cocaine' },\r\n  { name: 'Heavenly Coca Leaves', cost: 210, effect: 'Thought-Provoking', drugType: 'cocaine' }\r\n];\r\n\r\nexport const ingredients = [\r\n    { \r\n      name: 'Cuke', \r\n      cost: 2, \r\n      emoji: 'ü•§', \r\n      defaultEffect: 'Energizing',\r\n      interactions: [\r\n        { if: 'Toxic', replaceWith: 'Euphoric' },\r\n        { if: 'Slippery', replaceWith: 'Munchies' },\r\n        { if: 'Sneaky', replaceWith: 'Paranoia' },\r\n        { if: 'Foggy', replaceWith: 'Cyclopean' },\r\n        { if: 'Gingeritis', replaceWith: 'Thought-Provoking' },\r\n        { if: 'Munchies', replaceWith: 'Athletic' },\r\n        { if: 'Euphoric', replaceWith: 'Laxative' }\r\n      ] \r\n    },\r\n    { \r\n      name: 'Banana', \r\n      cost: 2, \r\n      emoji: 'üçå',\r\n      defaultEffect: 'Gingeritis',\r\n      interactions: [\r\n        { if: 'Energizing', replaceWith: 'Thought-Provoking' },\r\n        { if: 'Calming', replaceWith: 'Sneaky' },\r\n        { if: 'Toxic', replaceWith: 'Smelly' },\r\n        { if: 'Long-Faced', replaceWith: 'Refreshing' },\r\n        { if: 'Cyclopean', replaceWith: 'Thought-Provoking' },\r\n        { if: 'Disorienting', replaceWith: 'Focused' },\r\n        { if: 'Focused', replaceWith: 'Seizure-Inducing' },\r\n        { if: 'Paranoia', replaceWith: 'Jennerising' },\r\n        { if: 'Smelly', replaceWith: 'Anti-Gravity' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Paracetamol', \r\n      cost: 3, \r\n      emoji: '‚ö™',\r\n      defaultEffect: 'Sneaky',\r\n      interactions: [\r\n        { if: 'Energizing', replaceWith: 'Paranoia' },\r\n        { if: 'Calming', replaceWith: 'Slippery' },\r\n        { if: 'Toxic', replaceWith: 'Tropic Thunder' },\r\n        { if: 'Spicy', replaceWith: 'Bright-Eyed' },\r\n        { if: 'Glowing', replaceWith: 'Toxic' },\r\n        { if: 'Foggy', replaceWith: 'Calming' },\r\n        { if: 'Munchies', replaceWith: 'Anti-Gravity' },\r\n        { if: 'Paranoia', replaceWith: 'Balding' },\r\n        { if: 'Electrifying', replaceWith: 'Athletic' },\r\n        { if: 'Focused', replaceWith: 'Gingeritis' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Donut', \r\n      cost: 3, \r\n      emoji: 'üç©',\r\n      defaultEffect: 'Calorie-Dense',\r\n      interactions: [\r\n        { if: 'Calorie-Dense', replaceWith: 'Explosive' },\r\n        { if: 'Balding', replaceWith: 'Sneaky' },\r\n        { if: 'Anti-Gravity', replaceWith: 'Slippery' },\r\n        { if: 'Jennerising', replaceWith: 'Gingeritis' },\r\n        { if: 'Focused', replaceWith: 'Euphoric' },\r\n        { if: 'Shrinking', replaceWith: 'Energizing' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Viagra', \r\n      cost: 4, \r\n      emoji: 'üçÜ',\r\n      defaultEffect: 'Tropic Thunder',\r\n      interactions: [\r\n        { if: 'Athletic', replaceWith: 'Sneaky' },\r\n        { if: 'Euphoric', replaceWith: 'Bright-Eyed' },\r\n        { if: 'Laxative', replaceWith: 'Calming' },\r\n        { if: 'Disorienting', replaceWith: 'Toxic' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Mouth Wash', \r\n      cost: 4, \r\n      emoji: 'üíß',\r\n      defaultEffect: 'Balding',\r\n      interactions: [\r\n        { if: 'Calming', replaceWith: 'Anti-Gravity' },\r\n        { if: 'Calorie-Dense', replaceWith: 'Sneaky' },\r\n        { if: 'Explosive', replaceWith: 'Sedating' },\r\n        { if: 'Focused', replaceWith: 'Jennerising' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Flu Medicine', \r\n      cost: 5, \r\n      emoji: 'üçá',\r\n      defaultEffect: 'Sedating',\r\n      interactions: [\r\n        { if: 'Calming', replaceWith: 'Bright-Eyed' },\r\n        { if: 'Athletic', replaceWith: 'Munchies' },\r\n        { if: 'Thought-Provoking', replaceWith: 'Gingeritis' },\r\n        { if: 'Cyclopean', replaceWith: 'Foggy' },\r\n        { if: 'Munchies', replaceWith: 'Slippery' },\r\n        { if: 'Laxative', replaceWith: 'Euphoric' },\r\n        { if: 'Euphoric', replaceWith: 'Toxic' },\r\n        { if: 'Focused', replaceWith: 'Calming' },\r\n        { if: 'Electrifying', replaceWith: 'Refreshing' },\r\n        { if: 'Shrinking', replaceWith: 'Paranoia' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Gasoline', \r\n      cost: 5, \r\n      emoji: '‚õΩ',\r\n      defaultEffect: 'Toxic',\r\n      interactions: [\r\n        { if: 'Gingeritis', replaceWith: 'Smelly' },\r\n        { if: 'Jennerising', replaceWith: 'Sneaky' },\r\n        { if: 'Sneaky', replaceWith: 'Tropic Thunder' },\r\n        { if: 'Munchies', replaceWith: 'Sedating' },\r\n        { if: 'Energizing', replaceWith: 'Euphoric' },\r\n        { if: 'Euphoric', replaceWith: 'Energizing' },\r\n        { if: 'Laxative', replaceWith: 'Foggy' },\r\n        { if: 'Disorienting', replaceWith: 'Glowing' },\r\n        { if: 'Paranoia', replaceWith: 'Calming' },\r\n        { if: 'Electrifying', replaceWith: 'Disorienting' },\r\n        { if: 'Shrinking', replaceWith: 'Focused' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Energy Drink', \r\n      cost: 6, \r\n      emoji: 'üêÇ',\r\n      defaultEffect: 'Athletic',\r\n      interactions: [\r\n        { if: 'Sedating', replaceWith: 'Munchies' },\r\n        { if: 'Euphoric', replaceWith: 'Energizing' },\r\n        { if: 'Spicy', replaceWith: 'Euphoric' },\r\n        { if: 'Tropic Thunder', replaceWith: 'Sneaky' },\r\n        { if: 'Glowing', replaceWith: 'Disorienting' },\r\n        { if: 'Foggy', replaceWith: 'Laxative' },\r\n        { if: 'Disorienting', replaceWith: 'Electrifying' },\r\n        { if: 'Schizophrenia', replaceWith: 'Balding' },\r\n        { if: 'Focused', replaceWith: 'Shrinking' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Motor Oil', \r\n      cost: 6, \r\n      emoji: 'üõ¢Ô∏è',\r\n      defaultEffect: 'Slippery',\r\n      interactions: [\r\n        { if: 'Energizing', replaceWith: 'Munchies' },\r\n        { if: 'Foggy', replaceWith: 'Toxic' },\r\n        { if: 'Euphoric', replaceWith: 'Sedating' },\r\n        { if: 'Paranoia', replaceWith: 'Anti-Gravity' },\r\n        { if: 'Munchies', replaceWith: 'Schizophrenia' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Mega Bean', \r\n      cost: 7, \r\n      emoji: 'ü´õ',\r\n      defaultEffect: 'Foggy',\r\n      interactions: [\r\n        { if: 'Energizing', replaceWith: 'Cyclopean' },\r\n        { if: 'Calming', replaceWith: 'Glowing' },\r\n        { if: 'Athletic', replaceWith: 'Laxative' },\r\n        { if: 'Sneaky', replaceWith: 'Calming' },\r\n        { if: 'Jennerising', replaceWith: 'Paranoia' },\r\n        { if: 'Slippery', replaceWith: 'Toxic' },\r\n        { if: 'Thought-Provoking', replaceWith: 'Energizing' },\r\n        { if: 'Seizure-Inducing', replaceWith: 'Focused' },\r\n        { if: 'Focused', replaceWith: 'Disorienting' },\r\n        { if: 'Shrinking', replaceWith: 'Electrifying' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Chili', \r\n      cost: 7, \r\n      emoji: 'üå∂Ô∏è',\r\n      defaultEffect: 'Spicy',\r\n      interactions: [\r\n        { if: 'Athletic', replaceWith: 'Euphoric' },\r\n        { if: 'Anti-Gravity', replaceWith: 'Tropic Thunder' },\r\n        { if: 'Sneaky', replaceWith: 'Bright-Eyed' },\r\n        { if: 'Munchies', replaceWith: 'Toxic' },\r\n        { if: 'Laxative', replaceWith: 'Long-Faced' },\r\n        { if: 'Shrinking', replaceWith: 'Refreshing' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Battery', \r\n      cost: 8, \r\n      emoji: 'üîã',\r\n      defaultEffect: 'Bright-Eyed',\r\n      interactions: [\r\n        { if: 'Munchies', replaceWith: 'Tropic Thunder' },\r\n        { if: 'Euphoric', replaceWith: 'Zombifying' },\r\n        { if: 'Electrifying', replaceWith: 'Euphoric' },\r\n        { if: 'Laxative', replaceWith: 'Calorie-Dense' },\r\n        { if: 'Cyclopean', replaceWith: 'Glowing' },\r\n        { if: 'Shrinking', replaceWith: 'Munchies' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Iodine', \r\n      cost: 8, \r\n      emoji: 'üü†',\r\n      defaultEffect: 'Jennerising',\r\n      interactions: [\r\n        { if: 'Calming', replaceWith: 'Balding' },\r\n        { if: 'Toxic', replaceWith: 'Sneaky' },\r\n        { if: 'Foggy', replaceWith: 'Paranoia' },\r\n        { if: 'Calorie-Dense', replaceWith: 'Gingeritis' },\r\n        { if: 'Euphoric', replaceWith: 'Seizure-Inducing' },\r\n        { if: 'Refreshing', replaceWith: 'Thought-Provoking' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Addy', \r\n      cost: 9, \r\n      emoji: 'üíä',\r\n      defaultEffect: 'Thought-Provoking',\r\n      interactions: [\r\n        { if: 'Sedating', replaceWith: 'Gingeritis' },\r\n        { if: 'Long-Faced', replaceWith: 'Electrifying' },\r\n        { if: 'Glowing', replaceWith: 'Refreshing' },\r\n        { if: 'Foggy', replaceWith: 'Energizing' },\r\n        { if: 'Explosive', replaceWith: 'Euphoric' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Horse Semen', \r\n      cost: 9, \r\n      emoji: 'üê¥',\r\n      defaultEffect: 'Long-Faced',\r\n      interactions: [\r\n        { if: 'Anti-Gravity', replaceWith: 'Calming' },\r\n        { if: 'Gingeritis', replaceWith: 'Refreshing' },\r\n        { if: 'Thought-Provoking', replaceWith: 'Electrifying' }\r\n      ]\r\n    },\r\n    \r\n    // Meth-specific ingredients\r\n    { \r\n      name: 'Glass Shards', \r\n      cost: 10, \r\n      emoji: 'üîç',\r\n      defaultEffect: 'Explosive',\r\n      interactions: [\r\n        { if: 'Energizing', replaceWith: 'Electrifying' },\r\n        { if: 'Bright-Eyed', replaceWith: 'Explosive' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Blue Food Coloring', \r\n      cost: 12, \r\n      emoji: 'üîµ',\r\n      defaultEffect: 'Glowing',\r\n      interactions: [\r\n        { if: 'Energizing', replaceWith: 'Calming' },\r\n        { if: 'Electrifying', replaceWith: 'Glowing' }\r\n      ]\r\n    },\r\n    \r\n    // Cocaine-specific ingredients\r\n    { \r\n      name: 'Baking Soda', \r\n      cost: 8, \r\n      emoji: 'üßÇ',\r\n      defaultEffect: 'Euphoric',\r\n      interactions: [\r\n        { if: 'Euphoric', replaceWith: 'Energizing' },\r\n        { if: 'Focused', replaceWith: 'Athletic' }\r\n      ]\r\n    },\r\n    { \r\n      name: 'Caffeine Powder', \r\n      cost: 15, \r\n      emoji: '‚òï',\r\n      defaultEffect: 'Energizing',\r\n      interactions: [\r\n        { if: 'Euphoric', replaceWith: 'Bright-Eyed' },\r\n        { if: 'Thought-Provoking', replaceWith: 'Energizing' }\r\n      ]\r\n    }\r\n];\r\n\r\n// For backwards compatibility with existing code\r\nexport const additiveEffects = ingredients.reduce((acc, ingredient) => {\r\n  acc[ingredient.name] = ingredient.defaultEffect;\r\n  return acc;\r\n}, {});\r\n\r\nexport const effectColors = {\r\n    'Anti-Gravity': '#143371',\r\n    'Athletic': '#4d85a8',\r\n    'Balding': '#735620',\r\n    'Bright-Eyed': '#8bc7d2',\r\n    'Calming': '#bda588',\r\n    'Calorie-Dense': '#a3569f',\r\n    'Cyclopean': '#9c784a',\r\n    'Disorienting': '#964733',\r\n    'Electrifying': '#3680a3',\r\n    'Energizing': '#65a94b',\r\n    'Euphoric': '#898043',\r\n    'Explosive': '#932d29',\r\n    'Focused': '#41868f',\r\n    'Foggy': '#686a6b',\r\n    'Gingeritis': '#9c551c',\r\n    'Glowing': '#538e3a',\r\n    'Jennerising': '#925292',\r\n    'Laxative': '#4c281a',\r\n    'Lethal': '#6c1f1a',\r\n    'Long-Faced': '#8b7839',\r\n    'Munchies': '#8b7839',\r\n    'Paranoia': '#733e3d',\r\n    'Refreshing': '#608955',\r\n    'Schizophrenia': '#302d7d',\r\n    'Sedating': '#302c63',\r\n    'Seizure-Inducing': '#817804',\r\n    'Shrinking': '#689280',\r\n    'Slippery': '#5d8195',\r\n    'Smelly': '#4f7822',\r\n    'Sneaky': '#474849',\r\n    'Spicy': '#984231',\r\n    'Thought-Provoking': '#a86b88',\r\n    'Toxic': '#3d6523',\r\n    'Tropic Thunder': '#8c592b',\r\n    'Zombifying': '#558248'\r\n};\r\n\r\n// Drug type information\r\nexport const drugTypes = {\r\n  'weed': {\r\n    name: 'Weed',\r\n    emoji: 'üåø',\r\n    basePrice: 35,\r\n    description: 'Classic cannabis. Each seed produces 12 buds.',\r\n    yieldAmount: 12,\r\n    unit: 'buds'\r\n  },\r\n  'meth': {\r\n    name: 'Meth',\r\n    emoji: 'üíé',\r\n    basePrice: 70,\r\n    description: 'Crystal methamphetamine. Each batch produces 10 crystals.',\r\n    yieldAmount: 10,\r\n    unit: 'crystals'\r\n  },\r\n  'cocaine': {\r\n    name: 'Cocaine',\r\n    emoji: '‚ùÑÔ∏è',\r\n    basePrice: 90,\r\n    description: 'Refined cocaine powder. Each batch produces 10 grams.',\r\n    yieldAmount: 10,\r\n    unit: 'grams'\r\n  }\r\n};\r\n\r\nexport const effectDetails = {\r\n  'Anti-Gravity': { \r\n    multiplier: 0.54, \r\n    type: 'Ability', \r\n    description: 'Causes user to jump higher.'\r\n  },\r\n  'Athletic': { \r\n    multiplier: 0.32, \r\n    type: 'Ability', \r\n    description: 'Causes user to run faster.'\r\n  },\r\n  'Balding': { \r\n    multiplier: 0.30, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to be bald.'\r\n  },\r\n  'Bright-Eyed': { \r\n    multiplier: 0.40, \r\n    type: 'Ability', \r\n    description: 'Causes user\\'s eyes to shine flashlight beams.'\r\n  },\r\n  'Calming': { \r\n    multiplier: 0.10, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have chromatic aberration around screen.'\r\n  },\r\n  'Calorie-Dense': { \r\n    multiplier: 0.28, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to appear fat.'\r\n  },\r\n  'Cyclopean': { \r\n    multiplier: 0.56, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to only have one eye.'\r\n  },\r\n  'Disorienting': { \r\n    multiplier: 0.00, \r\n    type: 'Ability', \r\n    description: 'Causes camera controls for up and down and movement controls for left and right to be inverted.'\r\n  },\r\n  'Electrifying': { \r\n    multiplier: 0.50, \r\n    type: 'Cosmetic', \r\n    description: 'Causes lightning effect on user.'\r\n  },\r\n  'Energizing': { \r\n    multiplier: 0.22, \r\n    type: 'Ability', \r\n    description: 'Causes user to run faster.'\r\n  },\r\n  'Euphoric': { \r\n    multiplier: 0.18, \r\n    type: 'Cosmetic', \r\n    description: 'Causes visual effects and improved mood.'\r\n  },\r\n  'Explosive': { \r\n    multiplier: 0.00, \r\n    type: 'Ability', \r\n    description: 'Causes user to explode after ticking countdown, killing the user and damaging NPCs in the vicinity.'\r\n  },\r\n  'Focused': { \r\n    multiplier: 0.16, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have chromatic aberration around screen.'\r\n  },\r\n  'Foggy': { \r\n    multiplier: 0.36, \r\n    type: 'Cosmetic', \r\n    description: 'Causes a fog cloud effect around user. Also causes user to perceive the world as extremely foggy, significantly limiting visibility.'\r\n  },\r\n  'Gingeritis': { \r\n    multiplier: 0.20, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have red hair.'\r\n  },\r\n  'Glowing': { \r\n    multiplier: 0.48, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have a radioactive glow.'\r\n  },\r\n  'Jennerising': { \r\n    multiplier: 0.42, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to appear female.'\r\n  },\r\n  'Laxative': { \r\n    multiplier: 0.00, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to constantly soil themselves.'\r\n  },\r\n  'Long-Faced': { \r\n    multiplier: 0.52, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user\\'s neck and face to grow.'\r\n  },\r\n  'Munchies': { \r\n    multiplier: 0.12, \r\n    type: 'Ability', \r\n    description: 'Causes user to feel hungry.'\r\n  },\r\n  'Paranoia': { \r\n    multiplier: 0.00, \r\n    type: 'Ability', \r\n    description: 'Causes user to experience paranoia effects.'\r\n  },\r\n  'Refreshing': { \r\n    multiplier: 0.14, \r\n    type: 'Ability', \r\n    description: 'Causes rejuvenating effects.'\r\n  },\r\n  'Schizophrenia': { \r\n    multiplier: 0.00, \r\n    type: 'Ability', \r\n    description: 'Causes user to hear voices and see things.'\r\n  },\r\n  'Sedating': { \r\n    multiplier: 0.26, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have a vignette around screen and mouse smoothing.'\r\n  },\r\n  'Seizure-Inducing': { \r\n    multiplier: 0.00, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have a seizure and shake on the ground.'\r\n  },\r\n  'Shrinking': { \r\n    multiplier: 0.60, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to shrink.'\r\n  },\r\n  'Slippery': { \r\n    multiplier: 0.34, \r\n    type: 'Ability', \r\n    description: 'Causes user to have sluggish, slippery movement.'\r\n  },\r\n  'Smelly': { \r\n    multiplier: 0.00, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have a stinky cloud around them.'\r\n  },\r\n  'Sneaky': { \r\n    multiplier: 0.24, \r\n    type: 'Ability', \r\n    description: 'Improves stealth capabilities.'\r\n  },\r\n  'Spicy': { \r\n    multiplier: 0.38, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user\\'s head to light on fire.'\r\n  },\r\n  'Thought-Provoking': { \r\n    multiplier: 0.44, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user\\'s head to grow in size.'\r\n  },\r\n  'Toxic': { \r\n    multiplier: 0.00, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to vomit.'\r\n  },\r\n  'Tropic Thunder': { \r\n    multiplier: 0.46, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have black skin.'\r\n  },\r\n  'Zombifying': { \r\n    multiplier: 0.58, \r\n    type: 'Cosmetic', \r\n    description: 'Causes user to have green skin and have a zombie-like voice.'\r\n  }\r\n};\r\n\r\nexport const calculateEffectMultiplier = (currentEffects) => {\r\n  // Add a safety check to ensure currentEffects is an array\r\n  if (!currentEffects || !Array.isArray(currentEffects) || currentEffects.length === 0) {\r\n    return 0;\r\n  }\r\n  \r\n  // Sum up the multipliers for all effects\r\n  return currentEffects.reduce((total, effect) => {\r\n    return total + (effectDetails[effect]?.multiplier || 0);\r\n  }, 0);\r\n};\r\n\r\n// Updated sequential mixing function with proper interaction application\r\nexport const calculateStrainEffects = (seedEffect, ingredientsSequence) => {\r\n  if (!seedEffect || !ingredientsSequence || ingredientsSequence.length === 0) {\r\n    return {\r\n      finalEffects: seedEffect ? [seedEffect] : [],\r\n      mixingHistory: seedEffect ? [{\r\n        step: 0,\r\n        ingredient: \"Base Seed\",\r\n        effectsBefore: [],\r\n        effectsAfter: [seedEffect],\r\n        changes: [`Added ${seedEffect}`]\r\n      }] : []\r\n    };\r\n  }\r\n  \r\n  // Start with the seed effect\r\n  let currentEffects = [seedEffect];\r\n  \r\n  // Store the history of effect changes for UI display\r\n  const mixingHistory = [{\r\n    step: 0,\r\n    ingredient: \"Base Seed\",\r\n    effectsBefore: [],\r\n    effectsAfter: [...currentEffects],\r\n    changes: [`Added ${seedEffect}`]\r\n  }];\r\n  \r\n  // Process each ingredient one by one in sequence\r\n  ingredientsSequence.forEach((ingredient, index) => {\r\n    const effectsBefore = [...currentEffects];\r\n    \r\n    // 1. Apply interactions (transformations) based on this ingredient\r\n    if (ingredient.interactions && ingredient.interactions.length > 0) {\r\n      // Create a new array for the effects after transformations\r\n      let transformedEffects = [...currentEffects];\r\n      \r\n      // For each interaction rule, check if the effect exists and transform it\r\n      // ONLY if the replacement effect is not already present\r\n      ingredient.interactions.forEach(interaction => {\r\n        const effectIndex = transformedEffects.findIndex(effect => effect === interaction.if);\r\n        \r\n        // Only apply transformation if:\r\n        // 1. The target effect exists AND\r\n        // 2. The replacement effect is NOT already in the effects list\r\n        if (effectIndex !== -1 && !transformedEffects.includes(interaction.replaceWith)) {\r\n          transformedEffects[effectIndex] = interaction.replaceWith;\r\n        }\r\n      });\r\n      \r\n      currentEffects = transformedEffects;\r\n    }\r\n    \r\n    // Track what effects changed due to interactions\r\n    const transformations = [];\r\n    for (let i = 0; i < Math.min(effectsBefore.length, currentEffects.length); i++) {\r\n      if (currentEffects[i] !== effectsBefore[i]) {\r\n        transformations.push(`${effectsBefore[i]} ‚Üí ${currentEffects[i]}`);\r\n      }\r\n    }\r\n    \r\n    // 2. Add the ingredient's default effect if not already present and under the 8 effects limit\r\n    const defaultEffect = ingredient.defaultEffect;\r\n    \r\n    if (defaultEffect && currentEffects.length < 8 && !currentEffects.includes(defaultEffect)) {\r\n      currentEffects.push(defaultEffect);\r\n      transformations.push(`Added ${defaultEffect}`);\r\n    }\r\n    \r\n    // Limit to maximum 8 effects\r\n    if (currentEffects.length > 8) {\r\n      const removed = currentEffects.slice(8);\r\n      currentEffects = currentEffects.slice(0, 8);\r\n      transformations.push(`Removed effects due to 8-effect limit: ${removed.join(', ')}`);\r\n    }\r\n    \r\n    // Record this step in the mixing history\r\n    mixingHistory.push({\r\n      step: index + 1,\r\n      ingredient: ingredient.name,\r\n      effectsBefore: effectsBefore,\r\n      effectsAfter: [...currentEffects],\r\n      changes: transformations.length > 0 ? transformations : [\"No change\"]\r\n    });\r\n  });\r\n  \r\n  // Return both the final effects and the history for UI display\r\n  return {\r\n    finalEffects: currentEffects,\r\n    mixingHistory: mixingHistory\r\n  };\r\n};\r\n\r\n// Helper function to check what would happen if we add a specific ingredient next\r\nexport const simulateAddIngredient = (currentEffects, ingredient) => {\r\n  if (!currentEffects || !ingredient) return { newEffects: [...currentEffects] };\r\n  \r\n  // Clone current effects\r\n  let newEffects = [...currentEffects];\r\n  const transformations = [];\r\n  \r\n  // Apply interactions\r\n  if (ingredient.interactions && ingredient.interactions.length > 0) {\r\n    ingredient.interactions.forEach(interaction => {\r\n      const effectIndex = newEffects.findIndex(effect => effect === interaction.if);\r\n      \r\n      // Only apply transformation if:\r\n      // 1. The target effect exists AND \r\n      // 2. The replacement effect is NOT already in the effects list\r\n      if (effectIndex !== -1 && !newEffects.includes(interaction.replaceWith)) {\r\n        const oldEffect = newEffects[effectIndex];\r\n        newEffects[effectIndex] = interaction.replaceWith;\r\n        transformations.push({\r\n          from: oldEffect,\r\n          to: interaction.replaceWith\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Add default effect if possible\r\n  let addedDefaultEffect = false;\r\n  if (ingredient.defaultEffect && newEffects.length < 8 && !newEffects.includes(ingredient.defaultEffect)) {\r\n    newEffects.push(ingredient.defaultEffect);\r\n    addedDefaultEffect = true;\r\n  }\r\n  \r\n  return {\r\n    newEffects,\r\n    transformations,\r\n    addedDefaultEffect,\r\n    defaultEffect: ingredient.defaultEffect\r\n  };\r\n};\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}